{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Documents\\\\shubhamcode\\\\TodayNewwork27admin\\\\src\\\\layouts\\\\dashboard\\\\DashboardSidebar.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom'; // material\n\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material'; // components\n\nimport Logo from '../../components/Logo';\nimport Scrollbar from '../../components/Scrollbar';\nimport NavSection from '../../components/NavSection';\nimport { MHidden } from '../../components/@material-extend'; //\n\nimport sidebarConfig from './SidebarConfig';\nimport account from '../../_mocks_/account';\nimport { makeStyles } from \"@material-ui/styles\"; // ----------------------------------------------------------------------\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DRAWER_WIDTH = 280;\nconst RootStyle = styled('div')(({\n  theme\n}) => ({\n  [theme.breakpoints.up('lg')]: {\n    flexShrink: 0,\n    width: DRAWER_WIDTH\n  }\n}));\nconst AccountStyle = styled('div')(({\n  theme\n}) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 2.5),\n  borderRadius: theme.shape.borderRadiusSm,\n  backgroundColor: theme.palette.grey[200]\n})); // ----------------------------------------------------------------------\n\nDashboardSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func\n};\nconst useStyles = makeStyles(theme => ({\n  img: {\n    width: \"123px!important\",\n    height: \"100px!important\",\n    marginLeft: \"33px!important\",\n    marginTop: \"-22px\"\n  },\n  img1: {\n    marginTop: \"-50px!important\"\n  }\n}));\nexport default function DashboardSidebar({\n  isOpenSidebar,\n  onCloseSidebar\n}) {\n  _s();\n\n  const classes = useStyles();\n  const {\n    pathname\n  } = useLocation();\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n  }, [pathname]);\n\n  const renderContent = /*#__PURE__*/_jsxDEV(Scrollbar, {\n    sx: {\n      height: '100%',\n      '& .simplebar-content': {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column'\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 2.5,\n        py: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: RouterLink,\n        to: \"/dashboard/user\",\n        sx: {\n          display: 'inline-flex'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.img,\n          src: \"/static/logo.svg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 5,\n        mx: 2.5\n      },\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        underline: \"none\",\n        component: RouterLink,\n        to: \"#\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavSection, {\n      navConfig: sidebarConfig,\n      className: classes.img1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(RootStyle, {\n    children: [/*#__PURE__*/_jsxDEV(MHidden, {\n      width: \"lgUp\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        open: isOpenSidebar,\n        onClose: onCloseSidebar,\n        PaperProps: {\n          sx: {\n            width: DRAWER_WIDTH\n          }\n        },\n        children: renderContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MHidden, {\n      width: \"lgDown\",\n      children: /*#__PURE__*/_jsxDEV(Drawer, {\n        open: true,\n        variant: \"persistent\",\n        PaperProps: {\n          sx: {\n            width: DRAWER_WIDTH,\n            bgcolor: 'background.default'\n          }\n        },\n        children: renderContent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashboardSidebar, \"uKZ8jqvusmHsYPct4iszcX+JI34=\", false, function () {\n  return [useStyles, useLocation];\n});\n\n_c = DashboardSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardSidebar\");","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Documents/shubhamcode/TodayNewwork27admin/src/layouts/dashboard/DashboardSidebar.js"],"names":["PropTypes","useEffect","Link","RouterLink","useLocation","styled","Box","Button","Drawer","Typography","Avatar","Stack","Logo","Scrollbar","NavSection","MHidden","sidebarConfig","account","makeStyles","DRAWER_WIDTH","RootStyle","theme","breakpoints","up","flexShrink","width","AccountStyle","display","alignItems","padding","spacing","borderRadius","shape","borderRadiusSm","backgroundColor","palette","grey","DashboardSidebar","propTypes","isOpenSidebar","bool","onCloseSidebar","func","useStyles","img","height","marginLeft","marginTop","img1","classes","pathname","renderContent","flexDirection","px","py","mb","mx","sx","bgcolor"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material';\n// components\nimport Logo from '../../components/Logo';\nimport Scrollbar from '../../components/Scrollbar';\nimport NavSection from '../../components/NavSection';\nimport { MHidden } from '../../components/@material-extend';\n//\nimport sidebarConfig from './SidebarConfig';\nimport account from '../../_mocks_/account';\nimport { makeStyles } from \"@material-ui/styles\";\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 280;\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up('lg')]: {\n    flexShrink: 0,\n    width: DRAWER_WIDTH\n  }\n}));\n\nconst AccountStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 2.5),\n  borderRadius: theme.shape.borderRadiusSm,\n  backgroundColor: theme.palette.grey[200]\n}));\n\n// ----------------------------------------------------------------------\n\nDashboardSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func\n};\nconst useStyles = makeStyles(theme => ({\n \n  img: {\n    width: \"123px!important\",\n    height: \"100px!important\",\n    marginLeft: \"33px!important\",\n    marginTop: \"-22px\"\n  },\n  img1: {\n    marginTop: \"-50px!important\",\n  },\n}))\n\nexport default function DashboardSidebar({ isOpenSidebar, onCloseSidebar }) {\n  const classes = useStyles();\n\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n  }, [pathname]);\n\n  const renderContent = (\n    <Scrollbar\n      sx={{\n        height: '100%',\n        '& .simplebar-content': { height: '100%', display: 'flex', flexDirection: 'column' }\n      }}\n    >\n      <Box sx={{ px: 2.5, py: 3 }}>\n        <Box component={RouterLink} to=\"/dashboard/user\" sx={{ display: 'inline-flex' }}>\n        <img  className={classes.img} src=\"/static/logo.svg\"/>\n        </Box>\n      </Box>\n      <Box sx={{ mb: 5, mx: 2.5 }}>\n        <Link underline=\"none\" component={RouterLink} to=\"#\">\n\n        </Link>\n      </Box>\n      <NavSection navConfig={sidebarConfig} className={classes.img1}/>\n    </Scrollbar>\n  );\n\n  return (\n    <RootStyle>\n      <MHidden width=\"lgUp\">\n        <Drawer\n          open={isOpenSidebar}\n          onClose={onCloseSidebar}\n          PaperProps={{\n            sx: { width: DRAWER_WIDTH }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n\n      <MHidden width=\"lgDown\">\n        <Drawer\n          open\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: DRAWER_WIDTH,\n              bgcolor: 'background.default'\n            }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n    </RootStyle>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}