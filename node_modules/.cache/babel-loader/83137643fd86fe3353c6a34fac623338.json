{"ast":null,"code":"export const deviceSize = {\n  mobile: 767,\n  mobileP: 468,\n  mobileLMin: 481,\n  mobileLMax: 767,\n  tabletMin: 768,\n  tabletMax: 1199,\n  desktop: 1200\n};\nexport const device = {\n  mobile: `(max-width: 767px)`,\n  mobileP: `(max-width: 468px)`,\n  mobileL: `(min-width: 481px) and (max-width: 767px)`,\n  tablet: `(min-width: 768px) and (max-width: 1199px)`,\n  desktop: `(min-width: 1200px)`,\n  notMobile: `(min-width: ${deviceSize.tabletMin}px)`,\n  notDesktop: `(max-width: ${deviceSize.desktop - 1}px)`\n};\nexport const orivetColors = {\n  green: \"#2fb7c2\"\n};\nexport const colors = {\n  colorWhite: \"#fff\",\n  primaryButtonBG: \"#000\",\n  color1: \"#febb02\",\n  color2: \"#454B60\",\n  color3: \"#2C2F39\",\n  color4: \"#B6E3EC\",\n  color5: \"#1C1D4C\",\n  color6: \"#4A90E2\",\n  color7: \"#8493A8\",\n  color8: \"#ecedef\",\n  color9: \"#d2d7de\",\n  color10: \"#f9bbbc\",\n  color11: \"#c4c4c4\",\n  color12: \"#f7ba2a\",\n  color13: \"#DD2727\",\n  color14: \"#E24C4C\",\n  color15: \"#f7f7f7\",\n  color16: \"#afb8c4\",\n  formInput: \"#454B60\",\n  h1: \"#454B60\",\n  h2: \"#454B60\",\n  h3: \"#454B60\",\n  h4: \"#454B60\",\n  h5: \"#454B60\",\n  h6: \"#454B60\",\n  p: \"#454B60\",\n  focusOutline: \"#4A90E2\",\n  colorDisabledDate: \"#cecece\"\n};\nexport const variables = {\n  borderRadius: `2px`\n};\nexport const fontSize = (fontSize, lineHeight) => {\n  let lineHeightRel = (parseInt(lineHeight, 10) / parseInt(fontSize, 10)).toFixed(2);\n  return `\n  font-size: ${fontSize};\n  line-height: ${lineHeightRel};\n`;\n};\nexport const hexToRGBA = (h, opacity) => {\n  let r = 0,\n      g = 0,\n      b = 0; // 3 digits\n\n  if (h.length === 4) {\n    r = \"0x\" + h[1] + h[1];\n    g = \"0x\" + h[2] + h[2];\n    b = \"0x\" + h[3] + h[3]; // 6 digits\n  } else if (h.length === 7) {\n    r = \"0x\" + h[1] + h[2];\n    g = \"0x\" + h[3] + h[4];\n    b = \"0x\" + h[5] + h[6];\n  }\n\n  return `rgba(${+r},${+g},${+b}, ${opacity})`;\n};\n/*\n==========================================================================\n   #Fonts\n========================================================================== */\n\nconst fontStack = [{\n  group: \"ptserif\",\n  id: \"regular\",\n  font: [\"PT Serif\", \"Arial\", \"serif\"],\n  weight: 400,\n  style: \"normal\"\n}]; // #Font family\n\nexport const fontFamily = (groupName, groupId) => {\n  fontStack.map(font => {\n    if (font.group === groupName && font.id === groupId) {\n      return `\n        font-family: ${font.font};\n        font-weight: ${font.weight};\n        font-style: ${font.style};\n      `;\n    } else {\n      return false;\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Documents/shubhamcode/TodayNewwork27admin/src/commocomponent/styles/settings.js"],"names":["deviceSize","mobile","mobileP","mobileLMin","mobileLMax","tabletMin","tabletMax","desktop","device","mobileL","tablet","notMobile","notDesktop","orivetColors","green","colors","colorWhite","primaryButtonBG","color1","color2","color3","color4","color5","color6","color7","color8","color9","color10","color11","color12","color13","color14","color15","color16","formInput","h1","h2","h3","h4","h5","h6","p","focusOutline","colorDisabledDate","variables","borderRadius","fontSize","lineHeight","lineHeightRel","parseInt","toFixed","hexToRGBA","h","opacity","r","g","b","length","fontStack","group","id","font","weight","style","fontFamily","groupName","groupId","map"],"mappings":"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","sourcesContent":["export const deviceSize = {\n  mobile: 767,\n  mobileP: 468,\n  mobileLMin: 481,\n  mobileLMax: 767,\n  tabletMin: 768,\n  tabletMax: 1199,\n  desktop: 1200\n};\n\nexport const device = {\n  mobile: `(max-width: 767px)`,\n  mobileP: `(max-width: 468px)`,\n  mobileL: `(min-width: 481px) and (max-width: 767px)`,\n  tablet: `(min-width: 768px) and (max-width: 1199px)`,\n  desktop: `(min-width: 1200px)`,\n  notMobile: `(min-width: ${deviceSize.tabletMin}px)`,\n  notDesktop: `(max-width: ${deviceSize.desktop - 1}px)`\n};\n\nexport const orivetColors = {\n  green: \"#2fb7c2\"\n};\n\nexport const colors = {\n  colorWhite: \"#fff\",\n  primaryButtonBG: \"#000\",\n  color1: \"#febb02\",\n  color2: \"#454B60\",\n  color3: \"#2C2F39\",\n  color4: \"#B6E3EC\",\n  color5: \"#1C1D4C\",\n  color6: \"#4A90E2\",\n  color7: \"#8493A8\",\n  color8: \"#ecedef\",\n  color9: \"#d2d7de\",\n  color10: \"#f9bbbc\",\n  color11: \"#c4c4c4\",\n  color12: \"#f7ba2a\",\n  color13: \"#DD2727\",\n  color14: \"#E24C4C\",\n  color15: \"#f7f7f7\",\n  color16: \"#afb8c4\",\n  formInput: \"#454B60\",\n  h1: \"#454B60\",\n  h2: \"#454B60\",\n  h3: \"#454B60\",\n  h4: \"#454B60\",\n  h5: \"#454B60\",\n  h6: \"#454B60\",\n  p: \"#454B60\",\n  focusOutline: \"#4A90E2\",\n  colorDisabledDate: \"#cecece\"\n};\n\nexport const variables = {\n  borderRadius: `2px`\n};\n\nexport const fontSize = (fontSize, lineHeight) => {\n  let lineHeightRel = (\n    parseInt(lineHeight, 10) / parseInt(fontSize, 10)\n  ).toFixed(2);\n  return `\n  font-size: ${fontSize};\n  line-height: ${lineHeightRel};\n`;\n};\n\nexport const hexToRGBA = (h, opacity) => {\n  let r = 0,\n    g = 0,\n    b = 0;\n\n  // 3 digits\n  if (h.length === 4) {\n    r = \"0x\" + h[1] + h[1];\n    g = \"0x\" + h[2] + h[2];\n    b = \"0x\" + h[3] + h[3];\n\n    // 6 digits\n  } else if (h.length === 7) {\n    r = \"0x\" + h[1] + h[2];\n    g = \"0x\" + h[3] + h[4];\n    b = \"0x\" + h[5] + h[6];\n  }\n\n  return `rgba(${+r},${+g},${+b}, ${opacity})`;\n};\n\n/*\n==========================================================================\n   #Fonts\n========================================================================== */\nconst fontStack = [\n  {\n    group: \"ptserif\",\n    id: \"regular\",\n    font: [\"PT Serif\", \"Arial\", \"serif\"],\n    weight: 400,\n    style: \"normal\"\n  }\n];\n\n// #Font family\nexport const fontFamily = (groupName, groupId) => {\n  fontStack.map(font => {\n    if (font.group === groupName && font.id === groupId) {\n      return `\n        font-family: ${font.font};\n        font-weight: ${font.weight};\n        font-style: ${font.style};\n      `;\n    } else {\n      return false;\n    }\n  });\n};\n"]},"metadata":{},"sourceType":"module"}