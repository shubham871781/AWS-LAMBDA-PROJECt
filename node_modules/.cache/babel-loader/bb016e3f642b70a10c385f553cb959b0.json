{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Documents\\\\shubhamcode\\\\TodayNewwork27admin\\\\src\\\\pages\\\\AnnualReports\\\\AddAnnualReports\\\\AddAnnualReports.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { RadioGroup, TextField, UploadFile } from \"../../../commocomponent/FormFields\";\nimport { Input } from 'reactstrap';\nimport { TEXT_FIELD, EMAIL, PHONEREG, PRICE_NUMBER } from \"../../../Validation\";\nimport * as Yup from \"yup\";\nimport Select from \"react-select\";\nimport { Grid, Typography, Button, Card, CardContent, Box } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Moment from 'moment';\nimport { API_URL, ADDANNUALREPORT } from \"../../../Apiconstant/Apiconstant\"; // components\n\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Page from '../../../components/Page';\nimport { Formik, Form } from \"formik\";\nimport { IMAGE } from \"../../../Validation/index\"; // import { useHistory } from \"react-router-dom\";\n\nimport { CountryDropdown, RegionDropdown, CityDropdown } from 'react-country-region-selector';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  },\n  submit: {\n    top: \"17px\"\n  }\n}));\nexport default function AddAnnualReports() {\n  _s();\n\n  const navigate = useNavigate();\n  const classes = useStyles();\n\n  const success = () => {};\n\n  const url = `${API_URL}/${ADDANNUALREPORT}`;\n  const [driverimgstate, setDriverimgstate] = useState();\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [image, SetImage] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [vehicleimageerror, setVehicleimageerror] = useState(false);\n\n  function next() {\n    if (!image) {\n      setVehicleimageerror(true);\n      return false;\n    } else {\n      setVehicleimageerror(false);\n    }\n  }\n\n  function onFileChange(event) {\n    setDriverimgstate(event);\n    return event;\n  }\n\n  ;\n\n  const handleImageChange = e => {\n    if (e.target.files) {\n      setDriverimgstate(e.target.files[0]);\n      const filesArray = Array.from(e.target.files).map(file => URL.createObjectURL(file));\n      setSelectedFiles(prevImages => prevImages.concat(filesArray));\n      Array.from(e.target.files).map(file => URL.revokeObjectURL(file));\n    }\n  };\n\n  const renderPhotos = source => {\n    return source.map(annual_reports => {\n      SetImage(annual_reports);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    });\n  };\n\n  const [selected, setSelected] = useState([]);\n  const [lables1, setlables] = useState([]);\n  let minOffset = 0,\n      maxOffset = 10;\n  let thisYear = new Date().getFullYear();\n  let allYears = [];\n  let lablearray = [];\n\n  for (let x = 0; x <= maxOffset; x++) {\n    lablearray.push({\n      'label': thisYear - x,\n      'value': thisYear - x\n    });\n  }\n\n  setlables(lablearray);\n\n  function onSubmit(values) {\n    const token = localStorage.getItem(\"token\");\n    var bodyFormData = new FormData();\n    bodyFormData.append('year', selected.value);\n    bodyFormData.append('annual_reports', driverimgstate);\n    setLoading(true);\n    axios.post(url, bodyFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      setLoading(false);\n\n      if (response.data.status == '200') {\n        success(toast.success(response.data.message));\n      }\n    }, error => {});\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Pragati Manav Seva Sansthan (PMSS) Raghogarh\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pb: 5\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Add Annual report\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Formik, {\n                enableReinitialize: true,\n                initialValues: {\n                  year: \"\",\n                  file: \"\"\n                },\n                validationSchema: Yup.object().shape({}),\n                onSubmit: values => {\n                  onSubmit(values);\n                },\n                children: ({\n                  setFieldValue,\n                  touched,\n                  values\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: /*#__PURE__*/_jsxDEV(Grid, {\n                          item: true,\n                          xs: 12,\n                          sm: 6,\n                          children: /*#__PURE__*/_jsxDEV(Select, {\n                            options: lables1,\n                            onChange: setSelected,\n                            value: selected,\n                            selected: selected,\n                            placeholder: \"Select YEAR\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 170,\n                            columnNumber: 57\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 169,\n                          columnNumber: 53\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 168,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: [/*#__PURE__*/_jsxDEV(Input, {\n                          type: \"file\",\n                          id: \"file\",\n                          multiple: true,\n                          onChange: handleImageChange,\n                          accept: \"application/pdf\",\n                          className: \"btn btn-primary\",\n                          hidden: true\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 181,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(UploadFile, {\n                          handleChange: onFileChange,\n                          name: \"file\",\n                          id: \"file\",\n                          variant: \"button\",\n                          buttonColor: \"#fb0\",\n                          buttonText: \"Upload PDF\",\n                          onChange: handleImageChange,\n                          setFieldValue: setFieldValue\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 182,\n                          columnNumber: 57\n                        }, this), vehicleimageerror ? /*#__PURE__*/_jsxDEV(\"div\", {\n                          style: {\n                            color: \"red\"\n                          },\n                          children: \"This is required\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 80\n                        }, this) : '']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 179,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 167,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      fullWidth: true,\n                      variant: \"contained\",\n                      color: \"primary\",\n                      className: classes.submit,\n                      onClick: next,\n                      children: \"ADD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 49\n                    }, this)]\n                  }, \"oneForm\", true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false)\n              }, \"one\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddAnnualReports, \"1++Mms5lpfAuf0ikbEfPurGcePE=\", false, function () {\n  return [useNavigate, useStyles];\n});\n\n_c = AddAnnualReports;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddAnnualReports\");","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Documents/shubhamcode/TodayNewwork27admin/src/pages/AnnualReports/AddAnnualReports/AddAnnualReports.js"],"names":["React","useState","useEffect","axios","RadioGroup","TextField","UploadFile","Input","TEXT_FIELD","EMAIL","PHONEREG","PRICE_NUMBER","Yup","Select","Grid","Typography","Button","Card","CardContent","Box","makeStyles","Moment","API_URL","ADDANNUALREPORT","Link","RouterLink","useNavigate","Page","Formik","Form","IMAGE","CountryDropdown","RegionDropdown","CityDropdown","ToastContainer","toast","useStyles","theme","tableOverflow","overflow","submit","top","AddAnnualReports","navigate","classes","success","url","driverimgstate","setDriverimgstate","selectedFiles","setSelectedFiles","image","SetImage","loading","setLoading","vehicleimageerror","setVehicleimageerror","next","onFileChange","event","handleImageChange","e","target","files","filesArray","Array","from","map","file","URL","createObjectURL","prevImages","concat","revokeObjectURL","renderPhotos","source","annual_reports","selected","setSelected","lables1","setlables","minOffset","maxOffset","thisYear","Date","getFullYear","allYears","lablearray","x","push","onSubmit","values","token","localStorage","getItem","bodyFormData","FormData","append","value","post","headers","then","response","data","status","message","error","pb","root","year","object","shape","setFieldValue","touched","color"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport {\n    RadioGroup, TextField, UploadFile\n} from \"../../../commocomponent/FormFields\";\nimport { Input } from 'reactstrap';\nimport { TEXT_FIELD, EMAIL, PHONEREG, PRICE_NUMBER } from \"../../../Validation\";\nimport * as Yup from \"yup\";\nimport Select from \"react-select\";\n\nimport {\n    Grid,\n    Typography,\n    Button,\n    Card,\n    CardContent,\n    Box,\n} from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Moment from 'moment';\nimport { API_URL, ADDANNUALREPORT } from \"../../../Apiconstant/Apiconstant\"\n// components\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Page from '../../../components/Page';\nimport { Formik, Form } from \"formik\";\nimport { IMAGE } from \"../../../Validation/index\"\n// import { useHistory } from \"react-router-dom\";\nimport { CountryDropdown, RegionDropdown, CityDropdown } from 'react-country-region-selector';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    submit: {\n        top: \"17px\"\n    },\n}))\n\nexport default function AddAnnualReports() {\n    const navigate = useNavigate();\n    const classes = useStyles();\n    const success = () => { }\n    const url = `${API_URL}/${ADDANNUALREPORT}`;\n    const [driverimgstate, setDriverimgstate] = useState();\n\n\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n\n    const [image, SetImage] = useState(false)\n    const [loading, setLoading] = useState(false);\n    const [vehicleimageerror, setVehicleimageerror] = useState(false);\n\n    function next() {\n        if (!image) {\n            setVehicleimageerror(true);\n            return false;\n        } else {\n            setVehicleimageerror(false);\n        }\n    }\n    function onFileChange(event) {\n        setDriverimgstate(event);\n        return event;\n    };\n\n    const handleImageChange = (e) => {\n        if (e.target.files) {\n            setDriverimgstate(e.target.files[0]);\n            const filesArray = Array.from(e.target.files).map((file) =>\n                URL.createObjectURL(file)\n            );\n            setSelectedFiles((prevImages) =>\n                prevImages.concat(filesArray));\n            Array.from(e.target.files).map(\n                (file) =>\n                    URL.revokeObjectURL(file)\n            );\n        }\n    }\n\n    const renderPhotos = (source) => {\n        return source.map((annual_reports) => {\n            SetImage(annual_reports);\n            return <></>\n                ;\n        });\n    };\n    const [selected, setSelected] = useState([]);\n    const [lables1, setlables] = useState([]);\n    let minOffset = 0, maxOffset = 10;\n    let thisYear = (new Date()).getFullYear();\n    let allYears = [];\n    let lablearray = [];\n    for (let x = 0; x <= maxOffset; x++) {\n        lablearray.push({ 'label': thisYear - x , 'value': thisYear - x })\n    }\n    setlables(lablearray);\n      function onSubmit(values) {\n        const token = localStorage.getItem(\"token\");\n        var bodyFormData = new FormData();\n        bodyFormData.append('year', selected.value);\n        bodyFormData.append('annual_reports', driverimgstate);\n        setLoading(true);\n\n        axios.post(url, bodyFormData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            }\n        })\n\n            .then((response) => {\n                setLoading(false);\n\n                if (response.data.status == '200') {\n                    success(toast.success(response.data.message))\n\n                }\n            }, (error) => {\n            });\n\n\n\n    }\n\n    return (\n        <>\n            <ToastContainer />\n            <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                <Box sx={{ pb: 5 }}>\n                    <Typography variant=\"h4\">Add Annual report</Typography>\n                </Box>\n\n                <Card className={classes.root} variant=\"outlined\">\n\n                    <CardContent>\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n\n                                <Formik\n                                    key=\"one\"\n                                    enableReinitialize\n                                    initialValues={{\n                                        year: \"\",\n                                        file: \"\"\n\n                                    }}\n                                    validationSchema={Yup.object().shape({\n                                      \n\n\n                                    })}\n\n                                    onSubmit={values => {\n                                        onSubmit(values)\n\n\n                                    }}\n\n                                >\n                                    {({ setFieldValue,\n                                        touched,\n                                        values, }) => (\n                                        <>\n                                            <Form key=\"oneForm\">\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={12} sm={6}>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <Select\n                                                            options={lables1}\n                                                            onChange={setSelected}\n                                                            value={selected}\n                                                            selected={selected}\n                                                            placeholder=\"Select YEAR\"\n                                                        />\n                                                    </Grid>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n\n                                                        <Input type=\"file\" id=\"file\" multiple onChange={handleImageChange} accept=\"application/pdf\" className=\"btn btn-primary\" hidden />\n                                                        <UploadFile handleChange={onFileChange} name=\"file\" id=\"file\" variant=\"button\" buttonColor=\"#fb0\" buttonText=\"Upload PDF\" onChange={handleImageChange} setFieldValue={setFieldValue}>\n\n                                                        </UploadFile>\n                                                        {(vehicleimageerror) ? <div style={{ color: \"red\" }}>This is required</div> : ''}\n\n                                                    </Grid>\n                                                </Grid>\n                                                <Button\n                                                    type=\"submit\"\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    className={classes.submit}\n                                                    onClick={next}\n                                                >\n                                                    ADD\n                                                </Button>\n\n                                            </Form>\n                                        </>\n                                    )}\n                                </Formik>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Page>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}