{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Documents\\\\shubhamcode\\\\TodayNewwork27admin\\\\src\\\\pages\\\\Pressreleases\\\\AddPressreleases\\\\AddPressreleases.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport { RadioGroup, TextField } from \"../../../commocomponent/FormFields\";\nimport { Input } from 'reactstrap';\nimport { TEXT_FIELD, EMAIL, PHONEREG, PRICE_NUMBER } from \"../../../Validation\";\nimport * as Yup from \"yup\";\nimport { Grid, Typography, Button, Card, CardContent, Box } from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Moment from 'moment';\nimport { API_URL, ADDPRESSRELEASES } from \"../../../Apiconstant/Apiconstant\"; // components\n\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Select from \"react-select\";\nimport Page from '../../../components/Page';\nimport { Formik, Form } from \"formik\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Upload } from \"antd\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser from 'react-html-parser';\nimport { CustomSelect } from '../../../commocomponent/FormFields';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  tableOverflow: {\n    overflow: 'auto'\n  },\n  submit: {\n    top: \"17px\"\n  },\n  avatarpreview: {\n    width: \"136px\",\n    height: \"131px\"\n  },\n  svg: {\n    display: \"noneimportant\"\n  }\n}));\nexport default function AddPressreleases() {\n  _s();\n\n  const [replymsg, setreplymsg] = useState('');\n  ClassicEditor.defaultConfig = {\n    toolbar: {\n      items: ['heading', '|', 'bold', 'italic', '|', 'link', '|', 'bulletedList', 'numberedList', '|', 'insertTable', '|', 'undo', 'redo']\n    },\n    table: {\n      contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']\n    },\n    language: 'en'\n  };\n  const navigate = useNavigate();\n\n  const success = () => {};\n\n  const classes = useStyles();\n  const [userRequest, setUserRequest] = useState([]);\n  const [vehiclemage, setVehiclemage] = useState(\"notset\");\n\n  const onChange = ({\n    fileList\n  }) => {\n    setVehiclemage({\n      fileList\n    });\n  };\n\n  const onPreview = async file => {\n    let src = file.url;\n\n    if (!src) {\n      src = await new Promise(resolve => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.originFileObj);\n\n        reader.onload = () => resolve(reader.result);\n      });\n    }\n\n    const image = new Image();\n    image.src = src;\n    const imgWindow = window.open(src);\n    imgWindow.document.write(image.outerHTML);\n  };\n\n  const [selectedFiles, setSelectedFiles] = useState([]);\n  const [image, SetImage] = useState(\"notset\");\n  var resultdiv = {\n    display: \"flex\"\n  };\n\n  const renderPhotos = source => {\n    return source.map(photo => {\n      SetImage(photo);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    });\n  };\n\n  const onSubmit = (values, e) => {\n    const url1 = `${API_URL}/${ADDPRESSRELEASES}`;\n    var bodyFormData = new FormData();\n    bodyFormData.append(\"title\", values.title);\n    bodyFormData.append(\"shortdescription\", values.shortdescription);\n    bodyFormData.append(\"longdescription\", replymsg);\n    bodyFormData.append(\"posttype\", values.posttype);\n\n    if (vehiclemage.fileList) {\n      for (var i = 0; i < vehiclemage.fileList.length; i++) {\n        bodyFormData.append(\"Pressreleasesimage\", vehiclemage.fileList[i].originFileObj);\n      }\n    }\n\n    axios.post(url1, bodyFormData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        success(toast.success(response.data.message));\n        navigate('/dashboard/press-releases', {\n          replace: true\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Page, {\n      title: \"Pragati Manav Seva Sansthan (PMSS) Raghogarh\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pb: 5\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          children: \"Add Press Releases\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        variant: \"outlined\",\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 4,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Formik, {\n                enableReinitialize: true,\n                initialValues: {\n                  title: \"\",\n                  shortdescription: \"\",\n                  longdescription: \"\"\n                },\n                validationSchema: Yup.object().shape({\n                  shortdescription: Yup.string().required(\"User Name is required\"),\n                  title: Yup.string().required(\"User Name is required\")\n                }),\n                onSubmit: values => {\n                  onSubmit(values);\n                  console.log(values);\n                },\n                children: ({\n                  setFieldValue,\n                  touched,\n                  values\n                }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Title\",\n                          type: \"text\",\n                          name: \"title\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 188,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 187,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: /*#__PURE__*/_jsxDEV(TextField, {\n                          label: \"Short Description\",\n                          type: \"text\",\n                          name: \"shortdescription\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 195,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 194,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: /*#__PURE__*/_jsxDEV(CKEditor, {\n                          editor: ClassicEditor,\n                          data: \"<p>Hello from CKEditor 5!</p>\",\n                          onReady: editor => {\n                            // You can store the \"editor\" and use when it is needed.\n                            console.log('Editor is ready to use!', editor);\n                          },\n                          onChange: (event, editor) => {\n                            const data = editor.getData();\n                            setreplymsg(data);\n                            console.log({\n                              event,\n                              editor,\n                              data\n                            });\n                          },\n                          onBlur: (event, editor) => {\n                            console.log('Blur.', editor);\n                          },\n                          onFocus: (event, editor) => {\n                            console.log('Focus.', editor);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 202,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: classes.edit,\n                          children: /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"avatar-upload\",\n                            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                              className: classes.avatarpreview\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 226,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              className: \"result\",\n                              style: resultdiv,\n                              id: \"file-image\",\n                              children: renderPhotos(selectedFiles)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 229,\n                              columnNumber: 65\n                            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                              children: /*#__PURE__*/_jsxDEV(Upload, {\n                                name: \"choosephoto\",\n                                listType: \"picture-card\",\n                                onChange: onChange,\n                                onPreview: onPreview,\n                                children: \"Upload\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 237,\n                                columnNumber: 69\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 236,\n                              columnNumber: 65\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 225,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 224,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 223,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        xs: 12,\n                        sm: 6,\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          for: \"select\",\n                          children: \"Select File type *\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 250,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                          name: \"posttype\",\n                          children: [{\n                            \"value\": \"withimg\",\n                            \"label\": \"withimg\"\n                          }, {\n                            \"value\": \"withvedio\",\n                            \"label\": \"withvedio\"\n                          }]\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 251,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 249,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      type: \"submit\",\n                      fullWidth: true,\n                      variant: \"contained\",\n                      color: \"primary\",\n                      className: classes.submit,\n                      children: \"ADD\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 49\n                    }, this)]\n                  }, \"oneForm\", true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false)\n              }, \"one\", false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddPressreleases, \"DzVCXxan2d+ihvq63IDUTLt5fqY=\", false, function () {\n  return [useNavigate, useStyles];\n});\n\n_c = AddPressreleases;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPressreleases\");","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Documents/shubhamcode/TodayNewwork27admin/src/pages/Pressreleases/AddPressreleases/AddPressreleases.js"],"names":["React","useState","useEffect","axios","RadioGroup","TextField","Input","TEXT_FIELD","EMAIL","PHONEREG","PRICE_NUMBER","Yup","Grid","Typography","Button","Card","CardContent","Box","makeStyles","Moment","API_URL","ADDPRESSRELEASES","Link","RouterLink","useNavigate","Select","Page","Formik","Form","ToastContainer","toast","Upload","CKEditor","ClassicEditor","ReactHtmlParser","CustomSelect","useStyles","theme","tableOverflow","overflow","submit","top","avatarpreview","width","height","svg","display","AddPressreleases","replymsg","setreplymsg","defaultConfig","toolbar","items","table","contentToolbar","language","navigate","success","classes","userRequest","setUserRequest","vehiclemage","setVehiclemage","onChange","fileList","onPreview","file","src","url","Promise","resolve","reader","FileReader","readAsDataURL","originFileObj","onload","result","image","Image","imgWindow","window","open","document","write","outerHTML","selectedFiles","setSelectedFiles","SetImage","resultdiv","renderPhotos","source","map","photo","onSubmit","values","e","url1","bodyFormData","FormData","append","title","shortdescription","posttype","i","length","post","headers","then","response","status","data","message","replace","pb","root","longdescription","object","shape","string","required","console","log","setFieldValue","touched","editor","event","getData","edit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport {\n    RadioGroup, TextField\n} from \"../../../commocomponent/FormFields\";\nimport { Input } from 'reactstrap';\nimport { TEXT_FIELD, EMAIL, PHONEREG, PRICE_NUMBER } from \"../../../Validation\";\nimport * as Yup from \"yup\";\n\nimport {\n    Grid,\n    Typography,\n    Button,\n    Card,\n    CardContent,\n    Box,\n} from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Moment from 'moment';\nimport { API_URL, ADDPRESSRELEASES } from \"../../../Apiconstant/Apiconstant\"\n// components\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Select from \"react-select\";\nimport Page from '../../../components/Page';\nimport { Formik, Form } from \"formik\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Upload } from \"antd\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser from 'react-html-parser';\nimport { CustomSelect } from '../../../commocomponent/FormFields';\n\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    submit: {\n        top: \"17px\"\n    },\n    avatarpreview: {\n        width: \"136px\",\n        height: \"131px\"\n    },\n    svg: {\n        display: \"noneimportant\"\n    }\n}))\n\nexport default function AddPressreleases() {\n    const [replymsg, setreplymsg] = useState('');\n    ClassicEditor.defaultConfig = {\n        toolbar: {\n            items: [\n                'heading',\n                '|',\n                'bold',\n                'italic',\n                '|',\n                'link',\n                '|',\n                'bulletedList',\n                'numberedList',\n                '|',\n                'insertTable',\n                '|',\n                'undo',\n                'redo'\n            ]\n        },\n        table: {\n            contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']\n        },\n        language: 'en'\n    };\n    const navigate = useNavigate();\n    const success = () => { }\n    const classes = useStyles();\n    const [userRequest, setUserRequest] = useState([]);\n    const [vehiclemage, setVehiclemage] = useState(\"notset\");\n\n\n    const onChange = ({ fileList }) => {\n        setVehiclemage({ fileList });\n    };\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow.document.write(image.outerHTML);\n    };\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const [image, SetImage] = useState(\"notset\");\n\n    var resultdiv = {\n        display: \"flex\",\n    };\n\n    const renderPhotos = (source) => {\n        return source.map((photo) => {\n            SetImage(photo);\n            return <></>;\n        });\n    };\n\n    const onSubmit = (values, e) => {\n        const url1 = `${API_URL}/${ADDPRESSRELEASES}`;\n        var bodyFormData = new FormData();\n        bodyFormData.append(\"title\", values.title);\n        bodyFormData.append(\"shortdescription\", values.shortdescription);\n        bodyFormData.append(\"longdescription\", replymsg);\n        bodyFormData.append(\"posttype\", values.posttype);\n\n        if (vehiclemage.fileList) {\n            for (var i = 0; i < vehiclemage.fileList.length; i++) {\n                bodyFormData.append(\"Pressreleasesimage\", vehiclemage.fileList[i].originFileObj);\n            }\n        }\n        axios\n            .post(url1, bodyFormData,\n                {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    }\n                })\n            .then((response) => {\n\n                if (response.status === 200) {\n                    success(toast.success(response.data.message))\n                    navigate('/dashboard/press-releases', { replace: true });\n                }\n            })\n\n    };\n    return (\n        <>\n            <ToastContainer />\n            <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                <Box sx={{ pb: 5 }}>\n                    <Typography variant=\"h4\">Add Press Releases</Typography>\n                </Box>\n\n                <Card className={classes.root} variant=\"outlined\">\n\n                    <CardContent>\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n\n                                <Formik\n                                    key=\"one\"\n                                    enableReinitialize\n                                    initialValues={{\n                                        title: \"\",\n                                        shortdescription: \"\",\n                                        longdescription: \"\",\n                                    }}\n                                    validationSchema={Yup.object().shape({\n\n                                        shortdescription: Yup.string()\n                                            .required(\"User Name is required\"),\n                                        title: Yup.string()\n                                            .required(\"User Name is required\")\n                                    })}\n\n                                    onSubmit={values => {\n                                        onSubmit(values)\n                                        console.log(values)\n                                    }}\n\n                                >\n                                    {({ setFieldValue,\n                                        touched,\n                                        values, }) => (\n                                        <>\n                                            <Form key=\"oneForm\">\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Title\"\n                                                            type=\"text\"\n                                                            name=\"title\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Short Description\"\n                                                            type=\"text\"\n                                                            name=\"shortdescription\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <CKEditor\n                                                            editor={ClassicEditor}\n                                                            data=\"<p>Hello from CKEditor 5!</p>\"\n\n                                                            onReady={editor => {\n                                                                // You can store the \"editor\" and use when it is needed.\n                                                                console.log('Editor is ready to use!', editor);\n                                                            }}\n                                                            onChange={(event, editor) => {\n                                                                const data = editor.getData();\n                                                                setreplymsg(data);\n                                                                console.log({ event, editor, data });\n                                                            }}\n                                                            onBlur={(event, editor) => {\n                                                                console.log('Blur.', editor);\n                                                            }}\n                                                            onFocus={(event, editor) => {\n                                                                console.log('Focus.', editor);\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <div className={classes.edit}>\n                                                            <div className=\"avatar-upload\">\n                                                                <div className={classes.avatarpreview}>\n\n                                                                </div>\n                                                                <div\n                                                                    className=\"result\"\n                                                                    style={resultdiv}\n                                                                    id=\"file-image\"\n                                                                >\n                                                                    {renderPhotos(selectedFiles)}\n                                                                </div>\n                                                                <div>\n                                                                    <Upload\n                                                                        name=\"choosephoto\"\n                                                                        listType=\"picture-card\"\n                                                                        onChange={onChange}\n                                                                        onPreview={onPreview}\n                                                                    >\n                                                                        {\"Upload\"}\n                                                                    </Upload>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <label for=\"select\">Select File type *</label>\n                                                        <CustomSelect\n                                                            name=\"posttype\"\n                                                            children={[{ \"value\": \"withimg\", \"label\": \"withimg\" }, { \"value\": \"withvedio\", \"label\": \"withvedio\" }]}\n                                                        />\n                                                    </Grid>\n\n\n                                                </Grid>\n                                                <Button\n                                                    type=\"submit\"\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    className={classes.submit}\n                                                >\n                                                    ADD\n                                                </Button>\n\n                                            </Form>\n                                        </>\n                                    )}\n                                </Formik>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Page>\n        </>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}