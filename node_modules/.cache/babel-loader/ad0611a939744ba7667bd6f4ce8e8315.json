{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Documents\\\\shubhamcode\\\\TodayNewwork27admin\\\\src\\\\commocomponent\\\\FormFields\\\\UploadFile\\\\UploadFile.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field, useField } from \"formik\";\nimport { UploadFileWrapperStyled } from \"./UploadFile.style\";\nimport { ErrorMessage } from \"../../ErrorMessage\";\nimport ArrowRight from \"../../Icons/ArrowRight\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UploadFile = ({\n  name,\n  handleChange,\n  setFieldValue,\n  variant,\n  buttonText,\n  buttonColor,\n  buttonFullWidth,\n  disabled\n}) => {\n  _s();\n\n  const [field, meta] = useField(name);\n  const {\n    error,\n    touched\n  } = meta;\n  const button = variant === \"button\" ? /*#__PURE__*/_jsxDEV(\"span\", {\n    className: \"button\",\n    children: [buttonText, /*#__PURE__*/_jsxDEV(ArrowRight, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(ArrowRight, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n  const labelClass = variant === \"button\" ? \"label-button\" : \"label-icon\";\n  return /*#__PURE__*/_jsxDEV(UploadFileWrapperStyled, {\n    className: \"upload-file\",\n    fullWidth: buttonFullWidth,\n    color: buttonColor,\n    variant: \"button\",\n    children: [/*#__PURE__*/_jsxDEV(Field, {\n      id: name,\n      type: \"file\",\n      name: name,\n      onChange: e => {\n        handleChange(e.currentTarget.files[0]);\n        setFieldValue(name, e.target.value);\n      },\n      disabled: disabled\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: name,\n      className: labelClass,\n      children: button\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error,\n      touched: touched\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UploadFile, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = UploadFile;\nUploadFile.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func,\n  setFieldValue: PropTypes.func,\n  variant: PropTypes.oneOf([\"button\", \"icon\"]),\n  buttonText: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  buttonFullWidth: PropTypes.bool,\n  buttonColor: PropTypes.string\n};\nUploadFile.defaultProps = {\n  buttonText: \"Upload\",\n  buttonColor: \"primary\"\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"UploadFile\");","map":{"version":3,"sources":["C:/Users/Admin/OneDrive/Documents/shubhamcode/TodayNewwork27admin/src/commocomponent/FormFields/UploadFile/UploadFile.js"],"names":["React","PropTypes","Field","useField","UploadFileWrapperStyled","ErrorMessage","ArrowRight","UploadFile","name","handleChange","setFieldValue","variant","buttonText","buttonColor","buttonFullWidth","disabled","field","meta","error","touched","button","labelClass","e","currentTarget","files","target","value","propTypes","string","isRequired","func","oneOf","fullWidth","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field, useField } from \"formik\";\n\nimport { UploadFileWrapperStyled } from \"./UploadFile.style\";\nimport { ErrorMessage } from \"../../ErrorMessage\";\nimport ArrowRight from \"../../Icons/ArrowRight\";\n\nexport const UploadFile = ({\n  name,\n  handleChange,\n  setFieldValue,\n  variant,\n  buttonText,\n  buttonColor,\n  buttonFullWidth,\n  disabled\n}) => {\n  const [field, meta] = useField(name);\n  const { error, touched } = meta;\n  const button =\n    variant === \"button\" ? (\n      <span className=\"button\">\n        {buttonText}\n        <ArrowRight />\n      </span>\n    ) : (\n      <ArrowRight />\n    );\n\n  const labelClass = variant === \"button\" ? \"label-button\" : \"label-icon\";\n\n  return (\n    <UploadFileWrapperStyled\n      className=\"upload-file\"\n      fullWidth={buttonFullWidth}\n      color={buttonColor}\n      variant=\"button\"\n    >\n      <Field\n        id={name}\n        type=\"file\"\n        name={name}\n        onChange={e => {\n          handleChange(e.currentTarget.files[0]);\n          setFieldValue(name, e.target.value);\n        }}\n        disabled={disabled}\n      />\n      <label htmlFor={name} className={labelClass}>\n        {button}\n      </label>\n      <ErrorMessage error={error} touched={touched} />\n    </UploadFileWrapperStyled>\n  );\n};\nUploadFile.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func,\n  setFieldValue: PropTypes.func,\n  variant: PropTypes.oneOf([\"button\", \"icon\"]),\n  buttonText: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  buttonFullWidth: PropTypes.bool,\n  buttonColor: PropTypes.string\n};\n\nUploadFile.defaultProps = {\n  buttonText: \"Upload\",\n  buttonColor: \"primary\"\n};\n"]},"metadata":{},"sourceType":"module"}