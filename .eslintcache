[{"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\index.js":"1","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\App.js":"2","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\reportWebVitals.js":"3","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\serviceWorker.js":"4","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\routes.js":"5","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\globalStyles.js":"6","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\charts\\BaseOptionChart.js":"7","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\ScrollToTop.js":"8","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\index.js":"9","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\LogoOnlyLayout.js":"10","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Register.js":"11","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Login.js":"12","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\DashboardApp.js":"13","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Products.js":"14","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Blog.js":"15","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Page404.js":"16","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Contact\\Contact.js":"17","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\ContactInquiry\\ContactInquiry.js":"18","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Frontendsetting\\Frontendsetting.js":"19","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Pressreleases\\Pressreleases.js":"20","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Donation\\Donation.js":"21","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Galleryimage\\Galleryimage.js":"22","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Pressreleases\\AddPressreleases\\AddPressreleases.js":"23","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\AnnualReports\\AddAnnualReports\\AddAnnualReports.js":"24","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Pressreleases\\EditPressreleases\\EditPressreleases.js":"25","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\AnnualReports\\AnnualReports.js":"26","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Donation\\Adddonation\\Adddonation.js":"27","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Donation\\Editdonation\\Editdonation.js":"28","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\palette.js":"29","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\shape.js":"30","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\typography.js":"31","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\shadows.js":"32","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\index.js":"33","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\Logo.js":"34","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\Page.js":"35","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\AuthLayout.js":"36","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\SearchNotFound.js":"37","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\Scrollbar.js":"38","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\_mocks_\\blog.js":"39","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\authentication\\AuthSocial.js":"40","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\_mocks_\\products.js":"41","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\Apiconstant\\Apiconstant.js":"42","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Annualreport\\index.js":"43","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\Validation\\index.js":"44","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\index.js":"45","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\DashboardSidebar.js":"46","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\DashboardNavbar.js":"47","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\@material-extend\\index.js":"48","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\index.js":"49","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\authentication\\login\\index.js":"50","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\authentication\\register\\index.js":"51","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\index.js":"52","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\index.js":"53","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\blog\\index.js":"54","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Loader\\index.js":"55","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\index.js":"56","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\utils\\mockImages.js":"57","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Annualreport\\UserMoreMenu.js":"58","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Annualreport\\UserListToolbar.js":"59","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Annualreport\\UserListHead.js":"60","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Autocomplete.js":"61","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\IconButton.js":"62","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Typography.js":"63","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\_mocks_\\account.js":"64","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\NotificationsPopover.js":"65","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\MotionContainer.js":"66","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\authentication\\register\\RegisterForm.js":"67","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\blog\\BlogPostsSort.js":"68","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\blog\\BlogPostCard.js":"69","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\blog\\BlogPostsSearch.js":"70","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\TotalDonationAmount.js":"71","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\TotalDonationUserToday.js":"72","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Loader\\Loader.js":"73","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\TotalDonation.js":"74","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\Select\\Select.js":"75","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\CheckBox\\CheckBox.js":"76","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\variants\\index.js":"77","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\MenuPopover.js":"78","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\UploadFile\\index.js":"79","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\SvgIconStyle.js":"80","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\utils\\formatNumber.js":"81","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Loader\\Loader.style.js":"82","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\RadioGroup\\index.js":"83","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\TextField\\index.js":"84","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\CheckBox\\Checkbox.style.js":"85","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\Select\\Select.style.js":"86","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\ErrorMessage\\index.js":"87","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\variants\\Wrap.js":"88","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\index.js":"89","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\UploadFile\\UploadFile.js":"90","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\HelpText\\index.js":"91","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\FormFields.style.js":"92","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\ErrorMessage\\ErrorMessage.js":"93","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\styles\\settings.js":"94","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\variants\\bounce\\index.js":"95","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\UserMoreMenu.js":"96","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\UserListToolbar.js":"97","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Icons\\ArrowRight.js":"98","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\HelpText\\HelpText.js":"99","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\UploadFile\\UploadFile.style.js":"100","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\ErrorMessage\\ErrorMessage.style.js":"101","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\variants\\bounce\\BounceOut.js":"102","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\variants\\bounce\\BounceIn.js":"103","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\HelpText\\HelpText.style.js":"104","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\UserListHead.js":"105","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\TextField\\TextField.js":"106","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\RadioGroup\\RadioGroup.js":"107","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\TextField\\TextField.style.js":"108","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\RadioGroup\\RadioGroup.style.js":"109","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Label\\index.js":"110","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Label\\Label.js":"111","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\utils\\formatTime.js":"112","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Label\\Label.style.js":"113","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\TotalDonationUser.js":"114","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppWebsiteVisits.js":"115","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppTrafficBySite.js":"116","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\charts\\index.js":"117","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppNewsUpdate.js":"118","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppTasks.js":"119","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppOrderTimeline.js":"120","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\TotalDonationToday.js":"121","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppCurrentVisits.js":"122","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppConversionRates.js":"123","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppCurrentSubject.js":"124","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\ProductSort.js":"125","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\ProductList.js":"126","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\ProductFilterSidebar.js":"127","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\ProductCartWidget.js":"128","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\ProductCard.js":"129","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\authentication\\login\\LoginForm.js":"130","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\@material-extend\\MHidden.js":"131","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\LanguagePopover.js":"132","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\Searchbar.js":"133","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\AccountPopover.js":"134","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\SidebarConfig.js":"135","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\NavSection.js":"136","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\ColorPreview.js":"137","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\Label.js":"138","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\utils\\index.js":"139","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\ColorManyPicker.js":"140","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Backdrop.js":"141","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Tooltip.js":"142","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Button.js":"143","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Paper.js":"144","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Input.js":"145","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Lists.js":"146","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Card.js":"147","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Galleryimage\\index.js":"148","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Pressreleases\\index.js":"149","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Othertable\\index.js":"150","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Galleryimage\\UserMoreMenu.js":"151","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Galleryimage\\UserListToolbar.js":"152","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Galleryimage\\UserListHead.js":"153","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Pressreleases\\UserMoreMenu.js":"154","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Pressreleases\\UserListHead.js":"155","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Pressreleases\\UserListToolbar.js":"156","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Othertable\\UserMoreMenu.js":"157","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Othertable\\UserListToolbar.js":"158","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Othertable\\UserListHead.js":"159"},{"size":862,"mtime":1652336614435,"results":"160","hashOfConfig":"161"},{"size":550,"mtime":1646984129751,"results":"162","hashOfConfig":"161"},{"size":364,"mtime":1631941130000,"results":"163","hashOfConfig":"161"},{"size":5040,"mtime":1631941130000,"results":"164","hashOfConfig":"161"},{"size":2775,"mtime":1652682157264,"results":"165","hashOfConfig":"161"},{"size":1876,"mtime":1631941130000,"results":"166","hashOfConfig":"161"},{"size":5404,"mtime":1631941130000,"results":"167","hashOfConfig":"161"},{"size":321,"mtime":1631941130000,"results":"168","hashOfConfig":"161"},{"size":1028,"mtime":1631941130000,"results":"169","hashOfConfig":"161"},{"size":778,"mtime":1631941130000,"results":"170","hashOfConfig":"161"},{"size":2712,"mtime":1640265196000,"results":"171","hashOfConfig":"161"},{"size":2583,"mtime":1642485140000,"results":"172","hashOfConfig":"161"},{"size":1399,"mtime":1642485344000,"results":"173","hashOfConfig":"161"},{"size":1882,"mtime":1631941130000,"results":"174","hashOfConfig":"161"},{"size":1640,"mtime":1640672896000,"results":"175","hashOfConfig":"161"},{"size":1855,"mtime":1631941130000,"results":"176","hashOfConfig":"161"},{"size":18837,"mtime":1643266846000,"results":"177","hashOfConfig":"161"},{"size":11008,"mtime":1643266908000,"results":"178","hashOfConfig":"161"},{"size":34794,"mtime":1645688468717,"results":"179","hashOfConfig":"161"},{"size":11475,"mtime":1643267912000,"results":"180","hashOfConfig":"161"},{"size":11795,"mtime":1652439843630,"results":"181","hashOfConfig":"161"},{"size":12787,"mtime":1643267130000,"results":"182","hashOfConfig":"161"},{"size":12486,"mtime":1643268566000,"results":"183","hashOfConfig":"161"},{"size":7834,"mtime":1651921207593,"results":"184","hashOfConfig":"161"},{"size":15671,"mtime":1643268964000,"results":"185","hashOfConfig":"161"},{"size":11520,"mtime":1656398397487,"results":"186","hashOfConfig":"161"},{"size":14481,"mtime":1646991615846,"results":"187","hashOfConfig":"161"},{"size":17591,"mtime":1647412190674,"results":"188","hashOfConfig":"161"},{"size":2881,"mtime":1640599566000,"results":"189","hashOfConfig":"161"},{"size":179,"mtime":1631941130000,"results":"190","hashOfConfig":"161"},{"size":2068,"mtime":1640600288000,"results":"191","hashOfConfig":"161"},{"size":3936,"mtime":1631941130000,"results":"192","hashOfConfig":"161"},{"size":1218,"mtime":1631941130000,"results":"193","hashOfConfig":"161"},{"size":343,"mtime":1640338544000,"results":"194","hashOfConfig":"161"},{"size":536,"mtime":1643097078000,"results":"195","hashOfConfig":"161"},{"size":1244,"mtime":1631941130000,"results":"196","hashOfConfig":"161"},{"size":477,"mtime":1642404850000,"results":"197","hashOfConfig":"161"},{"size":1478,"mtime":1631941130000,"results":"198","hashOfConfig":"161"},{"size":1922,"mtime":1631941130000,"results":"199","hashOfConfig":"161"},{"size":1134,"mtime":1631941130000,"results":"200","hashOfConfig":"161"},{"size":1928,"mtime":1631941130000,"results":"201","hashOfConfig":"161"},{"size":2421,"mtime":1652342064645,"results":"202","hashOfConfig":"161"},{"size":180,"mtime":1643280016000,"results":"203","hashOfConfig":"161"},{"size":452,"mtime":1643284668000,"results":"204","hashOfConfig":"161"},{"size":719,"mtime":1631941130000,"results":"205","hashOfConfig":"161"},{"size":3007,"mtime":1642665572000,"results":"206","hashOfConfig":"161"},{"size":2149,"mtime":1642762630000,"results":"207","hashOfConfig":"161"},{"size":48,"mtime":1631941130000,"results":"208","hashOfConfig":"161"},{"size":92,"mtime":1631941130000,"results":"209","hashOfConfig":"161"},{"size":52,"mtime":1631941130000,"results":"210","hashOfConfig":"161"},{"size":58,"mtime":1631941130000,"results":"211","hashOfConfig":"161"},{"size":310,"mtime":1631941130000,"results":"212","hashOfConfig":"161"},{"size":923,"mtime":1643091608000,"results":"213","hashOfConfig":"161"},{"size":182,"mtime":1631941130000,"results":"214","hashOfConfig":"161"},{"size":36,"mtime":1632811948000,"results":"215","hashOfConfig":"161"},{"size":160,"mtime":1643281796000,"results":"216","hashOfConfig":"161"},{"size":348,"mtime":1631941130000,"results":"217","hashOfConfig":"161"},{"size":2431,"mtime":1643280416000,"results":"218","hashOfConfig":"161"},{"size":3268,"mtime":1649835816094,"results":"219","hashOfConfig":"161"},{"size":1423,"mtime":1643280016000,"results":"220","hashOfConfig":"161"},{"size":272,"mtime":1631941130000,"results":"221","hashOfConfig":"161"},{"size":564,"mtime":1631941130000,"results":"222","hashOfConfig":"161"},{"size":344,"mtime":1631941130000,"results":"223","hashOfConfig":"161"},{"size":238,"mtime":1640078946000,"results":"224","hashOfConfig":"161"},{"size":7455,"mtime":1631941130000,"results":"225","hashOfConfig":"161"},{"size":616,"mtime":1631941130000,"results":"226","hashOfConfig":"161"},{"size":3520,"mtime":1645773657477,"results":"227","hashOfConfig":"161"},{"size":574,"mtime":1631941130000,"results":"228","hashOfConfig":"161"},{"size":5136,"mtime":1631941130000,"results":"229","hashOfConfig":"161"},{"size":2241,"mtime":1631941130000,"results":"230","hashOfConfig":"161"},{"size":2174,"mtime":1642484620000,"results":"231","hashOfConfig":"161"},{"size":2128,"mtime":1642485390000,"results":"232","hashOfConfig":"161"},{"size":684,"mtime":1632811948000,"results":"233","hashOfConfig":"161"},{"size":11070,"mtime":1643266818000,"results":"234","hashOfConfig":"161"},{"size":4580,"mtime":1643268356000,"results":"235","hashOfConfig":"161"},{"size":1243,"mtime":1640153810000,"results":"236","hashOfConfig":"161"},{"size":50,"mtime":1631941130000,"results":"237","hashOfConfig":"161"},{"size":1464,"mtime":1631941130000,"results":"238","hashOfConfig":"161"},{"size":30,"mtime":1632811948000,"results":"239","hashOfConfig":"161"},{"size":886,"mtime":1631941130000,"results":"240","hashOfConfig":"161"},{"size":599,"mtime":1631941130000,"results":"241","hashOfConfig":"161"},{"size":170,"mtime":1643113050000,"results":"242","hashOfConfig":"161"},{"size":30,"mtime":1640153810000,"results":"243","hashOfConfig":"161"},{"size":29,"mtime":1640153810000,"results":"244","hashOfConfig":"161"},{"size":4159,"mtime":1640153810000,"results":"245","hashOfConfig":"161"},{"size":4037,"mtime":1632811948000,"results":"246","hashOfConfig":"161"},{"size":32,"mtime":1640153810000,"results":"247","hashOfConfig":"161"},{"size":445,"mtime":1631941130000,"results":"248","hashOfConfig":"161"},{"size":180,"mtime":1631941130000,"results":"249","hashOfConfig":"161"},{"size":1708,"mtime":1643284860000,"results":"250","hashOfConfig":"161"},{"size":38,"mtime":1640153810000,"results":"251","hashOfConfig":"161"},{"size":565,"mtime":1640153810000,"results":"252","hashOfConfig":"161"},{"size":443,"mtime":1640153810000,"results":"253","hashOfConfig":"161"},{"size":2494,"mtime":1640153810000,"results":"254","hashOfConfig":"161"},{"size":57,"mtime":1631941130000,"results":"255","hashOfConfig":"161"},{"size":2424,"mtime":1642484974000,"results":"256","hashOfConfig":"161"},{"size":3235,"mtime":1652361366046,"results":"257","hashOfConfig":"161"},{"size":407,"mtime":1640153810000,"results":"258","hashOfConfig":"161"},{"size":419,"mtime":1640153810000,"results":"259","hashOfConfig":"161"},{"size":2091,"mtime":1632812060000,"results":"260","hashOfConfig":"161"},{"size":273,"mtime":1640153810000,"results":"261","hashOfConfig":"161"},{"size":686,"mtime":1631941130000,"results":"262","hashOfConfig":"161"},{"size":1573,"mtime":1631941130000,"results":"263","hashOfConfig":"161"},{"size":283,"mtime":1640153810000,"results":"264","hashOfConfig":"161"},{"size":1423,"mtime":1642415952000,"results":"265","hashOfConfig":"161"},{"size":3238,"mtime":1645707240948,"results":"266","hashOfConfig":"161"},{"size":1471,"mtime":1642510144000,"results":"267","hashOfConfig":"161"},{"size":3155,"mtime":1642510938000,"results":"268","hashOfConfig":"161"},{"size":1841,"mtime":1642510134000,"results":"269","hashOfConfig":"161"},{"size":25,"mtime":1640153810000,"results":"270","hashOfConfig":"161"},{"size":476,"mtime":1640153810000,"results":"271","hashOfConfig":"161"},{"size":509,"mtime":1631941130000,"results":"272","hashOfConfig":"161"},{"size":396,"mtime":1640153810000,"results":"273","hashOfConfig":"161"},{"size":2137,"mtime":1643266808000,"results":"274","hashOfConfig":"161"},{"size":1644,"mtime":1631941130000,"results":"275","hashOfConfig":"161"},{"size":2072,"mtime":1631941130000,"results":"276","hashOfConfig":"161"},{"size":64,"mtime":1631941130000,"results":"277","hashOfConfig":"161"},{"size":2415,"mtime":1631941130000,"results":"278","hashOfConfig":"161"},{"size":2014,"mtime":1640608146000,"results":"279","hashOfConfig":"161"},{"size":2361,"mtime":1631941130000,"results":"280","hashOfConfig":"161"},{"size":2263,"mtime":1642482340000,"results":"281","hashOfConfig":"161"},{"size":2115,"mtime":1631941130000,"results":"282","hashOfConfig":"161"},{"size":1344,"mtime":1631941130000,"results":"283","hashOfConfig":"161"},{"size":2089,"mtime":1631941130000,"results":"284","hashOfConfig":"161"},{"size":1727,"mtime":1631941130000,"results":"285","hashOfConfig":"161"},{"size":580,"mtime":1631941130000,"results":"286","hashOfConfig":"161"},{"size":7143,"mtime":1631941130000,"results":"287","hashOfConfig":"161"},{"size":1227,"mtime":1631941130000,"results":"288","hashOfConfig":"161"},{"size":2177,"mtime":1631941130000,"results":"289","hashOfConfig":"161"},{"size":3433,"mtime":1652682161781,"results":"290","hashOfConfig":"161"},{"size":829,"mtime":1631941130000,"results":"291","hashOfConfig":"161"},{"size":2035,"mtime":1640598244000,"results":"292","hashOfConfig":"161"},{"size":2322,"mtime":1631941130000,"results":"293","hashOfConfig":"161"},{"size":3385,"mtime":1647007399475,"results":"294","hashOfConfig":"161"},{"size":1530,"mtime":1643279130000,"results":"295","hashOfConfig":"161"},{"size":4877,"mtime":1640340316000,"results":"296","hashOfConfig":"161"},{"size":1245,"mtime":1631941130000,"results":"297","hashOfConfig":"161"},{"size":2373,"mtime":1631941130000,"results":"298","hashOfConfig":"161"},{"size":313,"mtime":1647004446475,"results":"299","hashOfConfig":"161"},{"size":2672,"mtime":1631941130000,"results":"300","hashOfConfig":"161"},{"size":748,"mtime":1631941130000,"results":"301","hashOfConfig":"161"},{"size":339,"mtime":1631941130000,"results":"302","hashOfConfig":"161"},{"size":1041,"mtime":1631941130000,"results":"303","hashOfConfig":"161"},{"size":294,"mtime":1631941130000,"results":"304","hashOfConfig":"161"},{"size":1587,"mtime":1631941130000,"results":"305","hashOfConfig":"161"},{"size":693,"mtime":1631941130000,"results":"306","hashOfConfig":"161"},{"size":796,"mtime":1631941130000,"results":"307","hashOfConfig":"161"},{"size":180,"mtime":1643010934000,"results":"308","hashOfConfig":"161"},{"size":180,"mtime":1643094888000,"results":"309","hashOfConfig":"161"},{"size":180,"mtime":1640165618000,"results":"310","hashOfConfig":"161"},{"size":2428,"mtime":1645787111948,"results":"311","hashOfConfig":"161"},{"size":3256,"mtime":1659092941475,"results":"312","hashOfConfig":"161"},{"size":1423,"mtime":1643010934000,"results":"313","hashOfConfig":"161"},{"size":2565,"mtime":1643264604000,"results":"314","hashOfConfig":"161"},{"size":1423,"mtime":1643094888000,"results":"315","hashOfConfig":"161"},{"size":3262,"mtime":1643264596000,"results":"316","hashOfConfig":"161"},{"size":2245,"mtime":1643264880000,"results":"317","hashOfConfig":"161"},{"size":3268,"mtime":1643265374000,"results":"318","hashOfConfig":"161"},{"size":1423,"mtime":1642589798000,"results":"319","hashOfConfig":"161"},{"filePath":"320","messages":"321","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},"kl6c72",{"filePath":"323","messages":"324","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"325","messages":"326","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"327","messages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"331","messages":"332","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"333","messages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"335","messages":"336","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"339","messages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"341","messages":"342","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"343","usedDeprecatedRules":"322"},{"filePath":"344","messages":"345","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"346","usedDeprecatedRules":"322"},{"filePath":"347","messages":"348","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"349","usedDeprecatedRules":"322"},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"359","usedDeprecatedRules":"322"},{"filePath":"360","messages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"322"},{"filePath":"363","messages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"365","usedDeprecatedRules":"322"},{"filePath":"366","messages":"367","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"368","usedDeprecatedRules":"322"},{"filePath":"369","messages":"370","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"322"},{"filePath":"372","messages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"322"},{"filePath":"375","messages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"322"},{"filePath":"378","messages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"380","usedDeprecatedRules":"322"},{"filePath":"381","messages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"383","usedDeprecatedRules":"322"},{"filePath":"384","messages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":1,"source":"386","usedDeprecatedRules":"322"},{"filePath":"387","messages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"389","usedDeprecatedRules":"322"},{"filePath":"390","messages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"322"},{"filePath":"393","messages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"395","messages":"396","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"397","messages":"398","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"399","messages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"401","messages":"402","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"403","messages":"404","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"405","messages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"407","messages":"408","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"409","messages":"410","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"411","messages":"412","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"413","messages":"414","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"415","messages":"416","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"417","messages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"419","messages":"420","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"421","usedDeprecatedRules":"322"},{"filePath":"422","messages":"423","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"424","messages":"425","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"322"},{"filePath":"427","messages":"428","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"429","messages":"430","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"322"},{"filePath":"432","messages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"434","usedDeprecatedRules":"322"},{"filePath":"435","messages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"322"},{"filePath":"458","messages":"459","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"460","usedDeprecatedRules":"322"},{"filePath":"461","messages":"462","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"322"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"486","usedDeprecatedRules":"322"},{"filePath":"487","messages":"488","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"322"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"494","usedDeprecatedRules":"322"},{"filePath":"495","messages":"496","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"497","messages":"498","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"499","messages":"500","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"501","messages":"502","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"503","messages":"504","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"505","messages":"506","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"507","messages":"508","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"509","messages":"510","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"511","messages":"512","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"527","usedDeprecatedRules":"322"},{"filePath":"528","messages":"529","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"530","messages":"531","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"532","messages":"533","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"534","messages":"535","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"536","messages":"537","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"538","messages":"539","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"322"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"322"},{"filePath":"544","messages":"545","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"546","messages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"322"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"562","usedDeprecatedRules":"322"},{"filePath":"563","messages":"564","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"565","usedDeprecatedRules":"322"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"580","usedDeprecatedRules":"322"},{"filePath":"581","messages":"582","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"583","messages":"584","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"585","messages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"587","messages":"588","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"589","messages":"590","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"591","messages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"593","messages":"594","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"595","usedDeprecatedRules":"322"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"606","messages":"607","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"608","messages":"609","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"614","usedDeprecatedRules":"322"},{"filePath":"615","messages":"616","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"617","messages":"618","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"621","messages":"622","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623","usedDeprecatedRules":"322"},{"filePath":"624","messages":"625","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"626","usedDeprecatedRules":"322"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"352"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"643","messages":"644","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"645","messages":"646","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"647","messages":"648","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"649","messages":"650","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"651","messages":"652","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"653","messages":"654","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"655","messages":"656","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"657","messages":"658","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"659","usedDeprecatedRules":"322"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"322"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"322"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"322"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"671","usedDeprecatedRules":"322"},{"filePath":"672","messages":"673","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"674","usedDeprecatedRules":"322"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"677","usedDeprecatedRules":"322"},{"filePath":"678","messages":"679","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"463","usedDeprecatedRules":"322"},"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\index.js",[],["680","681"],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\App.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\reportWebVitals.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\serviceWorker.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\routes.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\globalStyles.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\charts\\BaseOptionChart.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\ScrollToTop.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\LogoOnlyLayout.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Register.js",["682"],"import { Link as RouterLink } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Card, Link, Container, Typography } from '@mui/material';\n// layouts\nimport AuthLayout from '../layouts/AuthLayout';\n// components\nimport Page from '../components/Page';\nimport { MHidden } from '../components/@material-extend';\nimport { RegisterForm } from '../components/authentication/register';\nimport AuthSocial from '../components/authentication/AuthSocial';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'flex'\n  }\n}));\n\nconst SectionStyle = styled(Card)(({ theme }) => ({\n  width: '100%',\n  maxWidth: 464,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  margin: theme.spacing(2, 0, 2, 2)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Register() {\n  return (\n    <RootStyle title=\"Register | Minimal-UI\">\n      <AuthLayout>\n        Already have an account? &nbsp;\n        <Link underline=\"none\" variant=\"subtitle2\" component={RouterLink} to=\"/\">\n          Login\n        </Link>\n      </AuthLayout>\n\n      <MHidden width=\"mdDown\">\n        <SectionStyle>\n        \n          <img alt=\"register\" src=\"/static/illustrations/illustration_register.png\" />\n        </SectionStyle>\n      </MHidden>\n\n      <Container>\n        <ContentStyle>\n          <Box sx={{ mb: 5 }}>\n            <Typography variant=\"h4\" gutterBottom>\n            Sign up to Lottery\n            </Typography>\n    \n          </Box>\n\n\n          <RegisterForm />\n\n          <Typography variant=\"body2\" align=\"center\" sx={{ color: 'text.secondary', mt: 3 }}>\n            By registering, I agree to Minimal&nbsp;\n            <Link underline=\"always\" sx={{ color: 'text.primary' }}>\n              Terms of Service\n            </Link>\n            &nbsp;and&nbsp;\n            <Link underline=\"always\" sx={{ color: 'text.primary' }}>\n              Privacy Policy\n            </Link>\n            .\n          </Typography>\n\n          <MHidden width=\"smUp\">\n            <Typography variant=\"subtitle2\" sx={{ mt: 3, textAlign: 'center' }}>\n              Already have an account?&nbsp;\n              <Link to=\"/\" component={RouterLink}>\n                Login\n              </Link>\n            </Typography>\n          </MHidden>\n        </ContentStyle>\n      </Container>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Login.js",["683","684","685","686"],"import { Link as RouterLink } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Card, Stack, Link, Container, Typography } from '@mui/material';\n// layouts\nimport AuthLayout from '../layouts/AuthLayout';\n// components\nimport Page from '../components/Page';\nimport { MHidden } from '../components/@material-extend';\nimport { LoginForm } from '../components/authentication/login';\nimport AuthSocial from '../components/authentication/AuthSocial';\n\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Page)(({ theme }) => ({\n  [theme.breakpoints.up('md')]: {\n    display: 'flex'\n  }\n}));\n\nconst SectionStyle = styled(Card)(({ theme }) => ({\n  width: '100%',\n  maxWidth: 464,\n  display: 'flex',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  margin: theme.spacing(2, 0, 2, 2)\n}));\n\nconst ContentStyle = styled('div')(({ theme }) => ({\n  maxWidth: 480,\n  margin: 'auto',\n  display: 'flex',\n  minHeight: '100vh',\n  flexDirection: 'column',\n  justifyContent: 'center',\n  padding: theme.spacing(12, 0)\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function Login() {\n  return (\n    <RootStyle title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh/Login\">\n      {/* <AuthLayout>\n        Don’t have an account? &nbsp;\n        <Link underline=\"none\" variant=\"subtitle2\" component={RouterLink} to=\"/register\">\n          Get started\n        </Link>\n      </AuthLayout> */}\n\n      <MHidden width=\"mdDown\">\n        <SectionStyle>\n          <Typography variant=\"h3\" sx={{ px: 5, mt: 10, mb: 5 }}>\n            Hi, Welcome \n          </Typography>\n          <img src=\"/static/illustrations/illustration_login.png\" alt=\"login\" />\n        </SectionStyle>\n      </MHidden>\n\n      <Container maxWidth=\"sm\">\n        <ContentStyle>\n          <Stack sx={{ mb: 5 }}>\n            <Typography variant=\"h4\" gutterBottom>\n              Sign in to Lottery\n            </Typography>\n            {/* <Typography sx={{ color: 'text.secondary' }}>Enter your details below.</Typography> */}\n          </Stack>\n          {/* <AuthSocial /> */}\n\n          <LoginForm />\n\n          {/* <MHidden width=\"smUp\">\n            <Typography variant=\"body2\" align=\"center\" sx={{ mt: 3 }}>\n              Don’t have an account?&nbsp;\n              <Link variant=\"subtitle2\" component={RouterLink} to=\"register\">\n                Get started\n              </Link>\n            </Typography>\n          </MHidden> */}\n        </ContentStyle>\n      </Container>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\DashboardApp.js",["687","688"],"// material\nimport { Box, Grid, Container, Typography } from '@mui/material';\n// components\nimport Page from '../components/Page';\nimport {\n  TotalDonationAmount,\n  TotalDonationToday,\n  TotalDonationUser,\n  TotalDonation,\n  TotalDonationUserToday\n\n} from '../components/_dashboard/app';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\n// ----------------------------------------------------------------------\n\nexport default function DashboardApp() {\n  const navigate = useNavigate();\n  // if(localStorage.getItem(\"id_token\" === undefined)){\n  //   navigate('/', { replace: true });\n  // }\n  return (\n    <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n      <Container maxWidth=\"xl\">\n        <Box sx={{ pb: 5 }}>\n          <Typography variant=\"h4\">Dashboard</Typography>\n        </Box>\n        <Grid container spacing={3}>\n          <Grid item xs={12} sm={6} md={3}>\n            <TotalDonationUser />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <TotalDonationAmount />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <TotalDonationUserToday />\n          </Grid>\n          <Grid item xs={12} sm={6} md={3}>\n            <TotalDonationToday />\n          </Grid>\n\n          <Grid item xs={12} md={6} lg={12}>\n            <TotalDonation />\n          </Grid>\n\n        </Grid>\n      </Container>\n    </Page>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Products.js",[],["689","690"],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Blog.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Page404.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Contact\\Contact.js",["691","692","693","694","695","696","697","698"],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport {\n    RadioGroup, TextField\n} from \"../../commocomponent/FormFields\";\nimport {\n    Grid,\n    Typography,\n    Button,\n    Card,\n    CardContent,\n    Box,\n} from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { API_URL, ADDCONTACTDETAILS, ALLCONTACTDETAILS, EDITCONTACTDETAILS } from \"../../Apiconstant/Apiconstant\"\n// components\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Page from '../../components/Page';\nimport { Formik, Form } from \"formik\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useForm } from \"react-hook-form\";\nimport { TEXT_FIELD, EMAIL, URL, PHONEREG } from \"../../Validation\";\nimport * as Yup from \"yup\";\nimport Loader from \"../../commocomponent/Loader\"\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    submit: {\n        top: \"17px\"\n    },\n}))\n\nexport default function Contact() {\n    const [loading, setLoading] = useState(false);\n    const navigate = useNavigate();\n    const success = () => { }\n    const { setValue } = useForm();\n    const [region, SetselectRegion] = useState('');\n    const [city, SetselectCity] = useState('');\n    const classes = useStyles();\n    const [userRequest, setUserRequest] = useState({\n        user: null,\n    });\n    const [contractdetail, setcontractdetail] = useState({});\n    useEffect(() => {\n        setLoading(true)\n        const url = `${API_URL}/${ALLCONTACTDETAILS}`;\n\n        axios.post(url, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        }).then(response => response.data)\n            .then((data) => {\n                setLoading(false)\n                setUserRequest({\n                    user: data.data.Contacts\n                });\n                setcontractdetail(data.data.Contacts)\n            })\n\n    }, []);\n    const { user } = userRequest;\n    if (user) {\n        setValue('website', user.website);\n        setValue('phoneNumber', user.phoneNumber);\n        setValue('email', user.email);\n        setValue('location', user.location);\n        setValue('title', user.title);\n        setValue('description', user.description);\n    }\n    const onSubmit = (values, e) => {\n        setLoading(true)\n        const url = `${API_URL}/${ADDCONTACTDETAILS}`;\n        axios.post(url, {\n            website: values.website,\n            phoneNumber: values.phoneNumber,\n            email: values.email,\n            location: values.location,\n            title: values.title,\n            description: values.description,\n        }, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        })\n            .then((response) => {\n               \n                if (response.status === 200) {\n                    success(toast.success(response.data.message))\n                    navigate('/dashboard/contact', { replace: true });\n                }\n                setLoading(false)\n            })\n\n    };\n    const onSubmit1 = (values, e) => {\n        setLoading(true)\n        const url1 = `${API_URL}/${EDITCONTACTDETAILS}`;\n        axios.post(url1, {\n            id: user[0].id,\n            phoneNumber: values.phoneNumber,\n            email: values.email,\n            website: values.website,\n            location: values.location,\n            title: values.title,\n            description: values.description,\n        }, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        })\n            .then((response) => {\n\n                if (response.status === 200) {\n                    success(toast.success(response.data.message))\n                }\n                navigate('/dashboard/contact', { replace: true });\n                setLoading(false)\n            })\n\n    };\n\n    if (!contractdetail) { return false; }\n\n    if (!contractdetail.length) {\n        return (\n            <>\n             {loading && (\n               <Loader />\n            )}\n                <ToastContainer />\n                <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                    <Box sx={{ pb: 5 }}>\n                        <Typography variant=\"h4\">Add Contract Details</Typography>\n                    </Box>\n\n                    <Card className={classes.root} variant=\"outlined\">\n\n                        <CardContent>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12}>\n\n                                    <Formik\n                                        key=\"one\"\n                                        enableReinitialize\n                                        initialValues={{\n                                            website: \"\",\n                                            phoneNumber: \"\",\n                                            email: \"\",\n                                            location: \"\",\n                                            title: \"\",\n                                            description: \"\",\n\n                                        }}\n                                        validationSchema={Yup.object().shape({\n                                            phoneNumber: Yup.string()\n                                                .required(\"phoneNumber  is required\"),\n                                            email: Yup.string()\n                                                .matches(EMAIL, \"Enter valid email.\")\n                                                .required(\"Email is required\"),\n                                            website: Yup.string()\n                                                .required(\"website is required\")\n                                                .matches(URL, \"Enter valid url.\"),\n                                            location: Yup.string()\n                                                .required(\"location is required\"),\n                                            title: Yup.string()\n                                                .required(\"title is required\"),\n                                            description: Yup.string()\n                                                .required(\"Dser Name is required\"),\n\n\n                                        })}\n                                        onSubmit={values => {\n                                            onSubmit(values)\n\n                                        }}\n\n                                    >\n                                        {({ setFieldValue,\n                                            touched,\n                                            values, }) => (\n                                            <>\n                                                <Form key=\"oneForm\">\n                                                    <Grid container spacing={2}>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Phone Number\"\n                                                                type=\"text\"\n                                                                name=\"phoneNumber\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Email\"\n                                                                type=\"text\"\n                                                                name=\"email\"\n                                                                className=\"email1\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Website\"\n                                                                type=\"text\"\n                                                                name=\"website\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Location\"\n                                                                type=\"text\"\n                                                                name=\"location\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Title\"\n                                                                type=\"text\"\n                                                                name=\"title\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Description\"\n                                                                type=\"text\"\n                                                                name=\"description\"\n                                                            />\n                                                        </Grid>\n                                                    </Grid>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        fullWidth\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        className={classes.submit}\n                                                    >\n                                                        ADD\n                                                    </Button>\n\n                                                </Form>\n                                            </>\n                                        )}\n                                    </Formik>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Page>\n            </>\n        );\n    } else {\n\n        return (\n            <>\n             {loading && (\n               <Loader />\n            )}\n                <ToastContainer />\n                <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                    <Box sx={{ pb: 5 }}>\n                        <Typography variant=\"h4\">Edit Contract Details</Typography>\n\n                    </Box>\n\n                    <Card className={classes.root} variant=\"outlined\">\n\n                        <CardContent>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12}>\n\n                                    <Formik\n                                        key=\"one\"\n                                        enableReinitialize\n                                        initialValues={{\n                                            phoneNumber: (user[0] && user[0].phoneNumber) ? user[0].phoneNumber : \"\",\n                                            email: (user[0] && user[0].email) ? user[0].email : \"\",\n                                            website: (user[0] && user[0].website) ? user[0].website : \"\",\n                                            location: (user[0] && user[0].location) ? user[0].location : \"\",\n                                            title: (user[0] && user[0].title) ? user[0].title : \"\",\n                                            description: (user[0] && user[0].description) ? user[0].description : \"\",\n\n                                        }}\n                                        validationSchema={Yup.object().shape({\n                                            phoneNumber: Yup.string()\n                                                .required(\"phoneNumber  is required\"),\n                                            email: Yup.string()\n                                                .matches(EMAIL, \"Enter valid email.\")\n                                                .required(\"Email is required\"),\n                                            website: Yup.string()\n                                                .required(\"website is required\")\n                                                .matches(URL, \"Enter valid url.\"),\n                                            location: Yup.string()\n                                                .required(\"location is required\"),\n                                            title: Yup.string()\n                                                .required(\"title is required\"),\n                                            description: Yup.string()\n                                                .required(\"Dser Name is required\"),\n\n\n                                        })}\n                                        onSubmit={values => {\n                                            onSubmit1(values)\n\n                                        }}\n\n                                    >\n                                        {({ setFieldValue,\n                                            touched,\n                                            values, }) => (\n                                            <>\n                                                <Form key=\"oneForm\">\n                                                    <Grid container spacing={2}>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Phone Number\"\n                                                                type=\"text\"\n                                                                name=\"phoneNumber\"\n                                                                value={contractdetail.website}\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Email\"\n                                                                type=\"text\"\n                                                                name=\"email\"\n                                                                className=\"email1\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Website\"\n                                                                type=\"text\"\n                                                                name=\"website\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Location\"\n                                                                type=\"text\"\n                                                                name=\"location\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Title\"\n                                                                type=\"text\"\n                                                                name=\"title\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Description\"\n                                                                type=\"text\"\n                                                                name=\"description\"\n                                                            />\n                                                        </Grid>\n                                                    </Grid>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        fullWidth\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        className={classes.submit}\n\n                                                    >\n                                                        Edit\n                                                    </Button>\n\n                                                </Form>\n                                            </>\n                                        )}\n                                    </Formik>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Page>\n            </>\n        );\n    }\n}","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\ContactInquiry\\ContactInquiry.js",["699","700","701","702","703","704","705","706"],"import { filter } from 'lodash';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { API_URL, ALLCONTACTINQUIRY } from \"../../Apiconstant/Apiconstant\"\n// material\nimport {\n    Card,\n    Table,\n    Stack,\n    Button,\n    Checkbox,\n    TableRow,\n    TableBody,\n    TableCell,\n    Container,\n    Typography,\n    TableContainer,\n    TablePagination,\n    Switch,\n} from '@mui/material';\n// components\nimport Page from '../../components/Page';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/Othertable/index';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Icon } from '@iconify/react';\n// ----------------------------------------------------------------------\nimport { Link as RouterLink, useNavigate , useLocation} from 'react-router-dom';\nimport Loader from \"../../commocomponent/Loader\"\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst TABLE_HEAD = [\n    { id: 'id', label: 'ID', alignRight: false },\n    { id: 'userName', label: 'User Name', alignRight: false },\n    { id: 'phoneNumber', label: 'Phone Number', alignRight: false },\n    { id: 'email', label: 'Email', alignRight: false },\n    { id: 'subject', label: 'subject', alignRight: false },\n    { id: 'comment', label: 'comment', alignRight: false },\n    { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'asc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    if (query) {\n        return filter(array, (_user) => _user.userName.toString().toLowerCase().indexOf(query.toLowerCase()) !== -1);\n    }\n    return stabilizedThis.map((el) => el[0]);\n}\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    button: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n    modal: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n}))\nexport default function ContactInquiry() {\n    const classes = useStyles();\n    const {state}=useLocation();\n    const [loading, setLoading] = useState(false);\n    \n    const [order, setOrder] = useState('asc');\n    const [selected, setSelected] = useState([]);\n    const [orderBy, setOrderBy] = useState('id');\n    const [filterName, setFilterName] = useState('');\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [page, setPage] = useState(0);\n    const [userRequest, setUserRequest] = useState([]);\n    useEffect(() => {\n        setLoading(true)\n        const url = `${API_URL}/${ALLCONTACTINQUIRY}`;\n\n        axios.get(url, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        }).then(response => response.data)\n            .then((data) => {\n                setLoading(false)\n                setUserRequest(data.data.Contactinquirie);\n            })\n\n    }, [state]);\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = userRequest.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n        setSelected(newSelected);\n\n    };\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleFilterByName = (event) => {\n        setFilterName(event.target.value);\n    };\n\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userRequest.length) : 0;\n\n    const filteredUsers = applySortFilter(userRequest, getComparator(order, orderBy), filterName);\n    const isUserNotFound = filteredUsers.length === 0;\n    return (\n   \n        <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n             <ToastContainer />\n             {loading && (\n          <Loader />\n       )}\n            <Container>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n                    <Typography variant=\"h4\" gutterBottom>\n                    Contacts Inquiry\n                    </Typography>\n\n                </Stack>\n              \n                <Card>\n                    <UserListToolbar\n                        numSelected={selected.length}\n                        filterName={filterName}\n                        onFilterName={handleFilterByName}\n                        selected={selected}\n                    />\n\n                    <Scrollbar>\n                        <TableContainer sx={{ minWidth: 800 }}>\n                            <Table>\n                                <UserListHead\n                                    order={order}\n                                    orderBy={orderBy}\n                                    headLabel={TABLE_HEAD}\n                                    rowCount={userRequest.length}\n                                    numSelected={selected.length}\n                                    onRequestSort={handleRequestSort}\n                                    onSelectAllClick={handleSelectAllClick}\n                                />\n                                <TableBody>\n                                    {filteredUsers\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row) => {\n                                            const { id, userName, phoneNumber, email, subject, comment} = row;\n                                            const isItemSelected = selected.indexOf(id) !== -1;\n\n                                            return (\n                                                <TableRow\n                                                    hover\n                                                    key={id}\n                                                    tabIndex={-1}\n                                                    role=\"checkbox\"\n                                                    selected={isItemSelected}\n                                                    aria-checked={isItemSelected}\n                                                >\n                                                    <TableCell padding=\"checkbox\">\n                                                        <Checkbox\n                                                            checked={isItemSelected}\n                                                            onChange={(event) => handleClick(event, id)}\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">{id}</TableCell>\n                                                    <TableCell align=\"left\">{userName}</TableCell>\n                                                    <TableCell align=\"left\">{phoneNumber}</TableCell>\n                                                    <TableCell align=\"left\">{email}</TableCell>\n                                                    <TableCell align=\"left\">{subject} </TableCell>\n                                                    <TableCell align=\"left\">{comment} </TableCell>\n                                                    <TableCell align=\"right\">\n                                                        <UserMoreMenu id={id} />\n                                                    </TableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    {emptyRows > 0 && (\n                                        <TableRow style={{ height: 53 * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                                {isUserNotFound && (\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                                                <SearchNotFound searchQuery={filterName} />\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                )}\n                            </Table>\n                        </TableContainer>\n                    </Scrollbar>\n\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={userRequest.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </Card>\n            </Container>\n        </Page>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Frontendsetting\\Frontendsetting.js",["707","708","709","710","711","712","713","714","715","716","717","718","719","720","721","722"],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport {\n    RadioGroup, TextField\n} from \"../../commocomponent/FormFields\";\nimport {\n    Grid,\n    Typography,\n    Button,\n    Card,\n    CardContent,\n    Box,\n} from \"@mui/material\";\nimport ImgCrop from \"antd-img-crop\";\nimport { Upload } from \"antd\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { API_URL, ADDFRONTSETTING, GETFRONTSETTING, EDITFRONTSETTING, IMG_URL } from \"../../Apiconstant/Apiconstant\"\n// components\nimport { Link as RouterLink, useNavigate , useLocation} from 'react-router-dom';\nimport Page from '../../components/Page';\nimport { Formik, Form } from \"formik\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { useForm } from \"react-hook-form\";\nimport { TEXT_FIELD, EMAIL, URL, PRICE_NUMBER } from \"../../Validation\";\nimport * as Yup from \"yup\";\nimport Loader from \"../../commocomponent/Loader\"\n\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    submit: {\n        top: \"17px\"\n    },\n    avatarpreview: {\n        width: \"136px\",\n        height: \"131px\"\n    },\n    svg: {\n        display: \"noneimportant\"\n    }\n}))\n\nexport default function Frontendsetting() {\n    const navigate = useNavigate();\n    const [loading, setLoading] = useState(false);\n\n    const success = () => { }\n    const {state}=useLocation();\n    const { setValue } = useForm();\n    const [region, SetselectRegion] = useState('');\n    const [city, SetselectCity] = useState('');\n    const classes = useStyles();\n    const [userRequest, setUserRequest] = useState({\n        user: null,\n    });\n    const [contractdetail, setcontractdetail] = useState({});\n    useEffect(() => {\n        setLoading(true)\n        const url = `${API_URL}/${GETFRONTSETTING}`;\n\n        axios.post(url, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        }).then(response => response.data)\n            .then((data) => {\n                setLoading(false)\n\n                setUserRequest({\n                    user: data.data.Frontsettings\n                });\n                setcontractdetail(data.data.Frontsettings)\n            })\n\n    }, []);\n    const { user } = userRequest;\n    if (user) {\n        setValue('logoimage', user.logoimage);\n        setValue('metadescription', user.metadescription);\n        setValue('metakeywords', user.metakeywords);\n        setValue('metaauthor', user.metaauthor);\n        setValue('websitetitle', user.websitetitle);\n        setValue('footertitle', user.footertitle);\n        setValue('footercopyright', user.footercopyright);\n        setValue('facebook_url', user.facebook_url);\n        setValue('instragram_url', user.instragram_url);\n        setValue('twitter_url', user.twitter_url);\n        setValue('youtube_url', user.youtube_url);\n    }\n    const [vehiclemage, setVehiclemage] = useState(\"notset\");\n\n\n    const onChange = ({ fileList }) => {\n        setVehiclemage({ fileList });\n    };\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow.document.write(image.outerHTML);\n    };\n\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const [image, SetImage] = useState(\"notset\");\n\n    var resultdiv = {\n        display: \"flex\",\n    };\n\n    const renderPhotos = (source) => {\n        return source.map((photo) => {\n            SetImage(photo);\n            return <></>;\n        });\n    };\n    const onSubmit = (values, e) => {\n        const url1 = `${API_URL}/${ADDFRONTSETTING}`;\n        var bodyFormData = new FormData();\n        bodyFormData.append(\"metadescription\", values.metadescription);\n        bodyFormData.append(\"metakeywords\", values.metakeywords);\n        bodyFormData.append(\"metaauthor\", values.metaauthor);\n        bodyFormData.append(\"websitetitle\", values.websitetitle);\n        bodyFormData.append(\"footertitle\", values.footertitle);\n        bodyFormData.append(\"footercopyright\", values.footercopyright);\n        bodyFormData.append(\"facebook_url\", values.facebook_url);\n        bodyFormData.append(\"instragram_url\", values.instragram_url);\n        bodyFormData.append(\"twitter_url\", values.twitter_url);\n        bodyFormData.append(\"youtube_url\", values.youtube_url);\n        if (vehiclemage.fileList) {\n            for (var i = 0; i < vehiclemage.fileList.length; i++) {\n                bodyFormData.append(\"logoimage\", vehiclemage.fileList[i].originFileObj);\n            }\n        }\n        axios\n            .post(url1, bodyFormData,\n                {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    }\n                })\n            .then((response) => {\n\n                if (response.status === 200) {\n                    success(toast.success(response.data.message))\n                    // navigate('/dashboard/front-setting', { state: {status:'done'} });\n                    window.location.href = '/dashboard/front-setting';\n\n                }\n            })\n\n    };\n    const onSubmit1 = (values, e) => {\n        const url1 = `${API_URL}/${EDITFRONTSETTING}`;\n        var bodyFormData = new FormData();\n        bodyFormData.append(\"id\", user[0].id);\n        bodyFormData.append(\"metadescription\", values.metadescription);\n        bodyFormData.append(\"metakeywords\", values.metakeywords);\n        bodyFormData.append(\"metaauthor\", values.metaauthor);\n        bodyFormData.append(\"websitetitle\", values.websitetitle);\n        bodyFormData.append(\"footertitle\", values.footertitle);\n        bodyFormData.append(\"footercopyright\", values.footercopyright);\n        bodyFormData.append(\"facebook_url\", values.facebook_url);\n        bodyFormData.append(\"instragram_url\", values.instragram_url);\n        bodyFormData.append(\"twitter_url\", values.twitter_url);\n        bodyFormData.append(\"youtube_url\", values.youtube_url);\n        if (vehiclemage.fileList) {\n            for (var i = 0; i < vehiclemage.fileList.length; i++) {\n                bodyFormData.append(\"logoimage\", vehiclemage.fileList[i].originFileObj);\n            }\n        }\n        axios\n            .post(url1, bodyFormData,\n                {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    }\n                })\n            .then((response) => {\n\n                if (response.status === 200) {\n                    success(toast.success(response.data.message))\n                    // navigate('/dashboard/front-setting', { state: {status:'done'} });\n                    // window.location.href = '/dashboard/gallery-image';\n                    window.location.href = '/dashboard/front-setting';\n\n\n                }\n            })\n\n    };\n    if (!contractdetail) { return false; }\n\n    if (!contractdetail.length) {\n        return (\n            <>\n             {loading && (\n          <Loader />\n       )}\n                <ToastContainer />\n                <Page websitetitle=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                    <Box sx={{ pb: 5 }}>\n                        <Typography variant=\"h4\">Add Front setting Details</Typography>\n                    </Box>\n\n                    <Card className={classes.root} variant=\"outlined\">\n\n                        <CardContent>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12}>\n\n                                    <Formik\n                                        key=\"one\"\n                                        enableReinitialize\n                                        initialValues={{\n                                            metadescription: \"\",\n                                            metakeywords: \"\",\n                                            metaauthor: \"\",\n                                            websitetitle: \"\",\n                                            footertitle: \"\",\n                                            footercopyright: \"\",\n                                            facebook_url: \"\",\n                                            instragram_url: \"\",\n                                            twitter_url: \"\",\n                                            youtube_url: \"\",\n\n                                        }}\n                                        validationSchema={Yup.object().shape({\n                                            metadescription: Yup.string()\n                                                .required(\"Meta Description  is required\"),\n                                            metakeywords: Yup.string()\n                                                .required(\"Meta Keywords is required\"),\n                                            metaauthor: Yup.string()\n                                                .required(\"Meta Author is required\"),\n                                            websitetitle: Yup.string()\n                                                .required(\"Website Title is required\"),\n                                            footertitle: Yup.string()\n                                                .required(\"Footer Title is required\"),\n                                            footercopyright: Yup.string()\n                                                .required(\"Footer Copyright is required\"),\n                                            facebook_url: Yup.string()\n                                                .matches(URL, \"Enter valid Facebook Url.\")\n                                                .required(\"Facebook Url is required\"),\n                                            instragram_url: Yup.string()\n                                                .required(\"Instragram Url is required\")\n                                                .matches(URL, \"Enter valid Instragram Url\"),\n                                            twitter_url: Yup.string()\n                                                .matches(URL, \"Enter valid Twitter Url.\")\n                                                .required(\"Twitter Url is required\"),\n                                            youtube_url: Yup.string()\n                                                .matches(URL, \"Enter valid Youtube Url.\")\n                                                .required(\"Youtube Url is required\"),\n\n                                        })}\n                                        onSubmit={values => {\n                                            onSubmit(values)\n\n                                        }}\n\n                                    >\n                                        {({ setFieldValue,\n                                            touched,\n                                            values, }) => (\n                                            <>\n                                                <Form key=\"oneForm\">\n                                                    <Grid container spacing={2}>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Meta Description\"\n                                                                type=\"text\"\n                                                                name=\"metadescription\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Meta Keywords\"\n                                                                type=\"text\"\n                                                                name=\"metakeywords\"\n                                                                className=\"metakeywords1\"\n                                                            />\n                                                        </Grid>\n\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Meta Author\"\n                                                                type=\"text\"\n                                                                name=\"metaauthor\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Website Title\"\n                                                                type=\"text\"\n                                                                name=\"websitetitle\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Footer Title\"\n                                                                type=\"text\"\n                                                                name=\"footertitle\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Footer Copyright\"\n                                                                type=\"text\"\n                                                                name=\"footercopyright\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Facebook Url\"\n                                                                type=\"text\"\n                                                                name=\"facebook_url\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Instragram Url\"\n                                                                type=\"text\"\n                                                                name=\"instragram_url\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Twitter Url\"\n                                                                type=\"text\"\n                                                                name=\"twitter_url\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Youtube Url\"\n                                                                type=\"text\"\n                                                                name=\"youtube_url\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                        <div className={classes.edit}>\n                                                            <div className=\"avatar-upload\">\n                                                                <div className={classes.avatarpreview}>\n\n                                                                </div>\n                                                                <div\n                                                                    className=\"result\"\n                                                                    style={resultdiv}\n                                                                    id=\"file-image\"\n                                                                >\n                                                                    {renderPhotos(selectedFiles)}\n                                                                </div>\n                                                                <div>\n                                                                    <Upload\n                                                                        name=\"choosephoto\"\n                                                                        listType=\"picture-card\"\n                                                                        onChange={onChange}\n                                                                        onPreview={onPreview}\n                                                                    >\n                                                                        {\"Upload\"}\n                                                                    </Upload>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                         </Grid>\n                                                    </Grid>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        fullWidth\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        className={classes.submit}\n                                                    >\n                                                        ADD\n                                                    </Button>\n\n                                                </Form>\n                                            </>\n                                        )}\n                                    </Formik>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Page>\n            </>\n        );\n    } else {\n\n        return (\n            <>\n                <ToastContainer />\n                <Page websitetitle=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                    <Box sx={{ pb: 5 }}>\n                        <Typography variant=\"h4\">Edit Front setting Details</Typography>\n\n                    </Box>\n\n                    <Card className={classes.root} variant=\"outlined\">\n\n                        <CardContent>\n                            <Grid container spacing={4}>\n                                <Grid item xs={12}>\n\n                                    <Formik\n                                        key=\"one\"\n                                        enableReinitialize\n                                        initialValues={{\n                                            metadescription: (user[0] && user[0].metadescription) ? user[0].metadescription : \"\",\n                                            metakeywords: (user[0] && user[0].metakeywords) ? user[0].metakeywords : \"\",\n                                            metaauthor: (user[0] && user[0].metaauthor) ? user[0].metaauthor : \"\",\n                                            websitetitle: (user[0] && user[0].websitetitle) ? user[0].websitetitle : \"\",\n                                            footertitle: (user[0] && user[0].footertitle) ? user[0].footertitle : \"\",\n                                            footercopyright: (user[0] && user[0].footercopyright) ? user[0].footercopyright : \"\",\n                                            facebook_url: (user[0] && user[0].facebook_url) ? user[0].facebook_url : \"\",\n                                            instragram_url: (user[0] && user[0].instragram_url) ? user[0].instragram_url : \"\",\n                                            twitter_url: (user[0] && user[0].twitter_url) ? user[0].twitter_url : \"\",\n                                            youtube_url: (user[0] && user[0].youtube_url) ? user[0].youtube_url : \"\",\n\n                                        }}\n                                        validationSchema={Yup.object().shape({\n                                            metadescription: Yup.string()\n                                                .required(\"Meta Description  is required\"),\n                                            metakeywords: Yup.string()\n                                                .required(\"Meta Keywords is required\"),\n                                            metaauthor: Yup.string()\n                                                .required(\"Meta Author is required\"),\n                                            websitetitle: Yup.string()\n                                                .required(\"Website Title is required\"),\n                                            footertitle: Yup.string()\n                                                .required(\"Footer Title is required\"),\n                                            footercopyright: Yup.string()\n                                                .required(\"Footer Copyright is required\"),\n                                            facebook_url: Yup.string()\n                                                .matches(URL, \"Enter valid Facebook Url.\")\n                                                .required(\"Facebook Url is required\"),\n                                            instragram_url: Yup.string()\n                                                .required(\"Instragram Url is required\")\n                                                .matches(URL, \"Enter valid Instragram Url\"),\n                                            twitter_url: Yup.string()\n                                                .matches(URL, \"Enter valid Twitter Url.\")\n                                                .required(\"Twitter Url is required\"),\n                                            youtube_url: Yup.string()\n                                                .matches(URL, \"Enter valid Youtube Url.\")\n                                                .required(\"Youtube Url is required\"),\n                                            })}\n                                        onSubmit={values => {\n                                            onSubmit1(values)\n                                            console.log(values.user[0].logoimage)\n\n                                        }}\n\n                                    >\n                                        {({ setFieldValue,\n                                            touched,\n                                            values, }) => (\n                                            <>\n                                                <Form key=\"oneForm\">\n                                                    <Grid container spacing={2}>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Meta Description\"\n                                                                type=\"text\"\n                                                                name=\"metadescription\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Meta Keywords\"\n                                                                type=\"text\"\n                                                                name=\"metakeywords\"\n                                                                className=\"metakeywords1\"\n                                                            />\n                                                        </Grid>\n\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Meta Author\"\n                                                                type=\"text\"\n                                                                name=\"metaauthor\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Website Title\"\n                                                                type=\"text\"\n                                                                name=\"websitetitle\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Footer Title\"\n                                                                type=\"text\"\n                                                                name=\"footertitle\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Footer Copyright\"\n                                                                type=\"text\"\n                                                                name=\"footercopyright\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Facebook Url\"\n                                                                type=\"text\"\n                                                                name=\"facebook_url\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Instragram Url\"\n                                                                type=\"text\"\n                                                                name=\"instragram_url\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Twitter Url\"\n                                                                type=\"text\"\n                                                                name=\"twitter_url\"\n                                                            />\n                                                        </Grid>\n                                                        <Grid item xs={12} sm={6}>\n                                                            <TextField\n                                                                label=\"Youtube Url\"\n                                                                type=\"text\"\n                                                                name=\"youtube_url\"\n                                                            />\n                                                        </Grid>\n                                                        <div className={classes.edit}>\n                                                            <div className=\"avatar-upload\">\n                                                                <div className={classes.avatarpreview}>\n                                                                    {vehiclemage == \"notset\" &&\n                                                                        user &&\n                                                                        user[0].logoimage ? (\n                                                                        <img\n                                                                            src={\n                                                                                \"\" +\n                                                                                IMG_URL +\n                                                                                \"\" +\n                                                                                user[0].logoimage +\n                                                                                \"\"\n                                                                            }\n                                                                            className=\"\"\n                                                                            alt=\"user image\"\n                                                                            width=\"220\"\n                                                                        />\n                                                                    ) : (\n                                                                        <div\n                                                                            id=\"imagePreview\"\n                                                                            style={{\n                                                                                backgroundImage: \"url(\" + vehiclemage + \")\",\n                                                                            }}\n                                                                        ></div>\n                                                                    )}\n                                                                </div>\n                                                                <div\n                                                                    className=\"result\"\n                                                                    style={resultdiv}\n                                                                    id=\"file-image\"\n                                                                >\n                                                                    {renderPhotos(selectedFiles)}\n                                                                </div>\n                                                                <div>\n                                                                    <Upload\n                                                                        name=\"choosephoto\"\n                                                                        listType=\"picture-card\"\n                                                                        onChange={onChange}\n                                                                        onPreview={onPreview}\n                                                                    >\n                                                                        {\"Upload\"}\n                                                                    </Upload>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Grid>\n                                                    <Button\n                                                        type=\"submit\"\n                                                        fullWidth\n                                                        variant=\"contained\"\n                                                        color=\"primary\"\n                                                        className={classes.submit}\n\n                                                    >\n                                                        Edit\n                                                    </Button>\n\n                                                </Form>\n                                            </>\n                                        )}\n                                    </Formik>\n                                </Grid>\n                            </Grid>\n                        </CardContent>\n                    </Card>\n                </Page>\n            </>\n        );\n    }\n}","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Pressreleases\\Pressreleases.js",["723","724","725","726","727","728"],"import { filter } from 'lodash';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { API_URL, ALLPRESSRELEASES , IMG_URL} from \"../../Apiconstant/Apiconstant\"\n// material\nimport {\n    Card,\n    Table,\n    Stack,\n    Button,\n    Checkbox,\n    TableRow,\n    TableBody,\n    TableCell,\n    Container,\n    Typography,\n    TableContainer,\n    TablePagination,\n    Switch,\n} from '@mui/material';\n// components\nimport Page from '../../components/Page';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/Pressreleases/index';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Icon } from '@iconify/react';\n// ----------------------------------------------------------------------\nimport { Link as RouterLink, useNavigate , useLocation} from 'react-router-dom';\nimport Loader from \"../../commocomponent/Loader\"\n\nimport { makeStyles } from \"@material-ui/styles\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst TABLE_HEAD = [\n    { id: 'id', label: 'ID', alignRight: false },\n    { id: 'Press releases image', label: 'Press Image', alignRight: false },\n    { id: 'title', label: 'Title', alignRight: false },\n    // { id: 'shortdescription', label: 'Short Description', alignRight: false },\n    // { id: 'longdescription', label: 'Long Description', alignRight: false },\n    { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'asc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    if (query) {\n        return filter(array, (_user) => _user.title.toString().toLowerCase().indexOf(query.toLowerCase()) !== -1);\n    }\n    return stabilizedThis.map((el) => el[0]);\n}\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    button: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n    modal: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n}))\nexport default function Pressreleases() {\n    const classes = useStyles();\n    const {state}=useLocation();\n    const [page, setPage] = useState(0);\n    const [order, setOrder] = useState('asc');\n    const [selected, setSelected] = useState([]);\n    const [orderBy, setOrderBy] = useState('id');\n    const [filterName, setFilterName] = useState('');\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [userRequest, setUserRequest] = useState([]);\n    const [loading, setLoading] = useState(false);\n\n    useEffect(() => {\n        setLoading(true)\n        const url = `${API_URL}/${ALLPRESSRELEASES}`;\n\n        axios.post(url, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        }).then(response => response.data)\n            .then((data) => {\n                setLoading(false)\n                setUserRequest(data.data.Pressreleases);\n            })\n\n    }, [state]);\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = userRequest.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n        setSelected(newSelected);\n\n    };\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleFilterByName = (event) => {\n        setFilterName(event.target.value);\n    };\n\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userRequest.length) : 0;\n\n    const filteredUsers = applySortFilter(userRequest, getComparator(order, orderBy), filterName);\n    const isUserNotFound = filteredUsers.length === 0;\n    return (\n        <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n             <ToastContainer />\n             {loading && (\n          <Loader />\n       )}\n            <Container>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Press Releases\n                    </Typography>\n                    <Button\n                        variant=\"contained\"\n                        component={RouterLink}\n                        to=\"/dashboard/press-releases/press-releases/add\"\n                        startIcon={<Icon icon={plusFill} />}\n                    >\n                       Add Press Releases\n                    </Button>\n                </Stack>\n              \n                <Card>\n                    <UserListToolbar\n                        numSelected={selected.length}\n                        filterName={filterName}\n                        onFilterName={handleFilterByName}\n                        selected={selected}\n                    />\n\n                    <Scrollbar>\n                        <TableContainer sx={{ minWidth: 800 }}>\n                            <Table>\n                                <UserListHead\n                                    order={order}\n                                    orderBy={orderBy}\n                                    headLabel={TABLE_HEAD}\n                                    rowCount={userRequest.length}\n                                    numSelected={selected.length}\n                                    onRequestSort={handleRequestSort}\n                                    onSelectAllClick={handleSelectAllClick}\n                                />\n                                <TableBody>\n                                    {filteredUsers\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row) => {\n                                            const { id, Pressreleasesimage ,  title, shortdescription, longdescription,} = row;\n                                            const isItemSelected = selected.indexOf(id) !== -1;\n\n                                            return (\n                                                <TableRow\n                                                    hover\n                                                    key={id}\n                                                    tabIndex={-1}\n                                                    role=\"checkbox\"\n                                                    selected={isItemSelected}\n                                                    aria-checked={isItemSelected}\n                                                >\n                                                    <TableCell padding=\"checkbox\">\n                                                        <Checkbox\n                                                            checked={isItemSelected}\n                                                            onChange={(event) => handleClick(event, id)}\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">{id}</TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <img src={\"\" + IMG_URL + \"\" + Pressreleasesimage + \"\"} className={classes.img} width=\"100px\" />\n\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">{title}</TableCell>\n                                                    {/* <TableCell align=\"left\">{shortdescription}</TableCell>\n                                                    <TableCell align=\"left\">{longdescription}</TableCell> */}\n                                                    <TableCell align=\"right\">\n                                                        <UserMoreMenu id={id} />\n                                                    </TableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    {emptyRows > 0 && (\n                                        <TableRow style={{ height: 53 * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                                {isUserNotFound && (\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                                                <SearchNotFound searchQuery={filterName} />\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                )}\n                            </Table>\n                        </TableContainer>\n                    </Scrollbar>\n\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={userRequest.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </Card>\n            </Container>\n        </Page>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Donation\\Donation.js",["729","730"],"import { filter } from 'lodash';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { API_URL, ALLDONATION } from \"../../Apiconstant/Apiconstant\"\n// material\nimport {\n    Card,\n    Table,\n    Stack,\n    Button,\n    Checkbox,\n    TableRow,\n    TableBody,\n    TableCell,\n    Container,\n    Typography,\n    TableContainer,\n    TablePagination,\n    Switch,\n} from '@mui/material';\n// components\nimport Page from '../../components/Page';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Icon } from '@iconify/react';\nimport { Link as RouterLink } from 'react-router-dom';\n// ----------------------------------------------------------------------\nimport { makeStyles } from \"@material-ui/styles\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from \"../../commocomponent/Loader\"\n\nconst TABLE_HEAD = [\n    { id: 'id', label: 'ID', alignRight: false },\n    { id: 'userName', label: 'User Name', alignRight: false },\n    { id: 'phoneNumber', label: 'Phone Number', alignRight: false },\n    { id: 'email', label: 'Email', alignRight: false },\n    { id: 'country', label: 'Country', alignRight: false },\n    { id: 'state', label: 'State', alignRight: false },\n    { id: 'city', label: 'City', alignRight: false },\n    { id: 'donationprice', label: 'Donation Price', alignRight: false },\n    { id: 'status', label: 'Status', alignRight: false },\n\n\n    { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'asc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    if (query) {\n        return filter(array, (_user) => _user.userName.toString().toLowerCase().indexOf(query.toLowerCase()) !== -1);\n    }\n    return stabilizedThis.map((el) => el[0]);\n}\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    button: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n    modal: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n}))\nexport default function Donation() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n\n    const [page, setPage] = useState(0);\n    const [order, setOrder] = useState('asc');\n    const [selected, setSelected] = useState([]);\n    const [orderBy, setOrderBy] = useState('id');\n    const [filterName, setFilterName] = useState('');\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [userRequest, setUserRequest] = useState([]);\n    useEffect(() => {\n        setLoading(true)\n        const url = `${API_URL}/${ALLDONATION}`;\n\n        axios.get(url, {})\n        .then(response => response.data)\n            .then((data) => {\n                setLoading(false)\n                setUserRequest(data.data.donation);\n            })\n\n    }, []);\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = userRequest.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n        setSelected(newSelected);\n\n    };\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleFilterByName = (event) => {\n        setFilterName(event.target.value);\n    };\n\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userRequest.length) : 0;\n\n    const filteredUsers = applySortFilter(userRequest, getComparator(order, orderBy), filterName);\n    const isUserNotFound = filteredUsers.length === 0;\n    return (\n        <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n             <ToastContainer />\n             {loading && (\n          <Loader />\n       )}\n            <Container>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Donation\n                    </Typography>\n                    <Button\n                        variant=\"contained\"\n                        component={RouterLink}\n                        to=\"/dashboard/donation/donation/add\"\n                        startIcon={<Icon icon={plusFill} />}\n                    >\n                       Add Donation\n                    </Button>\n                </Stack>\n              \n                <Card>\n                    <UserListToolbar\n                        numSelected={selected.length}\n                        filterName={filterName}\n                        onFilterName={handleFilterByName}\n                        selected={selected}\n                    />\n\n                    <Scrollbar>\n                        <TableContainer sx={{ minWidth: 800 }}>\n                            <Table>\n                                <UserListHead\n                                    order={order}\n                                    orderBy={orderBy}\n                                    headLabel={TABLE_HEAD}\n                                    rowCount={userRequest.length}\n                                    numSelected={selected.length}\n                                    onRequestSort={handleRequestSort}\n                                    onSelectAllClick={handleSelectAllClick}\n                                />\n                                <TableBody>\n                                    {filteredUsers\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row) => {\n                                            const { id, userName, phoneNumber, email, countryname, statename, cityname, donationprice,status } = row;\n                                            const isItemSelected = selected.indexOf(id) !== -1;\n\n                                            return (\n                                                <TableRow\n                                                    hover\n                                                    key={id}\n                                                    tabIndex={-1}\n                                                    role=\"checkbox\"\n                                                    selected={isItemSelected}\n                                                    aria-checked={isItemSelected}\n                                                >\n                                                    <TableCell padding=\"checkbox\">\n                                                        <Checkbox\n                                                            checked={isItemSelected}\n                                                            onChange={(event) => handleClick(event, id)}\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">{id}</TableCell>\n                                                    <TableCell align=\"left\">{userName}</TableCell>\n                                                    <TableCell align=\"left\">{phoneNumber}</TableCell>\n                                                    <TableCell align=\"left\">{email}</TableCell>\n                                                    <TableCell align=\"left\">{countryname} </TableCell>\n                                                    <TableCell align=\"left\">{statename} </TableCell>\n                                                    <TableCell align=\"left\">{cityname} </TableCell>\n                                                    <TableCell align=\"left\">{donationprice} </TableCell>\n                                                    <TableCell align=\"left\">\n                                                    <Switch  checked={(status) ? 'checked' : ''}/>\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">\n                                                        <UserMoreMenu id={id} />\n                                                    </TableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    {emptyRows > 0 && (\n                                        <TableRow style={{ height: 53 * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                                {isUserNotFound && (\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                                                <SearchNotFound searchQuery={filterName} />\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                )}\n                            </Table>\n                        </TableContainer>\n                    </Scrollbar>\n\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={userRequest.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </Card>\n            </Container>\n        </Page>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Galleryimage\\Galleryimage.js",["731","732","733","734","735","736","737","738"],"import { filter } from 'lodash';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { API_URL, GETGALLRYIMAGE, IMG_URL ,ADDGALLRYIMAGE} from \"../../Apiconstant/Apiconstant\"\n// material\nimport {\n    Card,\n    Table,\n    Stack,\n    Button,\n    Checkbox,\n    TableRow,\n    TableBody,\n    TableCell,\n    Container,\n    Typography,\n    TableContainer,\n    TablePagination,\n    Switch,\n} from '@mui/material';\n// components\nimport Page from '../../components/Page';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/Galleryimage/index';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Icon } from '@iconify/react';\n// ----------------------------------------------------------------------\nimport { makeStyles } from \"@material-ui/styles\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport ImgCrop from \"antd-img-crop\";\nimport { Upload } from \"antd\";\nimport { Formik, Form } from \"formik\";\nimport { Link as RouterLink, useNavigate , useLocation} from 'react-router-dom';\nimport Loader from \"../../commocomponent/Loader\"\n\nconst TABLE_HEAD = [\n    { id: 'id', label: 'ID', alignRight: false },\n    { id: 'Gallery image', label: 'Gallery Image ', alignRight: false },\n    { id: '' }\n];\n\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'asc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    if (query) {\n        return filter(array, (_user) => _user.galleryimage.toString().toLowerCase().indexOf(query.toLowerCase()) !== -1);\n    }\n    return stabilizedThis.map((el) => el[0]);\n}\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    button: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n    modal: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n}))\nexport default function Galleryimage() {\n    const classes = useStyles();\n    const {state}=useLocation();\n    const [contractdetail, setcontractdetail] = useState([]);\n    const navigate = useNavigate();\n    const [page, setPage] = useState(0);\n    const [order, setOrder] = useState('asc');\n    const [selected, setSelected] = useState([]);\n    const [orderBy, setOrderBy] = useState('id');\n    const [filterName, setFilterName] = useState('');\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [vehiclemage, setVehiclemage] = useState();\n    const [loading, setLoading] = useState(false);\n\n    const onChange = ({ fileList }) => {\n        setVehiclemage({ fileList });\n\n\n    };\n    useEffect(() => {\n        setLoading(true)\n        const url = `${API_URL}/${GETGALLRYIMAGE}`;\n\n        axios.post(url, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        }).then(response => response.data)\n            .then((data) => {\n                setLoading(false)\n                setcontractdetail(data.data.GalleryimageS)\n            })\n\n    }, [state]);\n    const success = () => { }\n\n\n\n    var bodyFormData = new FormData();\n\n    function onSubmit(data) {\n        setLoading(true)\n        const updatevehicleurl = `${API_URL}/${ADDGALLRYIMAGE}`;\n        if (vehiclemage.fileList) {\n            for (var i = 0; i < vehiclemage.fileList.length; i++) {\n                bodyFormData.append('galleryimage', vehiclemage.fileList[i].originFileObj);\n            }\n        }\n\n        axios.post(updatevehicleurl, bodyFormData, {\n        })\n            .then((response) => {\n                if (response.data.status == '200') {\n                    success(toast.success(response.data.message))\n                    // navigate('/dashboard/gallery-image', { state: {status:'done'} });\n                    window.location.href = '/dashboard/gallery-image';\n                }\n                setLoading(false)\n            })\n    }\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = contractdetail.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n        setSelected(newSelected);\n\n    };\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleFilterByName = (event) => {\n        setFilterName(event.target.value);\n    };\n\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - contractdetail.length) : 0;\n\n    const filteredUsers = applySortFilter(contractdetail, getComparator(order, orderBy), filterName);\n    const isUserNotFound = filteredUsers.length === 0;\n    return (\n       \n    \n        <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n            <ToastContainer />\n            {loading && (\n            <Loader />\n          )}\n            <Container>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n                <Typography variant=\"h4\">Gallery Image</Typography>\n                </Stack>\n                <Formik\n                        initialValues={{\n\n                        }}\n\n                        onSubmit={(values) => {\n                            onSubmit(values)\n\n                        }}\n                    >\n                        {({ resetForm }) => {\n\n                            return (\n                                <Form>\n                                    <div className={classes.my_vehicle_main}>\n                                        <Upload\n                                            listType=\"picture-card\"\n                                            onChange={onChange}\n                                            multiple={true}\n                                        >\n                                            {'+ Upload'}\n                                        </Upload>\n                                    </div>\n                                    <Button type=\"submit\" className=\"btn1\">\n                                        Save</Button>\n                                </Form>\n\n                            );\n                        }}\n                    </Formik>\n                <Card>\n                    <UserListToolbar\n                        numSelected={selected.length}\n                        filterName={filterName}\n                        onFilterName={handleFilterByName}\n                        selected={selected}\n                    />\n\n                    <Scrollbar>\n                        <TableContainer sx={{ minWidth: 800 }}>\n                            <Table>\n                                <UserListHead\n                                    order={order}\n                                    orderBy={orderBy}\n                                    headLabel={TABLE_HEAD}\n                                    rowCount={contractdetail.length}\n                                    numSelected={selected.length}\n                                    onRequestSort={handleRequestSort}\n                                    onSelectAllClick={handleSelectAllClick}\n                                />\n                                <TableBody>\n                                    {filteredUsers\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row) => {\n                                            const { id, galleryimage } = row;\n                                            const isItemSelected = selected.indexOf(id) !== -1;\n\n                                            return (\n                                                <TableRow\n                                                    hover\n                                                    key={id}\n                                                    tabIndex={-1}\n                                                    role=\"checkbox\"\n                                                    selected={isItemSelected}\n                                                    aria-checked={isItemSelected}\n                                                >\n                                                    <TableCell padding=\"checkbox\">\n                                                        <Checkbox\n                                                            checked={isItemSelected}\n                                                            onChange={(event) => handleClick(event, id)}\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">{id}</TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <img src={\"\" + IMG_URL + \"\" + galleryimage + \"\"} className={classes.img} width=\"100px\" />\n\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">\n                                                        <UserMoreMenu id={id} />\n                                                    </TableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    {emptyRows > 0 && (\n                                        <TableRow style={{ height: 53 * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                                {isUserNotFound && (\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                                                <SearchNotFound searchQuery={filterName} />\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                )}\n                            </Table>\n                        </TableContainer>\n                    </Scrollbar>\n\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={contractdetail.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </Card>\n            </Container>\n        </Page>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Pressreleases\\AddPressreleases\\AddPressreleases.js",["739","740","741","742","743","744","745","746","747","748","749","750","751","752","753"],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport {\n    RadioGroup, TextField\n} from \"../../../commocomponent/FormFields\";\nimport { Input } from 'reactstrap';\nimport { TEXT_FIELD, EMAIL, PHONEREG, PRICE_NUMBER } from \"../../../Validation\";\nimport * as Yup from \"yup\";\n\nimport {\n    Grid,\n    Typography,\n    Button,\n    Card,\n    CardContent,\n    Box,\n} from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Moment from 'moment';\nimport { API_URL, ADDPRESSRELEASES } from \"../../../Apiconstant/Apiconstant\"\n// components\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Select from \"react-select\";\nimport Page from '../../../components/Page';\nimport { Formik, Form } from \"formik\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Upload } from \"antd\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser from 'react-html-parser';\nimport { CustomSelect } from '../../../commocomponent/FormFields';\n\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    submit: {\n        top: \"17px\"\n    },\n    avatarpreview: {\n        width: \"136px\",\n        height: \"131px\"\n    },\n    svg: {\n        display: \"noneimportant\"\n    }\n}))\n\nexport default function AddPressreleases() {\n    const [replymsg, setreplymsg] = useState('');\n    ClassicEditor.defaultConfig = {\n        toolbar: {\n            items: [\n                'heading',\n                '|',\n                'bold',\n                'italic',\n                '|',\n                'link',\n                '|',\n                'bulletedList',\n                'numberedList',\n                '|',\n                'insertTable',\n                '|',\n                'undo',\n                'redo'\n            ]\n        },\n        table: {\n            contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']\n        },\n        language: 'en'\n    };\n    const navigate = useNavigate();\n    const success = () => { }\n    const classes = useStyles();\n    const [userRequest, setUserRequest] = useState([]);\n    const [vehiclemage, setVehiclemage] = useState(\"notset\");\n\n\n    const onChange = ({ fileList }) => {\n        setVehiclemage({ fileList });\n    };\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow.document.write(image.outerHTML);\n    };\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const [image, SetImage] = useState(\"notset\");\n\n    var resultdiv = {\n        display: \"flex\",\n    };\n\n    const renderPhotos = (source) => {\n        return source.map((photo) => {\n            SetImage(photo);\n            return <></>;\n        });\n    };\n\n    const onSubmit = (values, e) => {\n        const url1 = `${API_URL}/${ADDPRESSRELEASES}`;\n        var bodyFormData = new FormData();\n        bodyFormData.append(\"title\", values.title);\n        bodyFormData.append(\"shortdescription\", values.shortdescription);\n        bodyFormData.append(\"longdescription\", replymsg);\n        bodyFormData.append(\"posttype\", values.posttype);\n\n        if (vehiclemage.fileList) {\n            for (var i = 0; i < vehiclemage.fileList.length; i++) {\n                bodyFormData.append(\"Pressreleasesimage\", vehiclemage.fileList[i].originFileObj);\n            }\n        }\n        axios\n            .post(url1, bodyFormData,\n                {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    }\n                })\n            .then((response) => {\n\n                if (response.status === 200) {\n                    success(toast.success(response.data.message))\n                    navigate('/dashboard/press-releases', { replace: true });\n                }\n            })\n\n    };\n    return (\n        <>\n            <ToastContainer />\n            <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                <Box sx={{ pb: 5 }}>\n                    <Typography variant=\"h4\">Add Press Releases</Typography>\n                </Box>\n\n                <Card className={classes.root} variant=\"outlined\">\n\n                    <CardContent>\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n\n                                <Formik\n                                    key=\"one\"\n                                    enableReinitialize\n                                    initialValues={{\n                                        title: \"\",\n                                        shortdescription: \"\",\n                                        longdescription: \"\",\n                                    }}\n                                    validationSchema={Yup.object().shape({\n\n                                        shortdescription: Yup.string()\n                                            .required(\"User Name is required\"),\n                                        title: Yup.string()\n                                            .required(\"User Name is required\")\n                                    })}\n\n                                    onSubmit={values => {\n                                        onSubmit(values)\n                                        console.log(values)\n                                    }}\n\n                                >\n                                    {({ setFieldValue,\n                                        touched,\n                                        values, }) => (\n                                        <>\n                                            <Form key=\"oneForm\">\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Title\"\n                                                            type=\"text\"\n                                                            name=\"title\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Short Description\"\n                                                            type=\"text\"\n                                                            name=\"shortdescription\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <CKEditor\n                                                            editor={ClassicEditor}\n                                                            data=\"<p>Hello from CKEditor 5!</p>\"\n\n                                                            onReady={editor => {\n                                                                // You can store the \"editor\" and use when it is needed.\n                                                                console.log('Editor is ready to use!', editor);\n                                                            }}\n                                                            onChange={(event, editor) => {\n                                                                const data = editor.getData();\n                                                                setreplymsg(data);\n                                                                console.log({ event, editor, data });\n                                                            }}\n                                                            onBlur={(event, editor) => {\n                                                                console.log('Blur.', editor);\n                                                            }}\n                                                            onFocus={(event, editor) => {\n                                                                console.log('Focus.', editor);\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <div className={classes.edit}>\n                                                            <div className=\"avatar-upload\">\n                                                                <div className={classes.avatarpreview}>\n\n                                                                </div>\n                                                                <div\n                                                                    className=\"result\"\n                                                                    style={resultdiv}\n                                                                    id=\"file-image\"\n                                                                >\n                                                                    {renderPhotos(selectedFiles)}\n                                                                </div>\n                                                                <div>\n                                                                    <Upload\n                                                                        name=\"choosephoto\"\n                                                                        listType=\"picture-card\"\n                                                                        onChange={onChange}\n                                                                        onPreview={onPreview}\n                                                                    >\n                                                                        {\"Upload\"}\n                                                                    </Upload>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <label for=\"select\">Select File type *</label>\n                                                        <CustomSelect\n                                                            name=\"posttype\"\n                                                            children={[{ \"value\": \"withimg\", \"label\": \"withimg\" }, { \"value\": \"withvedio\", \"label\": \"withvedio\" }]}\n                                                        />\n                                                    </Grid>\n\n\n                                                </Grid>\n                                                <Button\n                                                    type=\"submit\"\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    className={classes.submit}\n                                                >\n                                                    ADD\n                                                </Button>\n\n                                            </Form>\n                                        </>\n                                    )}\n                                </Formik>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Page>\n        </>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\AnnualReports\\AddAnnualReports\\AddAnnualReports.js",["754","755","756","757","758","759","760","761","762","763","764","765","766","767","768","769","770","771","772","773","774"],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport {\n    RadioGroup, TextField, UploadFile\n} from \"../../../commocomponent/FormFields\";\nimport { Input } from 'reactstrap';\nimport { TEXT_FIELD, EMAIL, PHONEREG, PRICE_NUMBER } from \"../../../Validation\";\nimport * as Yup from \"yup\";\nimport Select from \"react-select\";\n\nimport {\n    Grid,\n    Typography,\n    Button,\n    Card,\n    CardContent,\n    Box,\n} from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Moment from 'moment';\nimport { API_URL, ADDANNUALREPORT } from \"../../../Apiconstant/Apiconstant\"\n// components\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Page from '../../../components/Page';\nimport { Formik, Form } from \"formik\";\nimport { IMAGE } from \"../../../Validation/index\"\n// import { useHistory } from \"react-router-dom\";\nimport { CountryDropdown, RegionDropdown, CityDropdown } from 'react-country-region-selector';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    submit: {\n        top: \"17px\"\n    },\n}))\n\nexport default function AddAnnualReports() {\n    const navigate = useNavigate();\n    const classes = useStyles();\n    const success = () => { }\n    const url = `${API_URL}/${ADDANNUALREPORT}`;\n    const [driverimgstate, setDriverimgstate] = useState();\n\n\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n\n    const [image, SetImage] = useState(false)\n    const [loading, setLoading] = useState(false);\n    const [vehicleimageerror, setVehicleimageerror] = useState(false);\n\n    function next() {\n        if (!image) {\n            setVehicleimageerror(true);\n            return false;\n        } else {\n            setVehicleimageerror(false);\n        }\n    }\n    function onFileChange(event) {\n        setDriverimgstate(event);\n        return event;\n    };\n\n    const handleImageChange = (e) => {\n        if (e.target.files) {\n            setDriverimgstate(e.target.files[0]);\n            const filesArray = Array.from(e.target.files).map((file) =>\n                URL.createObjectURL(file)\n            );\n            setSelectedFiles((prevImages) =>\n                prevImages.concat(filesArray));\n            Array.from(e.target.files).map(\n                (file) =>\n                    URL.revokeObjectURL(file)\n            );\n        }\n    }\n\n    const renderPhotos = (source) => {\n        return source.map((annual_reports) => {\n            SetImage(annual_reports);\n            return <></>\n                ;\n        });\n    };\n    const [selected, setSelected] = useState([]);\n    const [lables1, setlables] = useState([]);\n    let minOffset = 0, maxOffset = 10;\n    let thisYear = (new Date()).getFullYear();\n    let allYears = [];\n    let lablearray = [];\n    for (let x = 0; x <= maxOffset; x++) {\n        lablearray.push({ 'label': thisYear - x , 'value': thisYear - x })\n    }\n    setlables(lablearray);\n      function onSubmit(values) {\n        const token = localStorage.getItem(\"token\");\n        var bodyFormData = new FormData();\n        bodyFormData.append('year', selected.value);\n        bodyFormData.append('annual_reports', driverimgstate);\n        setLoading(true);\n\n        axios.post(url, bodyFormData, {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n            }\n        })\n\n            .then((response) => {\n                setLoading(false);\n\n                if (response.data.status == '200') {\n                    success(toast.success(response.data.message))\n\n                }\n            }, (error) => {\n            });\n\n\n\n    }\n\n    return (\n        <>\n            <ToastContainer />\n            <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                <Box sx={{ pb: 5 }}>\n                    <Typography variant=\"h4\">Add Annual report</Typography>\n                </Box>\n\n                <Card className={classes.root} variant=\"outlined\">\n\n                    <CardContent>\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n\n                                <Formik\n                                    key=\"one\"\n                                    enableReinitialize\n                                    initialValues={{\n                                        year: \"\",\n                                        file: \"\"\n\n                                    }}\n                                    validationSchema={Yup.object().shape({\n                                      \n\n\n                                    })}\n\n                                    onSubmit={values => {\n                                        onSubmit(values)\n\n\n                                    }}\n\n                                >\n                                    {({ setFieldValue,\n                                        touched,\n                                        values, }) => (\n                                        <>\n                                            <Form key=\"oneForm\">\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={12} sm={6}>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <Select\n                                                            options={lables1}\n                                                            onChange={setSelected}\n                                                            value={selected}\n                                                            selected={selected}\n                                                            placeholder=\"Select YEAR\"\n                                                        />\n                                                    </Grid>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n\n                                                        <Input type=\"file\" id=\"file\" multiple onChange={handleImageChange} accept=\"application/pdf\" className=\"btn btn-primary\" hidden />\n                                                        <UploadFile handleChange={onFileChange} name=\"file\" id=\"file\" variant=\"button\" buttonColor=\"#fb0\" buttonText=\"Upload PDF\" onChange={handleImageChange} setFieldValue={setFieldValue}>\n\n                                                        </UploadFile>\n                                                        {(vehicleimageerror) ? <div style={{ color: \"red\" }}>This is required</div> : ''}\n\n                                                    </Grid>\n                                                </Grid>\n                                                <Button\n                                                    type=\"submit\"\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    className={classes.submit}\n                                                    onClick={next}\n                                                >\n                                                    ADD\n                                                </Button>\n\n                                            </Form>\n                                        </>\n                                    )}\n                                </Formik>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Page>\n        </>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Pressreleases\\EditPressreleases\\EditPressreleases.js",["775","776","777","778","779","780","781","782","783","784","785","786","787","788","789","790"],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport {\n    RadioGroup, TextField\n} from \"../../../commocomponent/FormFields\";\nimport { Input } from 'reactstrap';\nimport { TEXT_FIELD, EMAIL, PHONEREG, PRICE_NUMBER } from \"../../../Validation\";\nimport * as Yup from \"yup\";\n\nimport {\n    Grid,\n    Typography,\n    Button,\n    Card,\n    CardContent,\n    Box,\n} from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Moment from 'moment';\nimport { API_URL, EDITPRESSRELEASES, SINGLEPRESSRELEASES, IMG_URL } from \"../../../Apiconstant/Apiconstant\"\n// components\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Select from \"react-select\";\nimport Page from '../../../components/Page';\nimport { Formik, Form } from \"formik\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Upload } from \"antd\";\nimport { useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport ReactHtmlParser from 'react-html-parser';\nimport { CustomSelect } from '../../../commocomponent/FormFields';\n\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    submit: {\n        top: \"17px\"\n    },\n    avatarpreview: {\n        width: \"136px\",\n        height: \"131px\"\n    },\n    svg: {\n        display: \"noneimportant\"\n    }\n}))\n\nexport default function EditPressreleases() {\n    const [replymsg, setreplymsg] = useState('');\n    ClassicEditor.defaultConfig = {\n        toolbar: {\n            items: [\n                'heading',\n                '|',\n                'bold',\n                'italic',\n                '|',\n                'link',\n                '|',\n                'bulletedList',\n                'numberedList',\n                '|',\n                'insertTable',\n                '|',\n                'undo',\n                'redo'\n            ]\n        },\n        table: {\n            contentToolbar: ['tableColumn', 'tableRow', 'mergeTableCells']\n        },\n        language: 'en'\n    };\n    let { id } = useParams();\n    const navigate = useNavigate();\n    const success = () => { }\n    const classes = useStyles();\n    const [userRequest, setUserRequest] = useState([]);\n    const [vehiclemage, setVehiclemage] = useState(\"notset\");\n    const [title, settitle] = useState();\n    const [shortdescription, setshortdescription] = useState();\n    const [longdescription, setlongdescription] = useState();\n    const [posttype, setposttype] = useState();\n\n\n    const { setValue } = useForm();\n    useEffect(() => {\n        const url = `${API_URL}/${SINGLEPRESSRELEASES}`;\n        axios.post(url, {\n            id: id,\n        }, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        })\n            .then((response) => {\n                setUserRequest({\n                    user: response.data.data.Pressreleases,\n                });\n                let user = response.data.data.Pressreleases;\n                if (user) {\n                    settitle(user.title);\n                    setshortdescription(user.shortdescription);\n                    setlongdescription(user.longdescription);\n                    setposttype(user.posttype);\n\n\n                }\n            })\n\n    }, []);\n    const { user } = userRequest;\n    const onChange = ({ fileList }) => {\n        setVehiclemage({ fileList });\n    };\n\n    const onPreview = async (file) => {\n        let src = file.url;\n        if (!src) {\n            src = await new Promise((resolve) => {\n                const reader = new FileReader();\n                reader.readAsDataURL(file.originFileObj);\n                reader.onload = () => resolve(reader.result);\n            });\n        }\n        const image = new Image();\n        image.src = src;\n        const imgWindow = window.open(src);\n        imgWindow.document.write(image.outerHTML);\n    };\n    const [selectedFiles, setSelectedFiles] = useState([]);\n\n    const [image, SetImage] = useState(\"notset\");\n\n    var resultdiv = {\n        display: \"flex\",\n    };\n\n    const renderPhotos = (source) => {\n        return source.map((photo) => {\n            SetImage(photo);\n            return <></>;\n        });\n    };\n\n    const onSubmit = (values, e) => {\n        const url1 = `${API_URL}/${EDITPRESSRELEASES}`;\n        var bodyFormData = new FormData();\n        bodyFormData.append(\"id\", id);\n        bodyFormData.append(\"title\", values.title);\n        bodyFormData.append(\"shortdescription\", values.shortdescription);\n        bodyFormData.append(\"posttype\", values.posttype);\n\n        bodyFormData.append(\"longdescription\", replymsg);\n        if (vehiclemage.fileList) {\n            for (var i = 0; i < vehiclemage.fileList.length; i++) {\n                bodyFormData.append(\"Pressreleasesimage\", vehiclemage.fileList[i].originFileObj);\n            }\n        }\n        axios\n            .post(url1, bodyFormData,\n                {\n                    headers: {\n                        'Content-Type': 'multipart/form-data',\n                    }\n                })\n            .then((response) => {\n\n                if (response.status === 200) {\n                    success(toast.success(response.data.message))\n                    navigate('/dashboard/press-releases', { replace: true });\n                }\n            })\n\n    };\n    return (\n        <>\n            <ToastContainer />\n            <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                <Box sx={{ pb: 5 }}>\n                    <Typography variant=\"h4\">Add Press Releases</Typography>\n                </Box>\n\n                <Card className={classes.root} variant=\"outlined\">\n\n                    <CardContent>\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n\n                                <Formik\n                                    key=\"one\"\n                                    enableReinitialize\n                                    initialValues={{\n                                        title: title ? title : \"\",\n                                        shortdescription: shortdescription ? shortdescription : \"\",\n                                        longdescription:  \"\",\n                                        posttype:posttype ? posttype :\"\"\n                                    }}\n                                    validationSchema={Yup.object().shape({\n                                   \n                                        shortdescription: Yup.string()\n                                            .required(\"User Name is required\"),\n                                        title: Yup.string()\n                                            .required(\"User Name is required\")\n                                    })}\n\n                                    onSubmit={values => {\n                                        onSubmit(values)\n                                        console.log(values)\n                                    }}\n\n                                >\n                                    {({ setFieldValue,\n                                        touched,\n                                        values, }) => (\n                                        <>\n                                            <Form key=\"oneForm\">\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Title\"\n                                                            type=\"text\"\n                                                            name=\"title\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Short Description\"\n                                                            type=\"text\"\n                                                            name=\"shortdescription\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <CKEditor\n                                                            editor={ClassicEditor}\n                                                            data={longdescription }\n                                                            onReady={editor => {\n                                                                // You can store the \"editor\" and use when it is needed.\n                                                                console.log('Editor is ready to use!', editor);\n                                                            }}\n                                                            onChange={(event, editor) => {\n                                                                const data = editor.getData();\n                                                                setreplymsg(data);\n                                                                console.log({ event, editor, data });\n                                                            }}\n                                                            onBlur={(event, editor) => {\n                                                                console.log('Blur.', editor);\n                                                            }}\n                                                            onFocus={(event, editor) => {\n                                                                console.log('Focus.', editor);\n                                                            }}\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                    <div className={classes.edit}>\n                                                        <div className=\"avatar-upload\">\n                                                            <div className={classes.avatarpreview}>\n                                                                {vehiclemage == \"notset\" &&\n                                                                    user &&\n                                                                    user.Pressreleasesimage ? (\n                                                                    <img\n                                                                        src={\n                                                                            \"\" +\n                                                                            IMG_URL +\n                                                                            \"\" +\n                                                                            user.Pressreleasesimage +\n                                                                            \"\"\n                                                                        }\n                                                                        className=\"\"\n                                                                        alt=\"user image\"\n                                                                        width=\"100\"\n                                                                    />\n                                                                ) : (\n                                                                    <div\n                                                                        id=\"imagePreview\"\n                                                                        style={{\n                                                                            backgroundImage: \"url(\" + vehiclemage + \")\",\n                                                                        }}\n                                                                    ></div>\n                                                                )}\n                                                            </div>\n                                                            <div\n                                                                className=\"result\"\n                                                                style={resultdiv}\n                                                                id=\"file-image\"\n                                                            >\n                                                                {renderPhotos(selectedFiles)}\n                                                            </div>\n                                                            <div>\n                                                                <Upload\n                                                                    name=\"choosephoto\"\n                                                                    listType=\"picture-card\"\n                                                                    onChange={onChange}\n                                                                    onPreview={onPreview}\n                                                                >\n                                                                    {\"image upload\"}\n                                                                </Upload>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <label for=\"select\">Select File type *</label>\n                                                        <CustomSelect\n                                                            name=\"posttype\"\n                                                            children={[{ \"value\": \"withimg\", \"label\": \"withimg\" }, { \"value\": \"withvedio\", \"label\": \"withvedio\" }]}\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                                <Button\n                                                    type=\"submit\"\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    className={classes.submit}\n                                                >\n                                                    Edit\n                                                </Button>\n\n                                            </Form>\n                                        </>\n                                    )}\n                                </Formik>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Page>\n        </>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\AnnualReports\\AnnualReports.js",["791","792","793","794"],"import { filter } from 'lodash';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { API_URL, GETANNUALREPORT , IMG_URL } from \"../../Apiconstant/Apiconstant\"\nimport { BsFillFileEarmarkPdfFill } from \"react-icons/bs\";\n\n// material\nimport {\n    Card,\n    Table,\n    Stack,\n    Button,\n    Checkbox,\n    TableRow,\n    TableBody,\n    TableCell,\n    Container,\n    Typography,\n    TableContainer,\n    TablePagination,\n    Switch,\n} from '@mui/material';\n// components\nimport Page from '../../components/Page';\nimport Scrollbar from '../../components/Scrollbar';\nimport SearchNotFound from '../../components/SearchNotFound';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../components/_dashboard/user/Annualreport/index';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Icon } from '@iconify/react';\nimport { Link as RouterLink  ,useLocation} from 'react-router-dom';\n// ----------------------------------------------------------------------\nimport { makeStyles } from \"@material-ui/styles\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loader from \"../../commocomponent/Loader\"\n\nconst TABLE_HEAD = [\n    { id: 'id', label: 'ID', alignRight: false },\n    { id: 'year', label: 'year', alignRight: false },\n    { id: 'AnnualReports', label: 'Annual Reports', alignRight: false },\n    { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'asc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    if (query) {\n        return filter(array, (_user) => _user.userName.toString().toLowerCase().indexOf(query.toLowerCase()) !== -1);\n    }\n    return stabilizedThis.map((el) => el[0]);\n}\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    button: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n    modal: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n}))\nexport default function AnnualReports() {\n    const classes = useStyles();\n    const [loading, setLoading] = useState(false);\n    const {state}=useLocation();\n\n    const [page, setPage] = useState(0);\n    const [order, setOrder] = useState('asc');\n    const [selected, setSelected] = useState([]);\n    const [orderBy, setOrderBy] = useState('id');\n    const [filterName, setFilterName] = useState('');\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [userRequest, setUserRequest] = useState([]);\n    useEffect(() => {\n        setLoading(true)\n        const url = `${API_URL}/${GETANNUALREPORT}`;\n\n        axios.post(url, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        }).then(response => response.data)\n            .then((data) => {\n                setLoading(false)\n                setUserRequest(data.data.Annualreports);\n            })\n\n    }, [state]);\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = userRequest.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n        setSelected(newSelected);\n\n    };\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleFilterByName = (event) => {\n        setFilterName(event.target.value);\n    };\n\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userRequest.length) : 0;\n\n    const filteredUsers = applySortFilter(userRequest, getComparator(order, orderBy), filterName);\n    const isUserNotFound = filteredUsers.length === 0;\n    return (\n        <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n            <ToastContainer />\n            {loading && (\n                <Loader />\n            )}\n            <Container>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Annual Reports\n                    </Typography>\n                    <Button\n                        variant=\"contained\"\n                        component={RouterLink}\n                        to=\"/dashboard/annual-reports/annual-reports/add\"\n                        startIcon={<Icon icon={plusFill} />}\n                    >\n                        Add Annual Reports\n                    </Button>\n                </Stack>\n\n                <Card>\n                    <UserListToolbar\n                        numSelected={selected.length}\n                        filterName={filterName}\n                        onFilterName={handleFilterByName}\n                        selected={selected}\n                    />\n\n                    <Scrollbar>\n                        <TableContainer sx={{ minWidth: 800 }}>\n                            <Table>\n                                <UserListHead\n                                    order={order}\n                                    orderBy={orderBy}\n                                    headLabel={TABLE_HEAD}\n                                    rowCount={userRequest.length}\n                                    numSelected={selected.length}\n                                    onRequestSort={handleRequestSort}\n                                    onSelectAllClick={handleSelectAllClick}\n                                />\n                                <TableBody>\n                                    {filteredUsers\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row) => {\n                                            const { id, year, annual_reports } = row;\n                                            const isItemSelected = selected.indexOf(id) !== -1;\n\n                                            return (\n                                                <TableRow\n                                                    hover\n                                                    key={id}\n                                                    tabIndex={-1}\n                                                    role=\"checkbox\"\n                                                    selected={isItemSelected}\n                                                    aria-checked={isItemSelected}\n                                                >\n                                                    <TableCell padding=\"checkbox\">\n                                                        <Checkbox\n                                                            checked={isItemSelected}\n                                                            onChange={(event) => handleClick(event, id)}\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">{id}</TableCell>\n                                                    <TableCell align=\"left\">{year}</TableCell>\n                                                    <TableCell align=\"left\">\n                                                        <a target=\"_blank\" href={\"\" + IMG_URL + \"\" + annual_reports + \"\"}>\n                                                            <BsFillFileEarmarkPdfFill\n                                                                color=\"red\"\n                                                                style={{ fontSize: \"x-large\" }}\n                                                                className=\"pdf\"\n\n                                                            />\n                                                        </a>\n                                                    </TableCell>\n                                                    <TableCell align=\"right\">\n                                                        <UserMoreMenu id={id} />\n                                                    </TableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    {emptyRows > 0 && (\n                                        <TableRow style={{ height: 53 * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                                {isUserNotFound && (\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                                                <SearchNotFound searchQuery={filterName} />\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                )}\n                            </Table>\n                        </TableContainer>\n                    </Scrollbar>\n\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={userRequest.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </Card>\n            </Container>\n        </Page>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Donation\\Adddonation\\Adddonation.js",["795","796","797","798","799","800","801","802","803","804","805","806","807","808","809"],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport {\n    RadioGroup, TextField\n} from \"../../../commocomponent/FormFields\";\nimport { Input } from 'reactstrap';\nimport { TEXT_FIELD, EMAIL, PHONEREG, PRICE_NUMBER } from \"../../../Validation\";\nimport * as Yup from \"yup\";\n\nimport {\n    Grid,\n    Typography,\n    Button,\n    Card,\n    CardContent,\n    Box,\n} from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Moment from 'moment';\nimport { API_URL, ADDDONATION, ALLCONTRY, ALLSTATE, ALLCITY } from \"../../../Apiconstant/Apiconstant\"\n// components\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport Select from \"react-select\";\nimport Page from '../../../components/Page';\nimport { Formik, Form } from \"formik\";\n// import { useHistory } from \"react-router-dom\";\nimport { CountryDropdown, RegionDropdown, CityDropdown } from 'react-country-region-selector';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    submit: {\n        top: \"17px\"\n    },\n}))\n\nexport default function Adddonation() {\n    const navigate = useNavigate();\n    const success = () => { }\n\n    const [region, SetselectRegion] = useState('');\n    const [city, SetselectCity] = useState('');\n    const classes = useStyles();\n    const [userRequest, setUserRequest] = useState([]);\n    const [country, SetselectCountry] = useState('');\n    const [selected, setSelected] = useState([]);\n    const [selected1, setSelected1] = useState([]);\n    const [selected2, setSelected2] = useState([]);\n\n    const url = `${API_URL}/${ADDDONATION}`;\n    const onSubmit = (values, e) => {\n\n        axios.post(url, {\n            userName: values.userName,\n            phoneNumber: values.phoneNumber,\n            email: values.email,\n            countryname: selected.label,\n            cityname: selected2.label,\n            statename: selected1.label,\n            countryid: selected.value,\n            cityid: selected2.value,\n            stateid: selected1.value,\n            donationprice: values.donationprice,\n            message: values.message,\n            status: values.status,\n        }, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        })\n            .then((response) => {\n\n                if (response.status === 200) {\n                    success(toast.success(response.data.message))\n                }\n                navigate('/dashboard/donation', { replace: true });\n            })\n\n    };\n    const [contryid, setContryid] = useState();\n    console.log()\n    const [lables1, setlables] = useState([]);\n    useEffect(() => {\n        const url = `${API_URL}/${ALLCONTRY}`;\n\n        axios.get(url, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        }).then(response => response.data)\n            .then((data) => {\n                setUserRequest(data.data.donation);\n                let lablearray = [];\n                for (let index = 0; index < data.data.donation.length; index++) {\n                    lablearray.push({ 'label': data.data.donation[index].name || data.data.donation[index].id, 'value': data.data.donation[index].id })\n                }\n                setlables(lablearray);\n            })\n\n    }, []);\n    const [lables2, setlables2] = useState([]);\n    useEffect(() => {\n        const url1 = `${API_URL}/${ALLSTATE}`;\n        axios.post(url1, {\n            id: selected.value,\n        }, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        })\n            .then((data) => {\n                console.log(data.data.data.donation)\n                let lablearray = [];\n                for (let index = 0; index < data.data.data.donation.length; index++) {\n                    lablearray.push({ 'label': data.data.data.donation[index].name || data.data.data.donation[index].id, 'value': data.data.data.donation[index].id })\n                }\n                setlables2(lablearray);\n            })\n\n    }, [selected]);\n    const [lables3, setlables3] = useState([]);\n    useEffect(() => {\n        const url2 = `${API_URL}/${ALLCITY}`;\n        axios.post(url2, {\n            id: selected1.value,\n        }, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        })\n            .then((data) => {\n                let lablearray = [];\n                for (let index = 0; index < data.data.data.donation.length; index++) {\n                    lablearray.push({ 'label': data.data.data.donation[index].name || data.data.data.donation[index].id, 'value': data.data.data.donation[index].id })\n                }\n                setlables3(lablearray);\n            })\n\n    }, [selected1]);\n    const selectcity1 = () => {\n        success(toast.warning(\"please select city\"));\n    }\n\n    const selectcountry1 = () => {\n        success(toast.warning(\"please select country\"));\n    }\n    const selectstate1 = () => {\n        success(toast.warning(\"please select state\"));\n    }\n\n    return (\n        <>\n            <ToastContainer />\n            <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                <Box sx={{ pb: 5 }}>\n                    <Typography variant=\"h4\">Add Donation</Typography>\n                </Box>\n\n                <Card className={classes.root} variant=\"outlined\">\n\n                    <CardContent>\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n\n                                <Formik\n                                    key=\"one\"\n                                    enableReinitialize\n                                    initialValues={{\n                                        userName: \"\",\n                                        phoneNumber: \"\",\n                                        email: \"\",\n                                        donationprice: \"\",\n                                        meassge:\"\",\n                                        status: \"0\"\n                                    }}\n                                    validationSchema={Yup.object().shape({\n                                        userName: Yup.string()\n                                            .required(\"User Name is required\")\n                                            .matches(TEXT_FIELD, \"only letter allowed.\"),\n                                        email: Yup.string()\n                                            .matches(EMAIL, \"Enter valid email.\")\n                                            .required(\"Email is required\"),\n                                        phoneNumber: Yup.string()\n                                            .required(\"Mobile Number is required\")\n                                            .matches(PHONEREG, \"Invalid mobile number!\"),\n                                        donationprice: Yup.string()\n                                            .required(\"Donation Price is required\")\n                                            .matches(PRICE_NUMBER, \"only number allowed.\"),\n                                    })}\n\n                                    onSubmit={values => {\n                                        \n                                        if (selected.value && selected1.value && selected2.value) {\n                                            onSubmit(values)\n                                        }\n\n\n                                    }}\n\n                                >\n                                    {({ setFieldValue,\n                                        touched,\n                                        values, }) => (\n                                        <>\n                                            <Form key=\"oneForm\">\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Full Name\"\n                                                            type=\"text\"\n                                                            name=\"userName\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Phone Number\"\n                                                            type=\"text\"\n                                                            name=\"phoneNumber\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Email\"\n                                                            type=\"text\"\n                                                            name=\"email\"\n                                                            className=\"email1\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <Select\n                                                            options={lables1}\n                                                            onChange={setSelected}\n                                                            value={selected}\n                                                            selected={selected}\n                                                            placeholder=\"Select Country\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <Select\n                                                            options={lables2}\n                                                            onChange={setSelected1}\n                                                            value={selected1}\n                                                            selected={selected1}\n                                                            placeholder=\"Select State\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <Select\n                                                            options={lables3}\n                                                            onChange={setSelected2}\n                                                            value={selected2}\n                                                            selected={selected2}\n                                                            placeholder=\"Select City\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Donation Price\"\n                                                            type=\"text\"\n                                                            name=\"donationprice\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Donation Meassge\"\n                                                            type=\"text\"\n                                                            name=\"message\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <RadioGroup\n                                                            name=\"status\"\n\n                                                            children={[\n                                                                { value: \"1\", label: \"Active \" },\n                                                                { value: \"0\", label: \"Inactive \" },\n                                                            ]}\n                                                            onChange={() => { }}\n                                                            id=\"statusId\"\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                                <Button\n                                                    type=\"submit\"\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    className={classes.submit}\n                                                    onClick={(event) => { selectcountry1(event); selectstate1(); selectcity1(); }}\n                                                >\n                                                    ADD\n                                                </Button>\n\n                                            </Form>\n                                        </>\n                                    )}\n                                </Formik>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Page>\n        </>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\pages\\Donation\\Editdonation\\Editdonation.js",["810","811","812","813","814","815","816","817","818","819"],"import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport {\n    RadioGroup, TextField\n} from \"../../../commocomponent/FormFields\";\nimport { Input } from 'reactstrap';\nimport { useForm } from \"react-hook-form\";\nimport { useParams } from \"react-router-dom\";\nimport Select from \"react-select\";\nimport { TEXT_FIELD, EMAIL, PHONEREG, PRICE_NUMBER } from \"../../../Validation\";\n\nimport {\n    Grid,\n    Typography,\n    Button,\n    Card,\n    CardContent,\n    Box,\n} from \"@mui/material\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport Moment from 'moment';\nimport { API_URL, EDITDONATION, SINGLEDONATION, ALLCONTRY, ALLSTATE, ALLCITY } from \"../../../Apiconstant/Apiconstant\"\n// components\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Page from '../../../components/Page';\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\n// import { useHistory } from \"react-router-dom\";\nimport { CountryDropdown, RegionDropdown, CityDropdown } from 'react-country-region-selector';\n\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    submit: {\n        top: \"17px\"\n    }\n}))\ntoast.configure()\n\nexport default function Editdonation() {\n    const navigate = useNavigate();\n    let { id } = useParams();\n    const success = () => { }\n\n    const { setValue } = useForm();\n    const [editstatus, seteditstatus] = useState(\"1\");\n    const [selected, setSelected] = useState([]);\n    const [selected1, setSelected1] = useState([]);\n    const [selected2, setSelected2] = useState([]);\n    const [countryname, setcountryname] = useState(selected.label);\n    const [countryid, setcountryid] = useState(selected.value);\n    const [cityname, setcityname] = useState(selected2.label);\n    const [cityid, setcityid] = useState(selected2.value);\n    const [statename, setstatename] = useState(selected1.label);\n    const [stateid, setstateid] = useState(selected1.value);\n    const [email, setemail] = useState()\n    const [userName, setuserName] = useState()\n    const [phoneNumber, setphoneNumber] = useState()\n    const [donationprice, setdonationprice] = useState()\n    const [message, setmessage] = useState()\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        setcountryid(selected.value);\n        setcountryname(selected.label)\n        setstateid(selected1.value);\n        setstatename(selected1.label)\n        setcityid(selected2.value);\n        setcityname(selected2.label)\n\n    }, [selected, selected1, selected2]);\n    const url = `${API_URL}/${SINGLEDONATION}`;\n    const updatelotteryurl = `${API_URL}/${EDITDONATION}`;\n    const [userRequest, setUserRequest] = useState({\n        loading: false,\n        user: null,\n    });\n    const onSubmit = (values, e) => {\n\n        axios.post(updatelotteryurl, {\n            id: id,\n            userName: values.userName,\n            phoneNumber: values.phoneNumber,\n            email: values.email,\n            countryid: selected ? selected.value : \"\",\n            cityid: selected2 ? selected2.value : \"\",\n            stateid: selected1 ? selected1.value : \"\",\n            countryname: selected ? selected.label : \"\",\n            cityname: selected2 ? selected2.label : \"\",\n            statename: selected1 ? selected1.label : \"\",\n            donationprice: values.donationprice,\n            message: values.message,\n            status: values.status,\n        }, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        })\n            .then((response) => {\n                if (response.status === 200) {\n                    success(toast.success(response.data.message))\n                    navigate('/dashboard/donation', { replace: true });\n                }\n\n            })\n\n    };\n    useEffect(() => {\n        axios.post(url, {\n            id: id,\n        }, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        })\n            .then((response) => {\n                setUserRequest({\n                    user: response.data.data.donation,\n                });\n                let user = response.data.data.donation;\n                if (user) {\n                    setuserName(user.userName);\n                    setphoneNumber(user.phoneNumber);\n                    setdonationprice(user.donationprice);\n                    setemail(user.email);\n                    setcountryname(user.countryname);\n                    setstatename(user.statename);\n                    setstateid(user.stateid);\n                    setcityname(user.cityname);\n                    setcityid(user.cityid);\n                    setcountryid(user.countryid);\n                    setmessage(user.message);\n\n                }\n                if (response.data.data.donation.status == true) {\n                    seteditstatus(\"1\");\n                } else {\n                    seteditstatus(\"0\");\n                }\n            })\n\n    }, []);\n    const { user } = userRequest;\n\n\n    const [lables1, setlables] = useState([]);\n    useEffect(() => {\n        const url = `${API_URL}/${ALLCONTRY}`;\n\n        axios.get(url, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        }).then(response => response.data)\n            .then((data) => {\n                setUserRequest(data.data.donation);\n                let lablearray = [];\n                for (let index = 0; index < data.data.donation.length; index++) {\n                    lablearray.push({ 'label': data.data.donation[index].name || data.data.donation[index].id, 'value': data.data.donation[index].id })\n                }\n                setlables(lablearray);\n            })\n\n    }, []);\n    const [lables2, setlables2] = useState([]);\n    useEffect(() => {\n        const url1 = `${API_URL}/${ALLSTATE}`;\n        axios.post(url1, {\n            id: selected.value,\n        }, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        })\n            .then((data) => {\n                console.log(data.data.data.donation)\n                let lablearray = [];\n                for (let index = 0; index < data.data.data.donation.length; index++) {\n                    lablearray.push({ 'label': data.data.data.donation[index].name || data.data.data.donation[index].id, 'value': data.data.data.donation[index].id })\n                }\n                setlables2(lablearray);\n            })\n\n    }, [selected]);\n    const [lables3, setlables3] = useState([]);\n    useEffect(() => {\n        const url2 = `${API_URL}/${ALLCITY}`;\n        axios.post(url2, {\n            id: selected1.value,\n        }, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        })\n            .then((data) => {\n                let lablearray = [];\n                for (let index = 0; index < data.data.data.donation.length; index++) {\n                    lablearray.push({ 'label': data.data.data.donation[index].name || data.data.data.donation[index].id, 'value': data.data.data.donation[index].id })\n                }\n                setlables3(lablearray);\n            })\n\n    }, [selected1]);\n    const selectcity1 = () => {\n        success(toast.warning(\"please select city\"));\n    }\n\n    const selectcountry1 = () => {\n        success(toast.warning(\"please select country\"));\n    }\n    const selectstate1 = () => {\n        success(toast.warning(\"please select state\"));\n    }\n\n\n    return (\n        <>\n            <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n                <Box sx={{ pb: 5 }}>\n                    <Typography variant=\"h4\">Edit Donation</Typography>\n                </Box>\n                <Card className={classes.root} variant=\"outlined\">\n                    <CardContent>\n                        <Grid container spacing={4}>\n                            <Grid item xs={12}>\n\n                                <Formik\n                                    key=\"one\"\n                                    enableReinitialize\n                                    initialValues={{\n                                        userName: userName ? userName : \"\",\n                                        phoneNumber: phoneNumber ? phoneNumber : \"\",\n                                        email: email ? email : \"\",\n                                        donationprice: donationprice ? donationprice : \"\",\n                                        status: editstatus ? editstatus : \"\",\n                                        message: message ? message :\"\"\n                                    }}\n                                    validationSchema={Yup.object().shape({\n                                        userName: Yup.string()\n                                            .required(\"User Name is required\")\n                                            .matches(TEXT_FIELD, \"only letter allowed.\"),\n                                        email: Yup.string()\n                                            .matches(EMAIL, \"Enter valid email.\")\n                                            .required(\"Email is required\"),\n                                        phoneNumber: Yup.string()\n                                            .required(\"Mobile Number is required\")\n                                            .matches(PHONEREG, \"Invalid mobile number!\"),\n                                        donationprice: Yup.string()\n                                            .required(\"Donation Price is required\")\n                                            .matches(PRICE_NUMBER, \"only number allowed.\"),\n                                    })}\n\n                                    onSubmit={values => {\n                                       // if (selected.value && selected1.value &&  selected2.value) {\n                                            onSubmit(values)\n                                       // }\n\n\n                                    }}\n                                >\n                                    {({ setFieldValue,\n                                        touched,\n                                        values, }) => (\n                                        <>\n                                            <Form key=\"oneForm\">\n                                                <Grid container spacing={2}>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Full Name\"\n                                                            type=\"text\"\n                                                            name=\"userName\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Phone Number\"\n                                                            type=\"text\"\n                                                            name=\"phoneNumber\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Email\"\n                                                            type=\"text\"\n                                                            name=\"email\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <Select\n                                                           \n                                                            value={{ label: countryname, value: countryid } ? { label: countryname, value: countryid } : selected}\n                                                            options={lables1}\n                                                            onChange={setSelected}\n                                                            selected={{ label: countryname, value: countryid }}\n                                                            placeholder=\"Select Country\"\n                                                            name=\"Country\"\n                                                            \n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <Select\n                                                            value={{ label: statename, value: stateid } ? { label: statename, value: stateid } : selected1}\n                                                            options={lables2}\n                                                            onChange={setSelected1}\n                                                            selected={{ label: statename, value: stateid }}\n                                                            placeholder=\"Select State\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <Select\n                                                            value={{ label: cityname, value: cityid } ? { label: cityname, value: cityid } : selected2}\n                                                            options={lables3}\n                                                            onChange={setSelected2}\n                                                            selected={{ label: cityname, value: cityid }}\n                                                            placeholder=\"Select City\"\n                                                            name=\"City\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Donation Rrice\"\n                                                            type=\"text\"\n                                                            name=\"donationprice\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <TextField\n                                                            label=\"Donation Message\"\n                                                            type=\"text\"\n                                                            name=\"message\"\n                                                        />\n                                                    </Grid>\n                                                    <Grid item xs={12} sm={6}>\n                                                        <RadioGroup\n                                                            name=\"status\"\n                                                            label=\"Status\"\n                                                            children={[\n                                                                { value: \"1\", label: \"Active \" },\n                                                                { value: \"0\", label: \"Inactive \" },\n                                                            ]}\n                                                            onChange={() => { }}\n                                                            id=\"statusId\"\n                                                        />\n                                                    </Grid>\n                                                </Grid>\n                                                <Button\n                                                    type=\"submit\"\n                                                    fullWidth\n                                                    variant=\"contained\"\n                                                    color=\"primary\"\n                                                    className={classes.submit}\n                                                    onClick={(event) => { selectcountry1(event); selectstate1(); selectcity1(); }}\n                                                >\n                                                    Edit\n                                                </Button>\n\n                                            </Form>\n                                        </>\n                                    )}\n                                </Formik>\n                            </Grid>\n                        </Grid>\n                    </CardContent>\n                </Card>\n            </Page>\n            <ToastContainer />\n\n        </>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\palette.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\shape.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\typography.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\shadows.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\Logo.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\Page.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\AuthLayout.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\SearchNotFound.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\Scrollbar.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\_mocks_\\blog.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\authentication\\AuthSocial.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\_mocks_\\products.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\Apiconstant\\Apiconstant.js",["820"],"import axios from 'axios';\n\n//API URL\nexport const API_URL = \"http://localhost:3000/api\";\n\n//IMG URL\nexport const IMG_URL = \"http://localhost:3000/images/\";\n\n//ADMIN LOGIN\nexport const ADMINLOGIN = \"public/login\";\n\n//ADMIN LOGOUT\nexport const ADMINLOGOUT =\"public/logout\";\n\n\n//DONATION API\nexport const ALLDONATION =\"public/getAllDonation\"\nexport const ADDDONATION =\"public/AddDonation\"\nexport const DONATIONDELETE =\"public/DonationDelete\"\nexport const EDITDONATION =\"public/EditDonation\"\nexport const SINGLEDONATION =\"public/getoneDonation\"\nexport const DONATIONDELETEALL =\"public/DonationDeleteAll\"\nexport const TODAYDONATIONAMOUNT =\"public/ \"\nexport const DONATIONLIMIT =\"public/AllDonationlimit\"\n\n//ALL COUNTRY CITY AND STATE API\nexport const ALLCONTRY =\"public/getAllContry\"\nexport const ALLSTATE =\"public/getAllState\"\nexport const ALLCITY =\"public/getAllCity\"\n\n\n//CONTACT DETAILS API\nexport const ADDCONTACTDETAILS =\"public/AddContactDetilas\"\nexport const ALLCONTACTDETAILS =\"public/getContactdetails\"\nexport const EDITCONTACTDETAILS =\"public/EditContactdetails\"\n\n\n//CONTACT INQUIRY API\nexport const ALLCONTACTINQUIRY =\"public/getContactinquiries\"\nexport const DELETECONTACTINQUIRY =\"public/DeleteContactinquiries\"\nexport const ALLDELETECONTACTINQUIRY =\"public/DeleteContactinquiriesAll\"\n\n\n//FRONTEND SETTING API\nexport const GETFRONTSETTING =\"public/getFrontsettings\"\nexport const ADDFRONTSETTING =\"public/AddFrontsettings\"\nexport const EDITFRONTSETTING =\"public/EditFrontsettings\"\n\n//PHOTO GALLERY API\nexport const ADD_IMAGE = \"addimage\";\nexport const ADDGALLRYIMAGE = \"public/AddGalleryimage\"\nexport const GETGALLRYIMAGE = \"public/GetGalleryimage\"\nexport const DELETEGALLRYIMAGE = \"public/DeleteGalleryimage\"\nexport const DELETEALLGALLRYIMAGE = \"public/DeleteGalleryimageAll\"\n\n//Press releases API\n\nexport const ALLPRESSRELEASES =\"public/getPressreleases\"\nexport const ADDPRESSRELEASES =\"public/AddPressreleases\"\nexport const PRESSRELEASESDELETE =\"public/PressreleasesDelete\"\nexport const EDITPRESSRELEASES =\"public/EditPressreleases\"\nexport const SINGLEPRESSRELEASES =\"public/getonePressreleases\"\nexport const PRESSRELEASESDELETEALL =\"public/PressreleasesDeleteAll\"\n\nexport const GETANNUALREPORT =\"public/GetAnnualreports\"\nexport const DELETEANNUALREPORT =\"public/DeleteAnnualreports\"\nexport const DELETEALLANNUALREPORT =\"public/DeleteAnnualreportsAll\"\nexport const ADDANNUALREPORT =\"public/AddAnnualreports\"\n\n\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Annualreport\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\Validation\\index.js",["821","822"],"export const PHONEREG = /^[0-9\\b]+$/;\nexport const PASSWORD_REG = /^(?=.*[A-Z])(?=.*[@$!%*#?&])(?=.*[0-9])(?=.*[a-z]).{8,}/;\nexport const POSTCODE_REG = /^.[a-zA-Z0-9]+$/;\nexport const EMAIL = /\\S+@\\S+\\.\\S+/;\nexport const TEXT_FIELD = /^[a-z][a-z\\s]*$/i;\nexport const IMAGE = /\\.(png)$/;\nexport const PRICE_NUMBER = /^([+-]?([0-9]*[.])?[0-9]+)$/;\nexport const URL =/[-a-zA-Z0-9@:%._\\+~#=]{1,256}\\.[a-zA-Z0-9()]{1,6}\\b([-a-zA-Z0-9()@:%_\\+.~#?&//=]*)?/gi","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\DashboardSidebar.js",["823","824","825","826","827","828","829","830","831"],"import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { Link as RouterLink, useLocation } from 'react-router-dom';\n// material\nimport { styled } from '@mui/material/styles';\nimport { Box, Link, Button, Drawer, Typography, Avatar, Stack } from '@mui/material';\n// components\nimport Logo from '../../components/Logo';\nimport Scrollbar from '../../components/Scrollbar';\nimport NavSection from '../../components/NavSection';\nimport { MHidden } from '../../components/@material-extend';\n//\nimport sidebarConfig from './SidebarConfig';\nimport account from '../../_mocks_/account';\nimport { makeStyles } from \"@material-ui/styles\";\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 280;\n\nconst RootStyle = styled('div')(({ theme }) => ({\n  [theme.breakpoints.up('lg')]: {\n    flexShrink: 0,\n    width: DRAWER_WIDTH\n  }\n}));\n\nconst AccountStyle = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  padding: theme.spacing(2, 2.5),\n  borderRadius: theme.shape.borderRadiusSm,\n  backgroundColor: theme.palette.grey[200]\n}));\n\n// ----------------------------------------------------------------------\n\nDashboardSidebar.propTypes = {\n  isOpenSidebar: PropTypes.bool,\n  onCloseSidebar: PropTypes.func\n};\nconst useStyles = makeStyles(theme => ({\n \n  img: {\n    width: \"123px!important\",\n    height: \"100px!important\",\n    marginLeft: \"33px!important\",\n    marginTop: \"-22px\"\n  },\n  img1: {\n    marginTop: \"-50px!important\",\n  },\n}))\n\nexport default function DashboardSidebar({ isOpenSidebar, onCloseSidebar }) {\n  const classes = useStyles();\n\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    if (isOpenSidebar) {\n      onCloseSidebar();\n    }\n  }, [pathname]);\n\n  const renderContent = (\n    <Scrollbar\n      sx={{\n        height: '100%',\n        '& .simplebar-content': { height: '100%', display: 'flex', flexDirection: 'column' }\n      }}\n    >\n      <Box sx={{ px: 2.5, py: 3 }}>\n        <Box component={RouterLink} to=\"/dashboard/user\" sx={{ display: 'inline-flex' }}>\n        <img  className={classes.img} src=\"/static/logo.svg\"/>\n        </Box>\n      </Box>\n      <Box sx={{ mb: 5, mx: 2.5 }}>\n        <Link underline=\"none\" component={RouterLink} to=\"#\">\n\n        </Link>\n      </Box>\n      <NavSection navConfig={sidebarConfig} className={classes.img1}/>\n    </Scrollbar>\n  );\n\n  return (\n    <RootStyle>\n      <MHidden width=\"lgUp\">\n        <Drawer\n          open={isOpenSidebar}\n          onClose={onCloseSidebar}\n          PaperProps={{\n            sx: { width: DRAWER_WIDTH }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n\n      <MHidden width=\"lgDown\">\n        <Drawer\n          open\n          variant=\"persistent\"\n          PaperProps={{\n            sx: {\n              width: DRAWER_WIDTH,\n              bgcolor: 'background.default'\n            }\n          }}\n        >\n          {renderContent}\n        </Drawer>\n      </MHidden>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\DashboardNavbar.js",["832","833","834"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport menu2Fill from '@iconify/icons-eva/menu-2-fill';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Box, Stack, AppBar, Toolbar, IconButton, Typography } from '@mui/material';\n// components\nimport { MHidden } from '../../components/@material-extend';\n//\nimport Searchbar from './Searchbar';\nimport AccountPopover from './AccountPopover';\nimport LanguagePopover from './LanguagePopover';\nimport NotificationsPopover from './NotificationsPopover';\n\n// ----------------------------------------------------------------------\n\nconst DRAWER_WIDTH = 280;\nconst APPBAR_MOBILE = 64;\nconst APPBAR_DESKTOP = 92;\n\nconst RootStyle = styled(AppBar)(({ theme }) => ({\n  boxShadow: 'none',\n  backdropFilter: 'blur(6px)',\n  WebkitBackdropFilter: 'blur(6px)', // Fix on Mobile\n  backgroundColor: alpha(theme.palette.background.default, 0.72),\n  [theme.breakpoints.up('lg')]: {\n    width: `calc(100% - ${DRAWER_WIDTH + 1}px)`\n  }\n}));\n\nconst ToolbarStyle = styled(Toolbar)(({ theme }) => ({\n  minHeight: APPBAR_MOBILE,\n  [theme.breakpoints.up('lg')]: {\n    minHeight: APPBAR_DESKTOP,\n    padding: theme.spacing(0, 5)\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nDashboardNavbar.propTypes = {\n  onOpenSidebar: PropTypes.func\n};\n\nexport default function DashboardNavbar({ onOpenSidebar }) {\n  return (\n    <RootStyle>\n      <ToolbarStyle>\n        <MHidden width=\"lgUp\">\n          <IconButton onClick={onOpenSidebar} sx={{ mr: 1, color: 'text.primary' }}>\n            <Icon icon={menu2Fill} />\n          </IconButton>\n        </MHidden>\n        <Box sx={{ flexGrow: 1 }} >\n          <Typography gutterBottom align=\"center\" variant=\"subtitle1\" style={{ color: \"seagreen\", position: \"relative\", float: \"left\", fontSize: \"27px\", top: \"3px\", left:\"-25px\" }}>\n          Pragati Manav Seva Sansthan (PMSS) Raghogarh\n          </Typography>\n        </Box>\n\n        <Stack direction=\"row\" alignItems=\"center\" spacing={{ xs: 0.5, sm: 1.5 }}>\n          <AccountPopover />\n        </Stack>\n      </ToolbarStyle>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\@material-extend\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\authentication\\login\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\authentication\\register\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\blog\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Loader\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\utils\\mockImages.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Annualreport\\UserMoreMenu.js",["835","836","837"],"import { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\nimport axios from 'axios'\nimport { API_URL, DELETEANNUALREPORT } from \"../../../../Apiconstant/Apiconstant\"\n// ----------------------------------------------------------------------\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Loader from \"../../../../commocomponent/Loader\"\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nexport default function UserMoreMenu({ id }) {\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const success = () => { }\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const deleteDonaton = (id) => {\n    setLoading(true)\n    const durl = `${API_URL}/${DELETEANNUALREPORT}`;\n    axios.post(durl, {\n      id: id,\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          success(toast.success(response.data.message))\n          navigate('/dashboard/annual-reports', { state: {status:'done'} });\n        }\n        setLoading(false)\n      })\n  };\n  return (\n    <>\n      {loading && (\n        <Loader />\n      )}\n\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} onClick={() => deleteDonaton(id)} />\n          <ToastContainer />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Annualreport\\UserListToolbar.js",["838","839","840","841"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  Toolbar,\n  Tooltip,\n  IconButton,\n  Typography,\n  OutlinedInput,\n  InputAdornment\n} from '@mui/material';\nimport axios from 'axios'\nimport { API_URL, DELETEALLANNUALREPORT } from \"../../../../Apiconstant/Apiconstant\"\n// ----------------------------------------------------------------------\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nUserListToolbar.propTypes = {\n  numSelected: PropTypes.number,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func\n};\n\nexport default function UserListToolbar({ numSelected, filterName, onFilterName ,selected}) {\n  const navigate = useNavigate();\n  const deleteDonation = () => {\n    const success = () => { }\n    const durl = `${API_URL}/${DELETEALLANNUALREPORT}`;\n    axios.post(durl, {\n      noOfUser:selected\n    }, {\n      headers: {\n          'x-token': localStorage.getItem('id_token'),\n      }\n  })\n      .then((response) => {\n\n        if (response.status === 200) {\n          success(toast.success(response.data.message))\n          navigate('/dashboard/annual-reports', { state: {status:'done'} });\n        }\n      \n\n      })\n  };\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: 'primary.main',\n          bgcolor: 'primary.lighter'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={filterName}\n          onChange={onFilterName}\n          placeholder=\"Search user...\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n\n            <Icon icon={trash2Fill} onClick={() => deleteDonation()} />\n          </IconButton>\n\n\n        </Tooltip>\n      ) : (\n        <>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Annualreport\\UserListHead.js",["842","843","844","845"],"import PropTypes from 'prop-types';\n// material\nimport { visuallyHidden } from '@mui/utils';\nimport { Box, Checkbox, TableRow, TableCell, TableHead, TableSortLabel } from '@mui/material';\n\n// ----------------------------------------------------------------------\n\nUserListHead.propTypes = {\n  order: PropTypes.oneOf(['asc', 'desc']),\n  orderBy: PropTypes.string,\n  rowCount: PropTypes.number,\n  headLabel: PropTypes.array,\n  numSelected: PropTypes.number,\n  onRequestSort: PropTypes.func,\n  onSelectAllClick: PropTypes.func\n};\n\nexport default function UserListHead({\n  order,\n  orderBy,\n  rowCount,\n  headLabel,\n  numSelected,\n  onRequestSort,\n  onSelectAllClick\n}) {\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n          />\n        </TableCell>\n        {headLabel.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.alignRight ? 'right' : 'left'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            {headCell.label}\n             \n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Autocomplete.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\IconButton.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Typography.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\_mocks_\\account.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\NotificationsPopover.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\MotionContainer.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\authentication\\register\\RegisterForm.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\blog\\BlogPostsSort.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\blog\\BlogPostCard.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\blog\\BlogPostsSearch.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\TotalDonationAmount.js",["846"],"import React, { useState, useEffect } from \"react\";\n\nimport { Icon } from '@iconify/react';\nimport appleFilled from '@iconify/icons-ant-design/apple-filled';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Card, Typography } from '@mui/material';\n// utils\nimport { fShortenNumber } from '../../../utils/formatNumber';\nimport { API_URL, ALLDONATION } from \"../../../Apiconstant/Apiconstant\"\nimport axios from 'axios'\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  textAlign: 'center',\n  padding: theme.spacing(5, 0),\n  color: theme.palette.info.darker,\n  backgroundColor: theme.palette.info.lighter\n}));\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n  margin: 'auto',\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  width: theme.spacing(8),\n  height: theme.spacing(8),\n  justifyContent: 'center',\n  marginBottom: theme.spacing(3),\n  color: theme.palette.info.dark,\n  backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.info.dark, 0)} 0%, ${alpha(\n    theme.palette.info.dark,\n    0.24\n  )} 100%)`\n}));\n\n// ----------------------------------------------------------------------\n\nconst TOTAL = 1352831;\n\nexport default function TotalDonationAmount() {\n  const [Donationsum, setDonationsum] = useState(0)\n  useEffect(() => {\n    const userurl = `${API_URL}/${ALLDONATION}`;\n    axios.get(userurl, {\n      headers: {\n        'x-token': localStorage.getItem('id_token'),\n      }\n    }).then(response => response.data)\n      .then((data) => {\n        var DonationSum = 0\n        for (let i = 0; i < data.data.donation.length; i++) {\n          DonationSum += data.data.donation[i].donationprice\n        }\n        setDonationsum(DonationSum);\n      })\n  }, []);\n  \n  return (\n    <RootStyle>\n      <IconWrapperStyle>\n        <Icon icon={appleFilled} width={24} height={24} />\n      </IconWrapperStyle>\n      <Typography variant=\"h3\">{fShortenNumber(Donationsum)}</Typography>\n      <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n        Total Donation Amount\n      </Typography>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\TotalDonationUserToday.js",["847","848","849"],"import React, { useState, useEffect } from \"react\";\n\nimport { Icon } from '@iconify/react';\nimport windowsFilled from '@iconify/icons-ant-design/windows-filled';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Card, Typography } from '@mui/material';\n// utils\nimport { fShortenNumber } from '../../../utils/formatNumber';\nimport { API_URL, TODAYDONATIONAMOUNT } from \"../../../Apiconstant/Apiconstant\"\nimport axios from 'axios'\n// ----------------------------------------------------------------------\nimport moment from 'moment';\nimport Moment from 'moment';\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  textAlign: 'center',\n  padding: theme.spacing(5, 0),\n  color: theme.palette.warning.darker,\n  backgroundColor: theme.palette.warning.lighter\n}));\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n  margin: 'auto',\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  width: theme.spacing(8),\n  height: theme.spacing(8),\n  justifyContent: 'center',\n  marginBottom: theme.spacing(3),\n  color: theme.palette.warning.dark,\n  backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.warning.dark, 0)} 0%, ${alpha(\n    theme.palette.warning.dark,\n    0.24\n  )} 100%)`\n}));\n\n// ----------------------------------------------------------------------\n\nconst TOTAL = 1723315;\n\nexport default function TotalDonationUserToday() {\n    const [Lotterycount, setLotterycount] = useState('')\n  useEffect(() => {\n    const userurl = `${API_URL}/${TODAYDONATIONAMOUNT}`;\n    axios.get(userurl, {\n      headers: {\n        'x-token': localStorage.getItem('id_token'),\n      }\n    }).then(response => response.data)\n      .then((data) => {\n        setLotterycount(data.data.donation.length);\n      })\n  }, []);\n  return (\n    <RootStyle>\n      <IconWrapperStyle>\n        <Icon icon={windowsFilled} width={24} height={24} />\n      </IconWrapperStyle>\n      <Typography variant=\"h3\">{fShortenNumber(Lotterycount)}</Typography>\n      <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n        No. Of Today Donation\n      </Typography>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Loader\\Loader.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\TotalDonation.js",["850","851","852","853","854"],"import { filter } from 'lodash';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { API_URL, DONATIONLIMIT } from \"../../../Apiconstant/Apiconstant\"\n// material\nimport {\n    Card,\n    Table,\n    Stack,\n    Button,\n    Checkbox,\n    TableRow,\n    TableBody,\n    TableCell,\n    Container,\n    Typography,\n    TableContainer,\n    TablePagination\n} from '@mui/material';\n// components\nimport Page from '../../../components/Page';\nimport Scrollbar from '../../../components/Scrollbar';\nimport SearchNotFound from '../../../components/SearchNotFound';\nimport { UserListHead, UserListToolbar, UserMoreMenu } from '../../../components/_dashboard/user';\nimport plusFill from '@iconify/icons-eva/plus-fill';\nimport { Icon } from '@iconify/react';\nimport { Link as RouterLink } from 'react-router-dom';\n\n// ----------------------------------------------------------------------\nimport { makeStyles } from \"@material-ui/styles\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst TABLE_HEAD = [\n    { id: 'id', label: 'ID', alignRight: false },\n    { id: 'userName', label: 'User Name', alignRight: false },\n    { id: 'phoneNumber', label: 'Phone Number', alignRight: false },\n    { id: 'email', label: 'Email', alignRight: false },\n    { id: 'country', label: 'Country', alignRight: false },\n    { id: 'state', label: 'State', alignRight: false },\n    { id: 'city', label: 'City', alignRight: false },\n    { id: 'donationprice', label: 'Donation Price', alignRight: false },\n\n    { id: '' }\n];\n\n// ----------------------------------------------------------------------\n\nfunction descendingComparator(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction getComparator(order, orderBy) {\n    return order === 'asc'\n        ? (a, b) => descendingComparator(a, b, orderBy)\n        : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction applySortFilter(array, comparator, query) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = comparator(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    if (query) {\n        return filter(array, (_user) => _user.userName.toString().toLowerCase().indexOf(query.toLowerCase()) !== -1);\n    }\n    return stabilizedThis.map((el) => el[0]);\n}\nconst useStyles = makeStyles(theme => ({\n    tableOverflow: {\n        overflow: 'auto'\n    },\n    button: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n    modal: {\n        color: \"#000\",\n        float: \"right\",\n        width: \"110px\",\n        height: \"47px\",\n        fontWeight: \"bold\",\n        backgroundColor: \"rgba(0, 171, 85, 0.08)\",\n        right: \"65px\"\n    },\n}))\nexport default function TotalDonation() {\n    const classes = useStyles();\n\n    const [page, setPage] = useState(0);\n    const [order, setOrder] = useState('asc');\n    const [selected, setSelected] = useState([]);\n    const [orderBy, setOrderBy] = useState('id');\n    const [filterName, setFilterName] = useState('');\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n    const [userRequest, setUserRequest] = useState([]);\n    useEffect(() => {\n        const url = `${API_URL}/${DONATIONLIMIT}`;\n\n        axios.get(url, {\n            headers: {\n                'x-token': localStorage.getItem('id_token'),\n            }\n        }).then(response => response.data)\n            .then((data) => {\n                setUserRequest(data.data.donation);\n            })\n\n    }, []);\n    const handleRequestSort = (event, property) => {\n        const isAsc = orderBy === property && order === 'asc';\n        setOrder(isAsc ? 'desc' : 'asc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = (event) => {\n        if (event.target.checked) {\n            const newSelecteds = userRequest.map((n) => n.id);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1)\n            );\n        }\n        setSelected(newSelected);\n\n    };\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleFilterByName = (event) => {\n        setFilterName(event.target.value);\n    };\n\n    const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - userRequest.length) : 0;\n\n    const filteredUsers = applySortFilter(userRequest, getComparator(order, orderBy), filterName);\n    const isUserNotFound = filteredUsers.length === 0;\n    return (\n        <Page title=\"Pragati Manav Seva Sansthan (PMSS) Raghogarh\">\n            <ToastContainer />\n            <Container>\n                <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" mb={5}>\n                    <Typography variant=\"h4\" gutterBottom>\n                        Latest Donation\n                    </Typography>\n                    <Button\n                        variant=\"contained\"\n                        component={RouterLink}\n                        to=\"/dashboard/donation\"\n                    >\n                       View All\n                    </Button>\n                </Stack>\n\n                <Card>\n                    <UserListToolbar\n                        numSelected={selected.length}\n                        filterName={filterName}\n                        onFilterName={handleFilterByName}\n                        selected={selected}\n                    />\n\n                    <Scrollbar>\n                        <TableContainer sx={{ minWidth: 800 }}>\n                            <Table>\n                                <UserListHead\n                                    order={order}\n                                    orderBy={orderBy}\n                                    headLabel={TABLE_HEAD}\n                                    rowCount={userRequest.length}\n                                    numSelected={selected.length}\n                                    onRequestSort={handleRequestSort}\n                                    onSelectAllClick={handleSelectAllClick}\n                                />\n                                <TableBody>\n                                    {filteredUsers\n                                        .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                        .map((row) => {\n                                            const { id, userName, phoneNumber, email, countryname, statename, cityname, donationprice } = row;\n                                            const isItemSelected = selected.indexOf(id) !== -1;\n\n                                            return (\n                                                <TableRow\n                                                    hover\n                                                    key={id}\n                                                    tabIndex={-1}\n                                                    role=\"checkbox\"\n                                                    selected={isItemSelected}\n                                                    aria-checked={isItemSelected}\n                                                >\n                                                    <TableCell padding=\"checkbox\">\n                                                        <Checkbox\n                                                            checked={isItemSelected}\n                                                            onChange={(event) => handleClick(event, id)}\n                                                        />\n                                                    </TableCell>\n                                                    <TableCell align=\"left\">{id}</TableCell>\n                                                    <TableCell align=\"left\">{userName}</TableCell>\n                                                    <TableCell align=\"left\">{phoneNumber}</TableCell>\n                                                    <TableCell align=\"left\">{email}</TableCell>\n                                                    <TableCell align=\"left\">{countryname} </TableCell>\n                                                    <TableCell align=\"left\">{statename} </TableCell>\n                                                    <TableCell align=\"left\">{cityname} </TableCell>\n                                                    <TableCell align=\"left\">{donationprice} </TableCell>\n                                                </TableRow>\n                                            );\n                                        })}\n                                    {emptyRows > 0 && (\n                                        <TableRow style={{ height: 53 * emptyRows }}>\n                                            <TableCell colSpan={6} />\n                                        </TableRow>\n                                    )}\n                                </TableBody>\n                                {isUserNotFound && (\n                                    <TableBody>\n                                        <TableRow>\n                                            <TableCell align=\"center\" colSpan={6} sx={{ py: 3 }}>\n                                                <SearchNotFound searchQuery={filterName} />\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableBody>\n                                )}\n                            </Table>\n                        </TableContainer>\n                    </Scrollbar>\n\n                    <TablePagination\n                        rowsPerPageOptions={[5, 10, 25]}\n                        component=\"div\"\n                        count={userRequest.length}\n                        rowsPerPage={rowsPerPage}\n                        page={page}\n                        onPageChange={handleChangePage}\n                        onRowsPerPageChange={handleChangeRowsPerPage}\n                    />\n                </Card>\n            </Container>\n        </Page>\n    );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\Select\\Select.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\CheckBox\\CheckBox.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\variants\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\MenuPopover.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\UploadFile\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\SvgIconStyle.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\utils\\formatNumber.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Loader\\Loader.style.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\RadioGroup\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\TextField\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\CheckBox\\Checkbox.style.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\Select\\Select.style.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\ErrorMessage\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\variants\\Wrap.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\UploadFile\\UploadFile.js",["855"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field, useField } from \"formik\";\n\nimport { UploadFileWrapperStyled } from \"./UploadFile.style\";\nimport { ErrorMessage } from \"../../ErrorMessage\";\nimport ArrowRight from \"../../Icons/ArrowRight\";\n\nexport const UploadFile = ({\n  name,\n  handleChange,\n  setFieldValue,\n  variant,\n  buttonText,\n  buttonColor,\n  buttonFullWidth,\n  disabled\n}) => {\n  const [field, meta] = useField(name);\n  const { error, touched } = meta;\n  const button =\n    variant === \"button\" ? (\n      <span className=\"button\">\n        {buttonText}\n        <ArrowRight />\n      </span>\n    ) : (\n      <ArrowRight />\n    );\n\n  const labelClass = variant === \"button\" ? \"label-button\" : \"label-icon\";\n\n  return (\n    <UploadFileWrapperStyled\n      className=\"upload-file\"\n      fullWidth={buttonFullWidth}\n      color={buttonColor}\n      variant=\"button\"\n    >\n      <Field\n        id={name}\n        type=\"file\"\n        name={name}\n        onChange={e => {\n          handleChange(e.currentTarget.files[0]);\n          setFieldValue(name, e.target.value);\n        }}\n        disabled={disabled}\n      />\n      <label htmlFor={name} className={labelClass}>\n        {button}\n      </label>\n      <ErrorMessage error={error} touched={touched} />\n    </UploadFileWrapperStyled>\n  );\n};\nUploadFile.propTypes = {\n  name: PropTypes.string.isRequired,\n  handleChange: PropTypes.func,\n  setFieldValue: PropTypes.func,\n  variant: PropTypes.oneOf([\"button\", \"icon\"]),\n  buttonText: PropTypes.string,\n  fullWidth: PropTypes.bool,\n  buttonFullWidth: PropTypes.bool,\n  buttonColor: PropTypes.string\n};\n\nUploadFile.defaultProps = {\n  buttonText: \"Upload\",\n  buttonColor: \"primary\"\n};\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\HelpText\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\FormFields.style.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\ErrorMessage\\ErrorMessage.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\styles\\settings.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\variants\\bounce\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\UserMoreMenu.js",["856"],"import { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport { Link as RouterLink } from 'react-router-dom';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\nimport axios from 'axios'\nimport { API_URL, DONATIONDELETE } from \"../../../Apiconstant/Apiconstant\"\n// ----------------------------------------------------------------------\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nexport default function UserMoreMenu({ id }) {\n  const success = () => { }\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const deleteDonaton = (id) => {\n\n    const durl = `${API_URL}/${DONATIONDELETE}`;\n    axios.post(durl, {\n      id: id,\n    })\n      .then((response) => {\n\n        if (response.status === 200) {\n          success(toast.success(response.data.message))\n        }\n      })\n  };\n  return (\n    <>\n    \n\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n       <MenuItem sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} onClick={() => deleteDonaton(id)} />\n          <ToastContainer />\n        </MenuItem>\n\n        <MenuItem component={RouterLink} to={`donation/edit/${id}`} sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\UserListToolbar.js",["857","858","859","860"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  Toolbar,\n  Tooltip,\n  IconButton,\n  Typography,\n  OutlinedInput,\n  InputAdornment\n} from '@mui/material';\nimport axios from 'axios'\nimport { API_URL, DONATIONDELETEALL } from \"../../../Apiconstant/Apiconstant\"\n// ----------------------------------------------------------------------\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nUserListToolbar.propTypes = {\n  numSelected: PropTypes.number,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func\n};\n\nexport default function UserListToolbar({ numSelected, filterName, onFilterName, selected }) {\n  const navigate = useNavigate();\n  const deleteDonation = () => {\n    const success = () => { }\n    const durl = `${API_URL}/${DONATIONDELETEALL}`;\n    axios.post(durl, {\n      noOfUser: selected\n    }, {\n      headers: {\n        'x-token': localStorage.getItem('id_token'),\n      }\n    })\n      .then((response) => {\n\n        if (response.status === 200) {\n          success(toast.success(response.data.message))\n        }\n        navigate('/dashboard/donation', { replace: true });\n\n      })\n  };\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: 'primary.main',\n          bgcolor: 'primary.lighter'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={filterName}\n          onChange={onFilterName}\n          placeholder=\"Search user...\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n\n            <Icon icon={trash2Fill} onClick={() => deleteDonation()} />\n          </IconButton>\n\n\n        </Tooltip>\n      ) : (\n        <>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Icons\\ArrowRight.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\HelpText\\HelpText.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\UploadFile\\UploadFile.style.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\ErrorMessage\\ErrorMessage.style.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\variants\\bounce\\BounceOut.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\animate\\variants\\bounce\\BounceIn.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\HelpText\\HelpText.style.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\UserListHead.js",["861","862","863","864"],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\TextField\\TextField.js",["865"],"import React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field, useField } from \"formik\";\nimport { TextWrapperStyled } from \"./TextField.style\";\nimport { ErrorMessage } from \"../../ErrorMessage/index\";\nimport HelpText from \"../../HelpText/index\";\n\nexport const TextField = ({\n  label,\n  type,\n  name,\n  placeholder,\n  disabled,\n  showPasswordToggleButton,\n  togglePasswordVisibility,\n  helpText,\n  optional,\n  className,\n  step,\n  handleChange\n}) => {\n  const [field, meta, helpers] = useField(name);\n  const { onBlur } = field;\n  const { value, error, touched } = meta;\n  const { setValue } = helpers;\n  let [active, setActive] = useState(\"inactive\");\n  let [labelWidth, setLabelWidth] = useState(\"inactive\");\n  let [showEyeIcon, setShowEyeIcon] = useState(true);\n\n  const ref = useRef(null);\n\n  function handleLabelWidth() {\n    setLabelWidth(ref.current.offsetWidth + 6);\n  }\n\n  function handleBlur(e) {\n    const value = e.target.value;\n    let active = value ? \"active\" : \"inactive\";\n    value ? handleLabelWidth() : setLabelWidth(0);\n    setActive(active);\n    onBlur(e);\n  }\n\n  function handleFocus() {\n    handleLabelWidth();\n    setActive(\"active\");\n  }\n\n  function handleTogglePassword() {\n    setShowEyeIcon(showEyeIcon => !showEyeIcon);\n    togglePasswordVisibility();\n  }\n\n  function onChange(e) {\n    setValue(e.target.value, false);\n    if (handleChange) {\n      handleChange(e);\n    }\n  }\n\n  useEffect(() => {\n    if (value) {\n      let active = value ? \"active\" : \"inactive\";\n      handleLabelWidth();\n      setActive(active);\n    }\n  }, [active, name, value]);\n\n  return (\n    <TextWrapperStyled\n      className={`${error && touched && \"has-error\"} ${active} ${className}`}\n    >\n      <div className=\"field-wrapper\">\n        <Field\n          type={type}\n          step={step}\n          name={name}\n          id={name}\n          placeholder={placeholder}\n          disabled={disabled}\n          onBlur={e => {\n            handleBlur(e);\n          }}\n          onFocus={e => {\n            handleFocus(e.currentTarget.value);\n          }}\n          onChange={e => onChange(e)}\n        />\n        <label ref={ref} htmlFor={name}>\n          {label}\n          {optional && ` (optional)`}\n        </label>\n        {showPasswordToggleButton && (\n          <button\n            type=\"button\"\n            className=\"show-password\"\n            onClick={handleTogglePassword}\n          >\n           \n          </button>\n        )}\n        <fieldset aria-hidden=\"true\">\n          <legend style={{ width: labelWidth }}>\n            <span>​</span>\n          </legend>\n        </fieldset>\n      </div>\n      <ErrorMessage error={error} touched={touched} />\n      {helpText && (!error || !touched) && <HelpText text={helpText} />}\n    </TextWrapperStyled>\n  );\n};\nTextField.propTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  togglePasswordVisibility: PropTypes.func,\n  showPasswordToggleButton: PropTypes.bool,\n  helpText: PropTypes.string,\n  optional: PropTypes.bool,\n  className: PropTypes.string,\n  step: PropTypes.string,\n  handleChange: PropTypes.func\n};\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\RadioGroup\\RadioGroup.js",["866"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Field, useField } from \"formik\";\nimport { RadioGroupWrapperStyled } from \"./RadioGroup.style\";\nimport { ErrorMessage } from \"../../ErrorMessage\";\nimport { Label } from \"../../Label\";\n\nexport const RadioGroup = ({ label, name, children, handleChange, id}) => {\n  const [ filed, meta, helpers] = useField(name);\n  const { setValue } = helpers;\n  const onChange = async option => {\n    setValue(option.target.value, false);\n    if (handleChange) {\n      handleChange(option.target.value);\n    }\n  };\n\n  return (\n    <RadioGroupWrapperStyled>\n      <fieldset>\n        <legend>{label}</legend>\n        {children.map((option, i) => (\n          <div key={option.value}>\n            <Field\n              name={name}\n              component=\"input\"\n              type=\"radio\"\n              id={id ? `${id}-${i}` : `${name}-${i}`}\n              value={option.value}\n              onChange={option => onChange(option)}\n            />\n            <Label\n              name={id ? `${id}-${i}` : `${name}-${i}`}\n              label={option.label}\n            />\n          </div>\n        ))}\n        <ErrorMessage error={meta.error} touched={meta.touched} />\n      </fieldset>\n    </RadioGroupWrapperStyled>\n  );\n};\nRadioGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string,\n  children: PropTypes.array.isRequired,\n  handleChange: PropTypes.func\n};\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\TextField\\TextField.style.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\FormFields\\RadioGroup\\RadioGroup.style.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Label\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Label\\Label.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\utils\\formatTime.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\commocomponent\\Label\\Label.style.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\TotalDonationUser.js",["867","868","869"],"import React, { useState, useEffect } from \"react\";\n\nimport { Icon } from '@iconify/react';\nimport androidFilled from '@iconify/icons-ant-design/android-filled';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Card, Typography } from '@mui/material';\n// utils\nimport { fShortenNumber } from '../../../utils/formatNumber';\nimport { API_URL, ALLDONATION } from \"../../../Apiconstant/Apiconstant\"\nimport axios from 'axios'\n// ----------------------------------------------------------------------\n\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  textAlign: 'center',\n  padding: theme.spacing(5, 0),\n  color: theme.palette.primary.darker,\n  backgroundColor: theme.palette.primary.lighter\n}));\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n  margin: 'auto',\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  width: theme.spacing(8),\n  height: theme.spacing(8),\n  justifyContent: 'center',\n  marginBottom: theme.spacing(3),\n  color: theme.palette.primary.dark,\n  backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.primary.dark, 0)} 0%, ${alpha(\n    theme.palette.primary.dark,\n    0.24\n  )} 100%)`\n}));\n\n// ----------------------------------------------------------------------\n\nconst TOTAL = 714000;\n\nexport default function TotalDonationUser() {\n  const [loading, setLoading] = useState(false);\n  const [Lotterycount, setLotterycount] = useState('')\n  useEffect(() => {\n    const lotteryurl = `${API_URL}/${ALLDONATION}`;\n    axios.get(lotteryurl, {\n      headers: {\n        'x-token': localStorage.getItem('id_token'),\n      }\n    }).then(response => response.data)\n      .then((data) => {\n        setLotterycount(data.data.donation.length);\n      })\n  }, []);\n  return (\n    <>\n\n      <RootStyle>\n        <IconWrapperStyle>\n          <Icon icon={androidFilled} width={24} height={24} />\n        </IconWrapperStyle>\n        <Typography variant=\"h3\">{fShortenNumber(Lotterycount)}</Typography>\n        <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n          No. Of Total Donation\n        </Typography>\n      </RootStyle>\n    </>\n\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppWebsiteVisits.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppTrafficBySite.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\charts\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppNewsUpdate.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppTasks.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppOrderTimeline.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\TotalDonationToday.js",["870","871","872"],"import React, { useState, useEffect } from \"react\";\n\nimport { Icon } from '@iconify/react';\nimport windowsFilled from '@iconify/icons-ant-design/windows-filled';\n// material\nimport { alpha, styled } from '@mui/material/styles';\nimport { Card, Typography } from '@mui/material';\n// utils\nimport { fShortenNumber } from '../../../utils/formatNumber';\nimport { API_URL, TODAYDONATIONAMOUNT } from \"../../../Apiconstant/Apiconstant\"\nimport axios from 'axios'\n// ----------------------------------------------------------------------\nimport moment from 'moment';\nimport Moment from 'moment';\nconst RootStyle = styled(Card)(({ theme }) => ({\n  boxShadow: 'none',\n  textAlign: 'center',\n  padding: theme.spacing(5, 0),\n  color: theme.palette.warning.darker,\n  backgroundColor: theme.palette.warning.lighter\n}));\n\nconst IconWrapperStyle = styled('div')(({ theme }) => ({\n  margin: 'auto',\n  display: 'flex',\n  borderRadius: '50%',\n  alignItems: 'center',\n  width: theme.spacing(8),\n  height: theme.spacing(8),\n  justifyContent: 'center',\n  marginBottom: theme.spacing(3),\n  color: theme.palette.warning.dark,\n  backgroundImage: `linear-gradient(135deg, ${alpha(theme.palette.warning.dark, 0)} 0%, ${alpha(\n    theme.palette.warning.dark,\n    0.24\n  )} 100%)`\n}));\n\n// ----------------------------------------------------------------------\n\nconst TOTAL = 1723315;\n\nexport default function TotalDonationToday() {\n  const [Donationsum, setDonationsum] = useState(0)\n  useEffect(() => {\n    const userurl = `${API_URL}/${TODAYDONATIONAMOUNT}`;\n    axios.get(userurl, {\n      headers: {\n        'x-token': localStorage.getItem('id_token'),\n      }\n    }).then(response => response.data)\n      .then((data) => {\n        var DonationSum = 0\n        for (let i = 0; i < data.data.donation.length; i++) {\n          DonationSum += data.data.donation[i].donationprice\n        setDonationsum(DonationSum);\n        }\n      })\n  }, []);\n  return (\n    <RootStyle>\n      <IconWrapperStyle>\n        <Icon icon={windowsFilled} width={24} height={24} />\n      </IconWrapperStyle>\n      <Typography variant=\"h3\">{fShortenNumber(Donationsum)}</Typography>\n      <Typography variant=\"subtitle2\" sx={{ opacity: 0.72 }}>\n        Total Donation Today\n      </Typography>\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppCurrentVisits.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppConversionRates.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\app\\AppCurrentSubject.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\ProductSort.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\ProductList.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\ProductFilterSidebar.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\ProductCartWidget.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\products\\ProductCard.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\authentication\\login\\LoginForm.js",["873","874","875"],"import * as Yup from 'yup';\nimport { useState } from 'react';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\nimport { useFormik, Form, FormikProvider } from 'formik';\nimport { Icon } from '@iconify/react';\nimport eyeFill from '@iconify/icons-eva/eye-fill';\nimport eyeOffFill from '@iconify/icons-eva/eye-off-fill';\nimport { API_URL, ADMINLOGIN } from \"../../../Apiconstant/Apiconstant\"\nimport axios from 'axios';\n\n// material\nimport {\n  Link,\n  Stack,\n  Checkbox,\n  TextField,\n  IconButton,\n  InputAdornment,\n  FormControlLabel\n} from '@mui/material';\nimport { LoadingButton } from '@mui/lab';\n\n// ----------------------------------------------------------------------\n\nexport default function LoginForm() {\n  const navigate = useNavigate();\n  const [showPassword, setShowPassword] = useState(false);\n  const LoginSchema = Yup.object().shape({\n    email: Yup.string().required('Email is required'),\n    password: Yup.string().required('Password is required')\n  });\n  const url = `${API_URL}/${ADMINLOGIN}`;\n  const formik = useFormik({\n    initialValues: {\n      email: '',\n      password: '',\n      remember: true\n    },\n    validationSchema: LoginSchema,\n    onSubmit: (values, e) => {\n      axios.post(url, {\n        email: values.email,\n        password: values.password,\n      })\n        .then((response) => {\n          if (response.data.data) {\n            localStorage.setItem('id_token', response.data.data.token)\n            localStorage.setItem('id', response.data.data.id)\n          navigate('/dashboard', { replace: true });\n          } else {\n          }\n        })\n    }\n  });\n\n  const { errors, touched, values, isSubmitting, handleSubmit, getFieldProps } = formik;\n\n  const handleShowPassword = () => {\n    setShowPassword((show) => !show);\n  };\n\n  return (\n    <FormikProvider value={formik}>\n      <Form autoComplete=\"off\" noValidate onSubmit={handleSubmit}>\n        <Stack spacing={3}>\n          <TextField\n            fullWidth\n            autoComplete=\"email\"\n            type=\"email\"\n            label=\"enter email\"\n            {...getFieldProps('email')}\n            error={Boolean(touched.email && errors.email)}\n            helperText={touched.email && errors.email}\n          />\n          <TextField\n            fullWidth\n            autoComplete=\"current-password\"\n            type={showPassword ? 'text' : 'password'}\n            label=\"Password\"\n            {...getFieldProps('password')}\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleShowPassword} edge=\"end\">\n                    <Icon icon={showPassword ? eyeFill : eyeOffFill} />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            error={Boolean(touched.password && errors.password)}\n            helperText={touched.password && errors.password}\n          />\n        </Stack>\n        <Stack direction=\"row\" alignItems=\"center\" justifyContent=\"space-between\" sx={{ my: 2 }}>\n          <FormControlLabel\n            control={<Checkbox {...getFieldProps('remember')} checked={values.remember} />}\n            label=\"Remember me\"\n          />\n        </Stack>\n        <LoadingButton\n          fullWidth\n          size=\"large\"\n          type=\"submit\"\n          variant=\"contained\"\n        >\n          Login\n        </LoadingButton>\n      </Form>\n    </FormikProvider>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\@material-extend\\MHidden.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\LanguagePopover.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\Searchbar.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\AccountPopover.js",["876","877"],"import { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport homeFill from '@iconify/icons-eva/home-fill';\nimport personFill from '@iconify/icons-eva/person-fill';\nimport settings2Fill from '@iconify/icons-eva/settings-2-fill';\n// material\nimport { alpha } from '@mui/material/styles';\nimport { Button, Box, Divider, MenuItem, Typography, Avatar, IconButton } from '@mui/material';\n// components\nimport MenuPopover from '../../components/MenuPopover';\n//\nimport account from '../../_mocks_/account';\nimport {API_URL, ADMINLOGOUT}from \"../../Apiconstant/Apiconstant\"\nimport { logout } from \"../../utils\";\nimport axios from 'axios';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\n// ----------------------------------------------------------------------\n\nconst MENU_OPTIONS = [\n  {\n    label: 'Home',\n    icon: homeFill,\n    linkTo: '/dashboard'\n  },\n];\n\n// ----------------------------------------------------------------------\n\nexport default function AccountPopover() {\n  const navigate = useNavigate();\n\n  const anchorRef = useRef(null);\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleLogout = () => {\n    const url = `${API_URL}/${ADMINLOGOUT}`;\n\n    axios\n      .post(url, {\n             token: localStorage.getItem('id_token'),\n             id: localStorage.getItem('id'),\n\n\n      },\n     ).then((response) => {\n      navigate('/', { replace: true });\n         logout();\n      });\n  };\n  return (\n    <>\n      <IconButton\n        ref={anchorRef}\n        onClick={handleOpen}\n        sx={{\n          padding: 0,\n          width: 44,\n          height: 44,\n          ...(open && {\n            '&:before': {\n              zIndex: 1,\n              content: \"''\",\n              width: '100%',\n              height: '100%',\n              borderRadius: '50%',\n              position: 'absolute',\n              bgcolor: (theme) => alpha(theme.palette.grey[900], 0.72)\n            }\n          })\n        }}\n      >\n        <Avatar src={account.photoURL} alt=\"photoURL\" />\n      </IconButton>\n\n      <MenuPopover\n        open={open}\n        onClose={handleClose}\n        anchorEl={anchorRef.current}\n        sx={{ width: 220 }}\n      >\n        <Box sx={{ my: 1.5, px: 2.5 }}>\n          <Typography variant=\"subtitle1\" noWrap>\n            {account.displayName}\n          </Typography>\n          <Typography variant=\"body2\" sx={{ color: 'text.secondary' }} noWrap>\n            {account.email}\n          </Typography>\n        </Box>\n\n        <Divider sx={{ my: 1 }} />\n\n        {MENU_OPTIONS.map((option) => (\n          <MenuItem\n            key={option.label}\n            to={option.linkTo}\n            component={RouterLink}\n            onClick={handleClose}\n            sx={{ typography: 'body2', py: 1, px: 2.5 }}\n          >\n            <Box\n              component={Icon}\n              icon={option.icon}\n              sx={{\n                mr: 2,\n                width: 24,\n                height: 24\n              }}\n            />\n\n            {option.label}\n          </MenuItem>\n        ))}\n\n        <Box sx={{ p: 2, pt: 1.5 }}>\n          <Button fullWidth color=\"inherit\" variant=\"outlined\"  onClick={() => handleLogout()}>\n            Logout\n          </Button>\n        </Box>\n      </MenuPopover>\n    </>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\layouts\\dashboard\\SidebarConfig.js",["878","879","880","881","882"],"import { Icon } from '@iconify/react';\nimport pieChart2Fill from '@iconify/icons-eva/pie-chart-2-fill';\nimport peopleFill from '@iconify/icons-eva/people-fill';\nimport shoppingBagFill from '@iconify/icons-eva/shopping-bag-fill';\nimport fileTextFill from '@iconify/icons-eva/file-text-fill';\nimport lockFill from '@iconify/icons-eva/lock-fill';\nimport personAddFill from '@iconify/icons-eva/person-add-fill';\nimport alertTriangleFill from '@iconify/icons-eva/alert-triangle-fill';\n\n// ----------------------------------------------------------------------\n\nconst getIcon = (name) => <Icon icon={name} width={22} height={22} />;\n\nconst sidebarConfig = [\n  {\n    title: 'dashboard',\n    path: '/dashboard/app',\n    icon: getIcon(pieChart2Fill)\n  },\n  {\n    title: 'Donation List',\n    path: '/dashboard/donation',\n    icon: getIcon(peopleFill)\n  },\n  {\n    title: 'Contact Details',\n    path: '/dashboard/contact',\n    icon: getIcon(peopleFill)\n  },\n  {\n    title: 'Contact Inquiry',\n    path: '/dashboard/inquiry-contacts',\n    icon: getIcon(pieChart2Fill)\n  },\n  {\n    title: 'Front Setting',\n    path: '/dashboard/front-setting',\n    icon: getIcon(pieChart2Fill)\n  },\n  {\n    title: 'Gallery Image',\n    path: '/dashboard/gallery-image',\n    icon: getIcon(pieChart2Fill)\n  },\n  {\n    title: 'Press Releases',\n    path: '/dashboard/press-releases',\n    icon: getIcon(pieChart2Fill)\n  },\n  {\n    title: 'Annual Reports',\n    path: '/dashboard/annual-reports',\n    icon: getIcon(pieChart2Fill)\n  },\n];\n\nexport default sidebarConfig;\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\NavSection.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\ColorPreview.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\Label.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\utils\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\ColorManyPicker.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Backdrop.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Tooltip.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Button.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Paper.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Input.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Lists.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\theme\\overrides\\Card.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Galleryimage\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Pressreleases\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Othertable\\index.js",[],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Galleryimage\\UserMoreMenu.js",["883","884","885"],"import { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\nimport axios from 'axios'\nimport { API_URL, DELETEGALLRYIMAGE } from \"../../../../Apiconstant/Apiconstant\"\n// ----------------------------------------------------------------------\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport Loader from \"../../../../commocomponent/Loader\"\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nexport default function UserMoreMenu({ id }) {\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const success = () => { }\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const deleteDonaton = (id) => {\n    setLoading(true)\n    const durl = `${API_URL}/${DELETEGALLRYIMAGE}`;\n    axios.post(durl, {\n      id: id,\n    })\n      .then((response) => {\n        if (response.status === 200) {\n          success(toast.success(response.data.message))\n          navigate('/dashboard/gallery-image', { state: {status:'done'} });\n        }\n        setLoading(false)\n      })\n  };\n  return (\n    <>\n      {loading && (\n        <Loader />\n      )}\n\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} onClick={() => deleteDonaton(id)} />\n          <ToastContainer />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Galleryimage\\UserListToolbar.js",["886","887","888","889"],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Galleryimage\\UserListHead.js",["890","891","892","893"],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Pressreleases\\UserMoreMenu.js",["894"],"import { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\nimport axios from 'axios'\nimport { API_URL, PRESSRELEASESDELETE } from \"../../../../Apiconstant/Apiconstant\"\n// ----------------------------------------------------------------------\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nexport default function UserMoreMenu({ id }) {\n  const success = () => { }\n  const navigate = useNavigate();\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const deleteDonaton = (id) => {\n\n    const durl = `${API_URL}/${PRESSRELEASESDELETE}`;\n    axios.post(durl, {\n      id: id,\n    })\n      .then((response) => {\n\n        if (response.status === 200) {\n          success(toast.success(response.data.message))\n          navigate('/dashboard/press-releases', { state: {status:'done'} });\n\n        }\n      })\n  };\n  return (\n    <>\n\n\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n        <MenuItem component={RouterLink} to={`press-releases/edit/${id}`} sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={editFill} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Edit\" primaryTypographyProps={{ variant: 'body2' }} />\n        </MenuItem>\n        <MenuItem sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} onClick={() => deleteDonaton(id)} />\n          <ToastContainer />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Pressreleases\\UserListHead.js",["895","896","897","898"],"C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Pressreleases\\UserListToolbar.js",["899","900","901","902"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  Toolbar,\n  Tooltip,\n  IconButton,\n  Typography,\n  OutlinedInput,\n  InputAdornment\n} from '@mui/material';\nimport axios from 'axios'\nimport { API_URL, PRESSRELEASESDELETEALL } from \"../../../../Apiconstant/Apiconstant\"\n// ----------------------------------------------------------------------\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nUserListToolbar.propTypes = {\n  numSelected: PropTypes.number,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func\n};\n\nexport default function UserListToolbar({ numSelected, filterName, onFilterName ,selected}) {\n  const navigate = useNavigate();\n  const deleteDonation = () => {\n    const success = () => { }\n    const durl = `${API_URL}/${PRESSRELEASESDELETEALL}`;\n    axios.post(durl, {\n      noOfUser:selected\n    }, {\n      headers: {\n          'x-token': localStorage.getItem('id_token'),\n      }\n  })\n      .then((response) => {\n\n        if (response.status === 200) {\n          success(toast.success(response.data.message))\n        }\n        navigate('/dashboard/press-releases', { state: {status:'done'} });\n\n\n      })\n  };\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: 'primary.main',\n          bgcolor: 'primary.lighter'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={filterName}\n          onChange={onFilterName}\n          placeholder=\"Search user...\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n\n            <Icon icon={trash2Fill} onClick={() => deleteDonation()} />\n          </IconButton>\n\n\n        </Tooltip>\n      ) : (\n        <>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Othertable\\UserMoreMenu.js",["903","904","905"],"import { Icon } from '@iconify/react';\nimport { useRef, useState } from 'react';\nimport editFill from '@iconify/icons-eva/edit-fill';\nimport trash2Outline from '@iconify/icons-eva/trash-2-outline';\nimport moreVerticalFill from '@iconify/icons-eva/more-vertical-fill';\n// material\nimport { Menu, MenuItem, IconButton, ListItemIcon, ListItemText } from '@mui/material';\nimport axios from 'axios'\nimport { API_URL, DELETECONTACTINQUIRY } from \"../../../../Apiconstant/Apiconstant\"\n// ----------------------------------------------------------------------\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nexport default function UserMoreMenu({ id }) {\n  const success = () => { }\n  const navigate = useNavigate();\n\n  const ref = useRef(null);\n  const [isOpen, setIsOpen] = useState(false);\n  const deleteDonaton = (id) => {\n\n    const durl = `${API_URL}/${DELETECONTACTINQUIRY}`;\n    axios.post(durl, {\n      id: id,\n    })\n      .then((response) => {\n\n        if (response.status === 200) {\n          success(toast.success(response.data.message))\n          navigate('/dashboard/Inquiry-Contacts', { state: {status:'done'} });\n        }\n      })\n  };\n  return (\n    <>\n    \n\n      <IconButton ref={ref} onClick={() => setIsOpen(true)}>\n        <Icon icon={moreVerticalFill} width={20} height={20} />\n      </IconButton>\n\n      <Menu\n        open={isOpen}\n        anchorEl={ref.current}\n        onClose={() => setIsOpen(false)}\n        PaperProps={{\n          sx: { width: 200, maxWidth: '100%' }\n        }}\n        anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n        transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n      >\n       <MenuItem sx={{ color: 'text.secondary' }}>\n          <ListItemIcon>\n            <Icon icon={trash2Outline} width={24} height={24} />\n          </ListItemIcon>\n          <ListItemText primary=\"Delete\" primaryTypographyProps={{ variant: 'body2' }} onClick={() => deleteDonaton(id)} />\n          <ToastContainer />\n        </MenuItem>\n      </Menu>\n    </>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Othertable\\UserListToolbar.js",["906","907","908","909"],"import PropTypes from 'prop-types';\nimport { Icon } from '@iconify/react';\nimport searchFill from '@iconify/icons-eva/search-fill';\nimport trash2Fill from '@iconify/icons-eva/trash-2-fill';\nimport roundFilterList from '@iconify/icons-ic/round-filter-list';\n// material\nimport { styled } from '@mui/material/styles';\nimport {\n  Box,\n  Toolbar,\n  Tooltip,\n  IconButton,\n  Typography,\n  OutlinedInput,\n  InputAdornment\n} from '@mui/material';\nimport axios from 'axios'\nimport { API_URL, ALLDELETECONTACTINQUIRY } from \"../../../../Apiconstant/Apiconstant\"\n// ----------------------------------------------------------------------\nimport { confirmAlert } from 'react-confirm-alert';\nimport 'react-confirm-alert/src/react-confirm-alert.css';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Link as RouterLink, useNavigate } from 'react-router-dom';\n\nconst RootStyle = styled(Toolbar)(({ theme }) => ({\n  height: 96,\n  display: 'flex',\n  justifyContent: 'space-between',\n  padding: theme.spacing(0, 1, 0, 3)\n}));\n\nconst SearchStyle = styled(OutlinedInput)(({ theme }) => ({\n  width: 240,\n  transition: theme.transitions.create(['box-shadow', 'width'], {\n    easing: theme.transitions.easing.easeInOut,\n    duration: theme.transitions.duration.shorter\n  }),\n  '&.Mui-focused': { width: 320, boxShadow: theme.customShadows.z8 },\n  '& fieldset': {\n    borderWidth: `1px !important`,\n    borderColor: `${theme.palette.grey[500_32]} !important`\n  }\n}));\n\n// ----------------------------------------------------------------------\n\nUserListToolbar.propTypes = {\n  numSelected: PropTypes.number,\n  filterName: PropTypes.string,\n  onFilterName: PropTypes.func\n};\n\nexport default function UserListToolbar({ numSelected, filterName, onFilterName ,selected}) {\n  const navigate = useNavigate();\n  const deleteDonation = () => {\n    const success = () => { }\n    const durl = `${API_URL}/${ALLDELETECONTACTINQUIRY}`;\n    axios.post(durl, {\n      noOfUser:selected\n    }, {\n      headers: {\n          'x-token': localStorage.getItem('id_token'),\n      }\n  })\n      .then((response) => {\n\n        if (response.status === 200) {\n          success(toast.success(response.data.message))\n          navigate('/dashboard/Inquiry-Contacts', { state: {status:'done'} });\n\n        }\n\n      })\n  };\n  return (\n    <RootStyle\n      sx={{\n        ...(numSelected > 0 && {\n          color: 'primary.main',\n          bgcolor: 'primary.lighter'\n        })\n      }}\n    >\n      {numSelected > 0 ? (\n        <Typography component=\"div\" variant=\"subtitle1\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <SearchStyle\n          value={filterName}\n          onChange={onFilterName}\n          placeholder=\"Search user...\"\n          startAdornment={\n            <InputAdornment position=\"start\">\n              <Box component={Icon} icon={searchFill} sx={{ color: 'text.disabled' }} />\n            </InputAdornment>\n          }\n        />\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton>\n\n            <Icon icon={trash2Fill} onClick={() => deleteDonation()} />\n          </IconButton>\n\n\n        </Tooltip>\n      ) : (\n        <>\n        </>\n      )}\n    </RootStyle>\n  );\n}\n","C:\\Users\\Admin\\OneDrive\\Documents\\shubhamcode\\TodayNewwork27admin\\src\\components\\_dashboard\\user\\Othertable\\UserListHead.js",["910","911","912","913"],{"ruleId":"914","replacedBy":"915"},{"ruleId":"916","replacedBy":"917"},{"ruleId":"918","severity":1,"message":"919","line":11,"column":8,"nodeType":"920","messageId":"921","endLine":11,"endColumn":18},{"ruleId":"918","severity":1,"message":"922","line":1,"column":18,"nodeType":"920","messageId":"921","endLine":1,"endColumn":28},{"ruleId":"918","severity":1,"message":"923","line":4,"column":23,"nodeType":"920","messageId":"921","endLine":4,"endColumn":27},{"ruleId":"918","severity":1,"message":"924","line":6,"column":8,"nodeType":"920","messageId":"921","endLine":6,"endColumn":18},{"ruleId":"918","severity":1,"message":"919","line":11,"column":8,"nodeType":"920","messageId":"921","endLine":11,"endColumn":18},{"ruleId":"918","severity":1,"message":"922","line":13,"column":18,"nodeType":"920","messageId":"921","endLine":13,"endColumn":28},{"ruleId":"918","severity":1,"message":"925","line":18,"column":9,"nodeType":"920","messageId":"921","endLine":18,"endColumn":17},{"ruleId":"914","replacedBy":"926"},{"ruleId":"916","replacedBy":"927"},{"ruleId":"918","severity":1,"message":"928","line":4,"column":5,"nodeType":"920","messageId":"921","endLine":4,"endColumn":15},{"ruleId":"918","severity":1,"message":"922","line":17,"column":18,"nodeType":"920","messageId":"921","endLine":17,"endColumn":28},{"ruleId":"918","severity":1,"message":"929","line":23,"column":10,"nodeType":"920","messageId":"921","endLine":23,"endColumn":20},{"ruleId":"918","severity":1,"message":"930","line":23,"column":34,"nodeType":"920","messageId":"921","endLine":23,"endColumn":42},{"ruleId":"918","severity":1,"message":"931","line":40,"column":12,"nodeType":"920","messageId":"921","endLine":40,"endColumn":18},{"ruleId":"918","severity":1,"message":"932","line":40,"column":20,"nodeType":"920","messageId":"921","endLine":40,"endColumn":35},{"ruleId":"918","severity":1,"message":"933","line":41,"column":12,"nodeType":"920","messageId":"921","endLine":41,"endColumn":16},{"ruleId":"918","severity":1,"message":"934","line":41,"column":18,"nodeType":"920","messageId":"921","endLine":41,"endColumn":31},{"ruleId":"918","severity":1,"message":"935","line":10,"column":5,"nodeType":"920","messageId":"921","endLine":10,"endColumn":11},{"ruleId":"918","severity":1,"message":"936","line":19,"column":5,"nodeType":"920","messageId":"921","endLine":19,"endColumn":11},{"ruleId":"918","severity":1,"message":"937","line":26,"column":8,"nodeType":"920","messageId":"921","endLine":26,"endColumn":16},{"ruleId":"918","severity":1,"message":"938","line":27,"column":10,"nodeType":"920","messageId":"921","endLine":27,"endColumn":14},{"ruleId":"918","severity":1,"message":"922","line":29,"column":18,"nodeType":"920","messageId":"921","endLine":29,"endColumn":28},{"ruleId":"918","severity":1,"message":"939","line":29,"column":30,"nodeType":"920","messageId":"921","endLine":29,"endColumn":41},{"ruleId":"918","severity":1,"message":"940","line":33,"column":26,"nodeType":"920","messageId":"921","endLine":33,"endColumn":31},{"ruleId":"918","severity":1,"message":"941","line":99,"column":11,"nodeType":"920","messageId":"921","endLine":99,"endColumn":18},{"ruleId":"918","severity":1,"message":"928","line":4,"column":5,"nodeType":"920","messageId":"921","endLine":4,"endColumn":15},{"ruleId":"918","severity":1,"message":"942","line":14,"column":8,"nodeType":"920","messageId":"921","endLine":14,"endColumn":15},{"ruleId":"918","severity":1,"message":"922","line":19,"column":18,"nodeType":"920","messageId":"921","endLine":19,"endColumn":28},{"ruleId":"918","severity":1,"message":"929","line":25,"column":10,"nodeType":"920","messageId":"921","endLine":25,"endColumn":20},{"ruleId":"918","severity":1,"message":"943","line":25,"column":22,"nodeType":"920","messageId":"921","endLine":25,"endColumn":27},{"ruleId":"918","severity":1,"message":"944","line":25,"column":34,"nodeType":"920","messageId":"921","endLine":25,"endColumn":46},{"ruleId":"918","severity":1,"message":"925","line":46,"column":11,"nodeType":"920","messageId":"921","endLine":46,"endColumn":19},{"ruleId":"918","severity":1,"message":"945","line":50,"column":12,"nodeType":"920","messageId":"921","endLine":50,"endColumn":17},{"ruleId":"918","severity":1,"message":"931","line":52,"column":12,"nodeType":"920","messageId":"921","endLine":52,"endColumn":18},{"ruleId":"918","severity":1,"message":"932","line":52,"column":20,"nodeType":"920","messageId":"921","endLine":52,"endColumn":35},{"ruleId":"918","severity":1,"message":"933","line":53,"column":12,"nodeType":"920","messageId":"921","endLine":53,"endColumn":16},{"ruleId":"918","severity":1,"message":"934","line":53,"column":18,"nodeType":"920","messageId":"921","endLine":53,"endColumn":31},{"ruleId":"918","severity":1,"message":"946","line":114,"column":27,"nodeType":"920","messageId":"921","endLine":114,"endColumn":43},{"ruleId":"918","severity":1,"message":"947","line":116,"column":12,"nodeType":"920","messageId":"921","endLine":116,"endColumn":17},{"ruleId":"948","severity":1,"message":"949","line":545,"column":82,"nodeType":"950","messageId":"951","endLine":545,"endColumn":84},{"ruleId":"952","severity":1,"message":"953","line":548,"column":73,"nodeType":"954","endLine":559,"endColumn":75},{"ruleId":"918","severity":1,"message":"936","line":19,"column":5,"nodeType":"920","messageId":"921","endLine":19,"endColumn":11},{"ruleId":"918","severity":1,"message":"939","line":29,"column":30,"nodeType":"920","messageId":"921","endLine":29,"endColumn":41},{"ruleId":"918","severity":1,"message":"940","line":33,"column":26,"nodeType":"920","messageId":"921","endLine":33,"endColumn":31},{"ruleId":"918","severity":1,"message":"955","line":219,"column":86,"nodeType":"920","messageId":"921","endLine":219,"endColumn":102},{"ruleId":"918","severity":1,"message":"956","line":219,"column":104,"nodeType":"920","messageId":"921","endLine":219,"endColumn":119},{"ruleId":"957","severity":1,"message":"958","line":239,"column":57,"nodeType":"954","endLine":239,"endColumn":152},{"ruleId":"918","severity":1,"message":"940","line":31,"column":26,"nodeType":"920","messageId":"921","endLine":31,"endColumn":31},{"ruleId":"918","severity":1,"message":"941","line":104,"column":11,"nodeType":"920","messageId":"921","endLine":104,"endColumn":18},{"ruleId":"918","severity":1,"message":"936","line":19,"column":5,"nodeType":"920","messageId":"921","endLine":19,"endColumn":11},{"ruleId":"918","severity":1,"message":"937","line":26,"column":8,"nodeType":"920","messageId":"921","endLine":26,"endColumn":16},{"ruleId":"918","severity":1,"message":"938","line":27,"column":10,"nodeType":"920","messageId":"921","endLine":27,"endColumn":14},{"ruleId":"918","severity":1,"message":"942","line":32,"column":8,"nodeType":"920","messageId":"921","endLine":32,"endColumn":15},{"ruleId":"918","severity":1,"message":"922","line":35,"column":18,"nodeType":"920","messageId":"921","endLine":35,"endColumn":28},{"ruleId":"918","severity":1,"message":"925","line":102,"column":11,"nodeType":"920","messageId":"921","endLine":102,"endColumn":19},{"ruleId":"948","severity":1,"message":"949","line":150,"column":42,"nodeType":"950","messageId":"951","endLine":150,"endColumn":44},{"ruleId":"957","severity":1,"message":"958","line":294,"column":57,"nodeType":"954","endLine":294,"endColumn":146},{"ruleId":"918","severity":1,"message":"959","line":1,"column":27,"nodeType":"920","messageId":"921","endLine":1,"endColumn":36},{"ruleId":"918","severity":1,"message":"928","line":4,"column":5,"nodeType":"920","messageId":"921","endLine":4,"endColumn":15},{"ruleId":"918","severity":1,"message":"960","line":6,"column":10,"nodeType":"920","messageId":"921","endLine":6,"endColumn":15},{"ruleId":"918","severity":1,"message":"929","line":7,"column":10,"nodeType":"920","messageId":"921","endLine":7,"endColumn":20},{"ruleId":"918","severity":1,"message":"943","line":7,"column":22,"nodeType":"920","messageId":"921","endLine":7,"endColumn":27},{"ruleId":"918","severity":1,"message":"930","line":7,"column":29,"nodeType":"920","messageId":"921","endLine":7,"endColumn":37},{"ruleId":"918","severity":1,"message":"944","line":7,"column":39,"nodeType":"920","messageId":"921","endLine":7,"endColumn":51},{"ruleId":"918","severity":1,"message":"961","line":19,"column":8,"nodeType":"920","messageId":"921","endLine":19,"endColumn":14},{"ruleId":"918","severity":1,"message":"922","line":22,"column":18,"nodeType":"920","messageId":"921","endLine":22,"endColumn":28},{"ruleId":"918","severity":1,"message":"962","line":23,"column":8,"nodeType":"920","messageId":"921","endLine":23,"endColumn":14},{"ruleId":"918","severity":1,"message":"963","line":31,"column":8,"nodeType":"920","messageId":"921","endLine":31,"endColumn":23},{"ruleId":"918","severity":1,"message":"964","line":79,"column":12,"nodeType":"920","messageId":"921","endLine":79,"endColumn":23},{"ruleId":"918","severity":1,"message":"965","line":79,"column":25,"nodeType":"920","messageId":"921","endLine":79,"endColumn":39},{"ruleId":"918","severity":1,"message":"946","line":101,"column":27,"nodeType":"920","messageId":"921","endLine":101,"endColumn":43},{"ruleId":"918","severity":1,"message":"947","line":103,"column":12,"nodeType":"920","messageId":"921","endLine":103,"endColumn":17},{"ruleId":"918","severity":1,"message":"959","line":1,"column":27,"nodeType":"920","messageId":"921","endLine":1,"endColumn":36},{"ruleId":"918","severity":1,"message":"928","line":4,"column":5,"nodeType":"920","messageId":"921","endLine":4,"endColumn":15},{"ruleId":"918","severity":1,"message":"966","line":4,"column":17,"nodeType":"920","messageId":"921","endLine":4,"endColumn":26},{"ruleId":"918","severity":1,"message":"929","line":7,"column":10,"nodeType":"920","messageId":"921","endLine":7,"endColumn":20},{"ruleId":"918","severity":1,"message":"943","line":7,"column":22,"nodeType":"920","messageId":"921","endLine":7,"endColumn":27},{"ruleId":"918","severity":1,"message":"930","line":7,"column":29,"nodeType":"920","messageId":"921","endLine":7,"endColumn":37},{"ruleId":"918","severity":1,"message":"944","line":7,"column":39,"nodeType":"920","messageId":"921","endLine":7,"endColumn":51},{"ruleId":"918","severity":1,"message":"961","line":20,"column":8,"nodeType":"920","messageId":"921","endLine":20,"endColumn":14},{"ruleId":"918","severity":1,"message":"922","line":23,"column":18,"nodeType":"920","messageId":"921","endLine":23,"endColumn":28},{"ruleId":"918","severity":1,"message":"967","line":26,"column":10,"nodeType":"920","messageId":"921","endLine":26,"endColumn":15},{"ruleId":"918","severity":1,"message":"968","line":28,"column":10,"nodeType":"920","messageId":"921","endLine":28,"endColumn":25},{"ruleId":"918","severity":1,"message":"969","line":28,"column":27,"nodeType":"920","messageId":"921","endLine":28,"endColumn":41},{"ruleId":"918","severity":1,"message":"970","line":28,"column":43,"nodeType":"920","messageId":"921","endLine":28,"endColumn":55},{"ruleId":"918","severity":1,"message":"925","line":41,"column":11,"nodeType":"920","messageId":"921","endLine":41,"endColumn":19},{"ruleId":"918","severity":1,"message":"971","line":48,"column":12,"nodeType":"920","messageId":"921","endLine":48,"endColumn":25},{"ruleId":"918","severity":1,"message":"972","line":52,"column":12,"nodeType":"920","messageId":"921","endLine":52,"endColumn":19},{"ruleId":"918","severity":1,"message":"973","line":83,"column":11,"nodeType":"920","messageId":"921","endLine":83,"endColumn":23},{"ruleId":"918","severity":1,"message":"974","line":92,"column":9,"nodeType":"920","messageId":"921","endLine":92,"endColumn":18},{"ruleId":"918","severity":1,"message":"975","line":94,"column":9,"nodeType":"920","messageId":"921","endLine":94,"endColumn":17},{"ruleId":"918","severity":1,"message":"976","line":101,"column":15,"nodeType":"920","messageId":"921","endLine":101,"endColumn":20},{"ruleId":"948","severity":1,"message":"949","line":116,"column":42,"nodeType":"950","messageId":"951","endLine":116,"endColumn":44},{"ruleId":"918","severity":1,"message":"928","line":4,"column":5,"nodeType":"920","messageId":"921","endLine":4,"endColumn":15},{"ruleId":"918","severity":1,"message":"960","line":6,"column":10,"nodeType":"920","messageId":"921","endLine":6,"endColumn":15},{"ruleId":"918","severity":1,"message":"929","line":7,"column":10,"nodeType":"920","messageId":"921","endLine":7,"endColumn":20},{"ruleId":"918","severity":1,"message":"943","line":7,"column":22,"nodeType":"920","messageId":"921","endLine":7,"endColumn":27},{"ruleId":"918","severity":1,"message":"930","line":7,"column":29,"nodeType":"920","messageId":"921","endLine":7,"endColumn":37},{"ruleId":"918","severity":1,"message":"944","line":7,"column":39,"nodeType":"920","messageId":"921","endLine":7,"endColumn":51},{"ruleId":"918","severity":1,"message":"961","line":19,"column":8,"nodeType":"920","messageId":"921","endLine":19,"endColumn":14},{"ruleId":"918","severity":1,"message":"922","line":22,"column":18,"nodeType":"920","messageId":"921","endLine":22,"endColumn":28},{"ruleId":"918","severity":1,"message":"962","line":23,"column":8,"nodeType":"920","messageId":"921","endLine":23,"endColumn":14},{"ruleId":"918","severity":1,"message":"963","line":33,"column":8,"nodeType":"920","messageId":"921","endLine":33,"endColumn":23},{"ruleId":"918","severity":1,"message":"977","line":90,"column":13,"nodeType":"920","messageId":"921","endLine":90,"endColumn":21},{"ruleId":"978","severity":1,"message":"979","line":115,"column":8,"nodeType":"980","endLine":115,"endColumn":10,"suggestions":"981"},{"ruleId":"918","severity":1,"message":"946","line":135,"column":27,"nodeType":"920","messageId":"921","endLine":135,"endColumn":43},{"ruleId":"918","severity":1,"message":"947","line":137,"column":12,"nodeType":"920","messageId":"921","endLine":137,"endColumn":17},{"ruleId":"948","severity":1,"message":"949","line":262,"column":78,"nodeType":"950","messageId":"951","endLine":262,"endColumn":80},{"ruleId":"952","severity":1,"message":"953","line":265,"column":69,"nodeType":"954","endLine":276,"endColumn":71},{"ruleId":"918","severity":1,"message":"936","line":21,"column":5,"nodeType":"920","messageId":"921","endLine":21,"endColumn":11},{"ruleId":"918","severity":1,"message":"940","line":33,"column":26,"nodeType":"920","messageId":"921","endLine":33,"endColumn":31},{"ruleId":"918","severity":1,"message":"941","line":98,"column":11,"nodeType":"920","messageId":"921","endLine":98,"endColumn":18},{"ruleId":"982","severity":1,"message":"983","line":240,"column":57,"nodeType":"954","messageId":"984","endLine":240,"endColumn":123,"fix":"985"},{"ruleId":"918","severity":1,"message":"960","line":6,"column":10,"nodeType":"920","messageId":"921","endLine":6,"endColumn":15},{"ruleId":"918","severity":1,"message":"961","line":19,"column":8,"nodeType":"920","messageId":"921","endLine":19,"endColumn":14},{"ruleId":"918","severity":1,"message":"922","line":22,"column":18,"nodeType":"920","messageId":"921","endLine":22,"endColumn":28},{"ruleId":"918","severity":1,"message":"968","line":27,"column":10,"nodeType":"920","messageId":"921","endLine":27,"endColumn":25},{"ruleId":"918","severity":1,"message":"969","line":27,"column":27,"nodeType":"920","messageId":"921","endLine":27,"endColumn":41},{"ruleId":"918","severity":1,"message":"970","line":27,"column":43,"nodeType":"920","messageId":"921","endLine":27,"endColumn":55},{"ruleId":"918","severity":1,"message":"931","line":43,"column":12,"nodeType":"920","messageId":"921","endLine":43,"endColumn":18},{"ruleId":"918","severity":1,"message":"932","line":43,"column":20,"nodeType":"920","messageId":"921","endLine":43,"endColumn":35},{"ruleId":"918","severity":1,"message":"933","line":44,"column":12,"nodeType":"920","messageId":"921","endLine":44,"endColumn":16},{"ruleId":"918","severity":1,"message":"934","line":44,"column":18,"nodeType":"920","messageId":"921","endLine":44,"endColumn":31},{"ruleId":"918","severity":1,"message":"964","line":46,"column":12,"nodeType":"920","messageId":"921","endLine":46,"endColumn":23},{"ruleId":"918","severity":1,"message":"986","line":47,"column":12,"nodeType":"920","messageId":"921","endLine":47,"endColumn":19},{"ruleId":"918","severity":1,"message":"987","line":47,"column":21,"nodeType":"920","messageId":"921","endLine":47,"endColumn":37},{"ruleId":"918","severity":1,"message":"988","line":82,"column":12,"nodeType":"920","messageId":"921","endLine":82,"endColumn":20},{"ruleId":"918","severity":1,"message":"989","line":82,"column":22,"nodeType":"920","messageId":"921","endLine":82,"endColumn":33},{"ruleId":"918","severity":1,"message":"960","line":6,"column":10,"nodeType":"920","messageId":"921","endLine":6,"endColumn":15},{"ruleId":"918","severity":1,"message":"961","line":21,"column":8,"nodeType":"920","messageId":"921","endLine":21,"endColumn":14},{"ruleId":"918","severity":1,"message":"922","line":24,"column":18,"nodeType":"920","messageId":"921","endLine":24,"endColumn":28},{"ruleId":"918","severity":1,"message":"968","line":32,"column":10,"nodeType":"920","messageId":"921","endLine":32,"endColumn":25},{"ruleId":"918","severity":1,"message":"969","line":32,"column":27,"nodeType":"920","messageId":"921","endLine":32,"endColumn":41},{"ruleId":"918","severity":1,"message":"970","line":32,"column":43,"nodeType":"920","messageId":"921","endLine":32,"endColumn":55},{"ruleId":"918","severity":1,"message":"977","line":49,"column":13,"nodeType":"920","messageId":"921","endLine":49,"endColumn":21},{"ruleId":"948","severity":1,"message":"949","line":140,"column":56,"nodeType":"950","messageId":"951","endLine":140,"endColumn":58},{"ruleId":"978","severity":1,"message":"990","line":147,"column":8,"nodeType":"980","endLine":147,"endColumn":10,"suggestions":"991"},{"ruleId":"918","severity":1,"message":"992","line":148,"column":13,"nodeType":"920","messageId":"921","endLine":148,"endColumn":17},{"ruleId":"918","severity":1,"message":"993","line":1,"column":8,"nodeType":"920","messageId":"921","endLine":1,"endColumn":13},{"ruleId":"994","severity":1,"message":"995","line":8,"column":36,"nodeType":"996","messageId":"997","endLine":8,"endColumn":37,"suggestions":"998"},{"ruleId":"994","severity":1,"message":"995","line":8,"column":89,"nodeType":"996","messageId":"997","endLine":8,"endColumn":90,"suggestions":"999"},{"ruleId":"918","severity":1,"message":"935","line":6,"column":21,"nodeType":"920","messageId":"921","endLine":6,"endColumn":27},{"ruleId":"918","severity":1,"message":"1000","line":6,"column":37,"nodeType":"920","messageId":"921","endLine":6,"endColumn":47},{"ruleId":"918","severity":1,"message":"1001","line":6,"column":49,"nodeType":"920","messageId":"921","endLine":6,"endColumn":55},{"ruleId":"918","severity":1,"message":"1002","line":6,"column":57,"nodeType":"920","messageId":"921","endLine":6,"endColumn":62},{"ruleId":"918","severity":1,"message":"1003","line":8,"column":8,"nodeType":"920","messageId":"921","endLine":8,"endColumn":12},{"ruleId":"918","severity":1,"message":"1004","line":14,"column":8,"nodeType":"920","messageId":"921","endLine":14,"endColumn":15},{"ruleId":"918","severity":1,"message":"1005","line":28,"column":7,"nodeType":"920","messageId":"921","endLine":28,"endColumn":19},{"ruleId":"978","severity":1,"message":"1006","line":64,"column":6,"nodeType":"980","endLine":64,"endColumn":16,"suggestions":"1007"},{"ruleId":"957","severity":1,"message":"958","line":75,"column":9,"nodeType":"954","endLine":75,"endColumn":63},{"ruleId":"918","severity":1,"message":"1008","line":10,"column":8,"nodeType":"920","messageId":"921","endLine":10,"endColumn":17},{"ruleId":"918","severity":1,"message":"1009","line":12,"column":8,"nodeType":"920","messageId":"921","endLine":12,"endColumn":23},{"ruleId":"918","severity":1,"message":"1010","line":13,"column":8,"nodeType":"920","messageId":"921","endLine":13,"endColumn":28},{"ruleId":"918","severity":1,"message":"1011","line":3,"column":8,"nodeType":"920","messageId":"921","endLine":3,"endColumn":16},{"ruleId":"918","severity":1,"message":"1012","line":13,"column":10,"nodeType":"920","messageId":"921","endLine":13,"endColumn":22},{"ruleId":"918","severity":1,"message":"922","line":16,"column":18,"nodeType":"920","messageId":"921","endLine":16,"endColumn":28},{"ruleId":"918","severity":1,"message":"1013","line":5,"column":8,"nodeType":"920","messageId":"921","endLine":5,"endColumn":23},{"ruleId":"918","severity":1,"message":"1012","line":20,"column":10,"nodeType":"920","messageId":"921","endLine":20,"endColumn":22},{"ruleId":"918","severity":1,"message":"1014","line":22,"column":10,"nodeType":"920","messageId":"921","endLine":22,"endColumn":24},{"ruleId":"918","severity":1,"message":"922","line":24,"column":18,"nodeType":"920","messageId":"921","endLine":24,"endColumn":28},{"ruleId":"918","severity":1,"message":"1015","line":3,"column":10,"nodeType":"920","messageId":"921","endLine":3,"endColumn":24},{"ruleId":"918","severity":1,"message":"1016","line":4,"column":10,"nodeType":"920","messageId":"921","endLine":4,"endColumn":13},{"ruleId":"918","severity":1,"message":"1017","line":4,"column":57,"nodeType":"920","messageId":"921","endLine":4,"endColumn":71},{"ruleId":"918","severity":1,"message":"1018","line":27,"column":9,"nodeType":"920","messageId":"921","endLine":27,"endColumn":26},{"ruleId":"918","severity":1,"message":"1019","line":40,"column":7,"nodeType":"920","messageId":"921","endLine":40,"endColumn":12},{"ruleId":"918","severity":1,"message":"1020","line":13,"column":8,"nodeType":"920","messageId":"921","endLine":13,"endColumn":14},{"ruleId":"918","severity":1,"message":"961","line":14,"column":8,"nodeType":"920","messageId":"921","endLine":14,"endColumn":14},{"ruleId":"918","severity":1,"message":"1019","line":41,"column":7,"nodeType":"920","messageId":"921","endLine":41,"endColumn":12},{"ruleId":"918","severity":1,"message":"1021","line":24,"column":41,"nodeType":"920","messageId":"921","endLine":24,"endColumn":53},{"ruleId":"918","severity":1,"message":"937","line":25,"column":8,"nodeType":"920","messageId":"921","endLine":25,"endColumn":16},{"ruleId":"918","severity":1,"message":"938","line":26,"column":10,"nodeType":"920","messageId":"921","endLine":26,"endColumn":14},{"ruleId":"918","severity":1,"message":"940","line":31,"column":26,"nodeType":"920","messageId":"921","endLine":31,"endColumn":31},{"ruleId":"918","severity":1,"message":"941","line":100,"column":11,"nodeType":"920","messageId":"921","endLine":100,"endColumn":18},{"ruleId":"918","severity":1,"message":"1022","line":19,"column":10,"nodeType":"920","messageId":"921","endLine":19,"endColumn":15},{"ruleId":"918","severity":1,"message":"1012","line":14,"column":10,"nodeType":"920","messageId":"921","endLine":14,"endColumn":22},{"ruleId":"918","severity":1,"message":"1013","line":5,"column":8,"nodeType":"920","messageId":"921","endLine":5,"endColumn":23},{"ruleId":"918","severity":1,"message":"1012","line":20,"column":10,"nodeType":"920","messageId":"921","endLine":20,"endColumn":22},{"ruleId":"918","severity":1,"message":"1014","line":22,"column":10,"nodeType":"920","messageId":"921","endLine":22,"endColumn":24},{"ruleId":"918","severity":1,"message":"922","line":24,"column":18,"nodeType":"920","messageId":"921","endLine":24,"endColumn":28},{"ruleId":"918","severity":1,"message":"1015","line":3,"column":10,"nodeType":"920","messageId":"921","endLine":3,"endColumn":24},{"ruleId":"918","severity":1,"message":"1016","line":4,"column":10,"nodeType":"920","messageId":"921","endLine":4,"endColumn":13},{"ruleId":"918","severity":1,"message":"1017","line":4,"column":57,"nodeType":"920","messageId":"921","endLine":4,"endColumn":71},{"ruleId":"918","severity":1,"message":"1018","line":27,"column":9,"nodeType":"920","messageId":"921","endLine":27,"endColumn":26},{"ruleId":"918","severity":1,"message":"1023","line":28,"column":8,"nodeType":"920","messageId":"921","endLine":28,"endColumn":19},{"ruleId":"918","severity":1,"message":"1024","line":9,"column":11,"nodeType":"920","messageId":"921","endLine":9,"endColumn":16},{"ruleId":"918","severity":1,"message":"1019","line":40,"column":7,"nodeType":"920","messageId":"921","endLine":40,"endColumn":12},{"ruleId":"918","severity":1,"message":"972","line":43,"column":10,"nodeType":"920","messageId":"921","endLine":43,"endColumn":17},{"ruleId":"918","severity":1,"message":"1025","line":43,"column":19,"nodeType":"920","messageId":"921","endLine":43,"endColumn":29},{"ruleId":"918","severity":1,"message":"1020","line":13,"column":8,"nodeType":"920","messageId":"921","endLine":13,"endColumn":14},{"ruleId":"918","severity":1,"message":"961","line":14,"column":8,"nodeType":"920","messageId":"921","endLine":14,"endColumn":14},{"ruleId":"918","severity":1,"message":"1019","line":41,"column":7,"nodeType":"920","messageId":"921","endLine":41,"endColumn":12},{"ruleId":"918","severity":1,"message":"922","line":3,"column":18,"nodeType":"920","messageId":"921","endLine":3,"endColumn":28},{"ruleId":"918","severity":1,"message":"923","line":13,"column":3,"nodeType":"920","messageId":"921","endLine":13,"endColumn":7},{"ruleId":"918","severity":1,"message":"1026","line":56,"column":36,"nodeType":"920","messageId":"921","endLine":56,"endColumn":48},{"ruleId":"918","severity":1,"message":"1027","line":4,"column":8,"nodeType":"920","messageId":"921","endLine":4,"endColumn":18},{"ruleId":"918","severity":1,"message":"1028","line":5,"column":8,"nodeType":"920","messageId":"921","endLine":5,"endColumn":21},{"ruleId":"918","severity":1,"message":"1029","line":4,"column":8,"nodeType":"920","messageId":"921","endLine":4,"endColumn":23},{"ruleId":"918","severity":1,"message":"1030","line":5,"column":8,"nodeType":"920","messageId":"921","endLine":5,"endColumn":20},{"ruleId":"918","severity":1,"message":"1031","line":6,"column":8,"nodeType":"920","messageId":"921","endLine":6,"endColumn":16},{"ruleId":"918","severity":1,"message":"1032","line":7,"column":8,"nodeType":"920","messageId":"921","endLine":7,"endColumn":21},{"ruleId":"918","severity":1,"message":"1033","line":8,"column":8,"nodeType":"920","messageId":"921","endLine":8,"endColumn":25},{"ruleId":"918","severity":1,"message":"1011","line":3,"column":8,"nodeType":"920","messageId":"921","endLine":3,"endColumn":16},{"ruleId":"918","severity":1,"message":"1012","line":13,"column":10,"nodeType":"920","messageId":"921","endLine":13,"endColumn":22},{"ruleId":"918","severity":1,"message":"922","line":16,"column":18,"nodeType":"920","messageId":"921","endLine":16,"endColumn":28},{"ruleId":"918","severity":1,"message":"1013","line":5,"column":8,"nodeType":"920","messageId":"921","endLine":5,"endColumn":23},{"ruleId":"918","severity":1,"message":"1012","line":20,"column":10,"nodeType":"920","messageId":"921","endLine":20,"endColumn":22},{"ruleId":"918","severity":1,"message":"1014","line":22,"column":10,"nodeType":"920","messageId":"921","endLine":22,"endColumn":24},{"ruleId":"918","severity":1,"message":"922","line":24,"column":18,"nodeType":"920","messageId":"921","endLine":24,"endColumn":28},{"ruleId":"918","severity":1,"message":"1015","line":3,"column":10,"nodeType":"920","messageId":"921","endLine":3,"endColumn":24},{"ruleId":"918","severity":1,"message":"1016","line":4,"column":10,"nodeType":"920","messageId":"921","endLine":4,"endColumn":13},{"ruleId":"918","severity":1,"message":"1017","line":4,"column":57,"nodeType":"920","messageId":"921","endLine":4,"endColumn":71},{"ruleId":"918","severity":1,"message":"1018","line":27,"column":9,"nodeType":"920","messageId":"921","endLine":27,"endColumn":26},{"ruleId":"918","severity":1,"message":"1012","line":13,"column":10,"nodeType":"920","messageId":"921","endLine":13,"endColumn":22},{"ruleId":"918","severity":1,"message":"1015","line":3,"column":10,"nodeType":"920","messageId":"921","endLine":3,"endColumn":24},{"ruleId":"918","severity":1,"message":"1016","line":4,"column":10,"nodeType":"920","messageId":"921","endLine":4,"endColumn":13},{"ruleId":"918","severity":1,"message":"1017","line":4,"column":57,"nodeType":"920","messageId":"921","endLine":4,"endColumn":71},{"ruleId":"918","severity":1,"message":"1018","line":27,"column":9,"nodeType":"920","messageId":"921","endLine":27,"endColumn":26},{"ruleId":"918","severity":1,"message":"1013","line":5,"column":8,"nodeType":"920","messageId":"921","endLine":5,"endColumn":23},{"ruleId":"918","severity":1,"message":"1012","line":20,"column":10,"nodeType":"920","messageId":"921","endLine":20,"endColumn":22},{"ruleId":"918","severity":1,"message":"1014","line":22,"column":10,"nodeType":"920","messageId":"921","endLine":22,"endColumn":24},{"ruleId":"918","severity":1,"message":"922","line":24,"column":18,"nodeType":"920","messageId":"921","endLine":24,"endColumn":28},{"ruleId":"918","severity":1,"message":"1011","line":3,"column":8,"nodeType":"920","messageId":"921","endLine":3,"endColumn":16},{"ruleId":"918","severity":1,"message":"1012","line":13,"column":10,"nodeType":"920","messageId":"921","endLine":13,"endColumn":22},{"ruleId":"918","severity":1,"message":"922","line":15,"column":18,"nodeType":"920","messageId":"921","endLine":15,"endColumn":28},{"ruleId":"918","severity":1,"message":"1013","line":5,"column":8,"nodeType":"920","messageId":"921","endLine":5,"endColumn":23},{"ruleId":"918","severity":1,"message":"1012","line":20,"column":10,"nodeType":"920","messageId":"921","endLine":20,"endColumn":22},{"ruleId":"918","severity":1,"message":"1014","line":22,"column":10,"nodeType":"920","messageId":"921","endLine":22,"endColumn":24},{"ruleId":"918","severity":1,"message":"922","line":24,"column":18,"nodeType":"920","messageId":"921","endLine":24,"endColumn":28},{"ruleId":"918","severity":1,"message":"1015","line":3,"column":10,"nodeType":"920","messageId":"921","endLine":3,"endColumn":24},{"ruleId":"918","severity":1,"message":"1016","line":4,"column":10,"nodeType":"920","messageId":"921","endLine":4,"endColumn":13},{"ruleId":"918","severity":1,"message":"1017","line":4,"column":57,"nodeType":"920","messageId":"921","endLine":4,"endColumn":71},{"ruleId":"918","severity":1,"message":"1018","line":27,"column":9,"nodeType":"920","messageId":"921","endLine":27,"endColumn":26},"no-native-reassign",["1034"],"no-negated-in-lhs",["1035"],"no-unused-vars","'AuthSocial' is defined but never used.","Identifier","unusedVar","'RouterLink' is defined but never used.","'Link' is defined but never used.","'AuthLayout' is defined but never used.","'navigate' is assigned a value but never used.",["1034"],["1035"],"'RadioGroup' is defined but never used.","'TEXT_FIELD' is defined but never used.","'PHONEREG' is defined but never used.","'region' is assigned a value but never used.","'SetselectRegion' is assigned a value but never used.","'city' is assigned a value but never used.","'SetselectCity' is assigned a value but never used.","'Button' is defined but never used.","'Switch' is defined but never used.","'plusFill' is defined but never used.","'Icon' is defined but never used.","'useNavigate' is defined but never used.","'toast' is defined but never used.","'classes' is assigned a value but never used.","'ImgCrop' is defined but never used.","'EMAIL' is defined but never used.","'PRICE_NUMBER' is defined but never used.","'state' is assigned a value but never used.","'setSelectedFiles' is assigned a value but never used.","'image' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'shortdescription' is assigned a value but never used.","'longdescription' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'Input' is defined but never used.","'Moment' is defined but never used.","'Select' is defined but never used.","'ReactHtmlParser' is defined but never used.","'userRequest' is assigned a value but never used.","'setUserRequest' is assigned a value but never used.","'TextField' is defined but never used.","'IMAGE' is defined but never used.","'CountryDropdown' is defined but never used.","'RegionDropdown' is defined but never used.","'CityDropdown' is defined but never used.","'selectedFiles' is assigned a value but never used.","'loading' is assigned a value but never used.","'renderPhotos' is assigned a value but never used.","'minOffset' is assigned a value but never used.","'allYears' is assigned a value but never used.","'token' is assigned a value but never used.","'setValue' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["1036"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"1037","text":"1038"},"'country' is assigned a value but never used.","'SetselectCountry' is assigned a value but never used.","'contryid' is assigned a value but never used.","'setContryid' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'url'. Either include them or remove the dependency array.",["1039"],"'user' is assigned a value but never used.","'axios' is defined but never used.","no-useless-escape","Unnecessary escape character: \\+.","Literal","unnecessaryEscape",["1040","1041"],["1042","1043"],"'Typography' is defined but never used.","'Avatar' is defined but never used.","'Stack' is defined but never used.","'Logo' is defined but never used.","'account' is defined but never used.","'AccountStyle' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'isOpenSidebar' and 'onCloseSidebar'. Either include them or remove the dependency array. If 'onCloseSidebar' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["1044"],"'Searchbar' is defined but never used.","'LanguagePopover' is defined but never used.","'NotificationsPopover' is defined but never used.","'editFill' is defined but never used.","'confirmAlert' is defined but never used.","'roundFilterList' is defined but never used.","'ToastContainer' is defined but never used.","'visuallyHidden' is defined but never used.","'Box' is defined but never used.","'TableSortLabel' is defined but never used.","'createSortHandler' is assigned a value but never used.","'TOTAL' is assigned a value but never used.","'moment' is defined but never used.","'UserMoreMenu' is defined but never used.","'field' is assigned a value but never used.","'showEyeIcon' is assigned a value but never used.","'filed' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'isSubmitting' is assigned a value but never used.","'personFill' is defined but never used.","'settings2Fill' is defined but never used.","'shoppingBagFill' is defined but never used.","'fileTextFill' is defined but never used.","'lockFill' is defined but never used.","'personAddFill' is defined but never used.","'alertTriangleFill' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"1045","fix":"1046"},[9125,9125]," rel=\"noreferrer\"",{"desc":"1047","fix":"1048"},{"messageId":"1049","fix":"1050","desc":"1051"},{"messageId":"1052","fix":"1053","desc":"1054"},{"messageId":"1049","fix":"1055","desc":"1051"},{"messageId":"1052","fix":"1056","desc":"1054"},{"desc":"1057","fix":"1058"},"Update the dependencies array to be: [id]",{"range":"1059","text":"1060"},"Update the dependencies array to be: [id, url]",{"range":"1061","text":"1062"},"removeEscape",{"range":"1063","text":"1064"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"1065","text":"1066"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"1067","text":"1064"},{"range":"1068","text":"1066"},"Update the dependencies array to be: [isOpenSidebar, onCloseSidebar, pathname]",{"range":"1069","text":"1070"},[3445,3447],"[id]",[5091,5093],"[id, url]",[382,383],"",[382,382],"\\",[435,436],[435,435],[1746,1756],"[isOpenSidebar, onCloseSidebar, pathname]"]